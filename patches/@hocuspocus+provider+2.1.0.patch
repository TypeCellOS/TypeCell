diff --git a/node_modules/@hocuspocus/provider/CHANGELOG.md b/node_modules/@hocuspocus/provider/CHANGELOG.md
new file mode 100644
index 0000000..a7f7115
--- /dev/null
+++ b/node_modules/@hocuspocus/provider/CHANGELOG.md
@@ -0,0 +1,508 @@
+# Change Log
+
+All notable changes to this project will be documented in this file.
+See [Conventional Commits](https://conventionalcommits.org) for commit guidelines.
+
+# [2.1.0](https://github.com/ueberdosis/hocuspocus/compare/v2.0.6...v2.1.0) (2023-06-03)
+
+
+### Bug Fixes
+
+* export typings for recent typescript ([#602](https://github.com/ueberdosis/hocuspocus/issues/602)) ([551d27f](https://github.com/ueberdosis/hocuspocus/commit/551d27fa6de9c746c67bf0f1e3bb56167aebbca5)), closes [/github.com/artalar/reatom/issues/560#issuecomment-1528997739](https://github.com//github.com/artalar/reatom/issues/560/issues/issuecomment-1528997739)
+
+
+
+
+
+## [2.0.6](https://github.com/ueberdosis/hocuspocus/compare/v2.0.5...v2.0.6) (2023-04-25)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+## [2.0.5](https://github.com/ueberdosis/hocuspocus/compare/v2.0.4...v2.0.5) (2023-04-24)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+## [2.0.4](https://github.com/ueberdosis/hocuspocus/compare/v2.0.3...v2.0.4) (2023-04-23)
+
+
+### Bug Fixes
+
+* Do not retry connection if data is too large ([#586](https://github.com/ueberdosis/hocuspocus/issues/586)) ([462a87f](https://github.com/ueberdosis/hocuspocus/commit/462a87f08bfdcaece4adb1ef8dca25ae42b3cb36))
+
+
+
+
+
+## [2.0.3](https://github.com/ueberdosis/hocuspocus/compare/v2.0.2...v2.0.3) (2023-04-05)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+## [2.0.2](https://github.com/ueberdosis/hocuspocus/compare/v2.0.1...v2.0.2) (2023-04-04)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+## [2.0.1](https://github.com/ueberdosis/hocuspocus/compare/v2.0.0...v2.0.1) (2023-03-30)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [2.0.0](https://github.com/ueberdosis/hocuspocus/compare/v1.1.3...v2.0.0) (2023-03-29)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [2.0.0-beta.0](https://github.com/ueberdosis/hocuspocus/compare/v1.1.1...v2.0.0-beta.0) (2023-03-28)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [2.0.0-alpha.1](https://github.com/ueberdosis/hocuspocus/compare/v2.0.0-alpha.0...v2.0.0-alpha.1) (2023-03-23)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [2.0.0-alpha.0](https://github.com/ueberdosis/hocuspocus/compare/v1.1.0...v2.0.0-alpha.0) (2023-02-28)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.1.0](https://github.com/ueberdosis/hocuspocus/compare/v1.0.2...v1.1.0) (2023-02-24)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+## [1.0.2](https://github.com/ueberdosis/hocuspocus/compare/v1.0.1...v1.0.2) (2023-02-16)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+## [1.0.1](https://github.com/ueberdosis/hocuspocus/compare/v1.0.0...v1.0.1) (2023-01-30)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0](https://github.com/ueberdosis/hocuspocus/compare/v1.0.0-beta.7...v1.0.0) (2023-01-18)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-beta.7](https://github.com/ueberdosis/hocuspocus/compare/v1.0.0-beta.6...v1.0.0-beta.7) (2023-01-11)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-beta.6](https://github.com/ueberdosis/hocuspocus/compare/v1.0.0-beta.5...v1.0.0-beta.6) (2022-12-03)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-beta.5](https://github.com/ueberdosis/hocuspocus/compare/v1.0.0-beta.3...v1.0.0-beta.5) (2022-11-25)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-beta.3](https://github.com/ueberdosis/hocuspocus/compare/v1.0.0-beta.2...v1.0.0-beta.3) (2022-11-03)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-beta.2](https://github.com/ueberdosis/hocuspocus/compare/v1.0.0-beta.1...v1.0.0-beta.2) (2022-09-28)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# 1.0.0-beta.111 (2022-09-28)
+
+
+### Bug Fixes
+
+* Account for this.webSocket being null ([#235](https://github.com/ueberdosis/hocuspocus/issues/235)) ([b1476b6](https://github.com/ueberdosis/hocuspocus/commit/b1476b60f0eceb83d70c1ded2b3139e4f865a869))
+* Empty sync message causes error in client MessageReceiver ([#174](https://github.com/ueberdosis/hocuspocus/issues/174)) ([f9dca69](https://github.com/ueberdosis/hocuspocus/commit/f9dca69eb96d1ede37a0709bd3b7735bf1ff57ba))
+* Remote client awareness not immediately available ([37703f6](https://github.com/ueberdosis/hocuspocus/commit/37703f695f6bf3b0508c287294c5d26d2e888c37))
+
+
+### Features
+
+* Message Authentication ([#163](https://github.com/ueberdosis/hocuspocus/issues/163)) ([a1e68d5](https://github.com/ueberdosis/hocuspocus/commit/a1e68d5a272742bd17dd92522dfc908277343849))
+
+
+
+
+
+# [1.0.0-alpha.40](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.39...@hocuspocus/provider@1.0.0-alpha.40) (2022-08-28)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.39](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.38...@hocuspocus/provider@1.0.0-alpha.39) (2022-07-13)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.38](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.37...@hocuspocus/provider@1.0.0-alpha.38) (2022-06-13)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.37](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.36...@hocuspocus/provider@1.0.0-alpha.37) (2022-06-08)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.36](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.35...@hocuspocus/provider@1.0.0-alpha.36) (2022-04-05)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.35](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.34...@hocuspocus/provider@1.0.0-alpha.35) (2022-03-21)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.34](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.33...@hocuspocus/provider@1.0.0-alpha.34) (2022-03-11)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.33](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.32...@hocuspocus/provider@1.0.0-alpha.33) (2022-03-02)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.32](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.31...@hocuspocus/provider@1.0.0-alpha.32) (2022-02-24)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.31](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.30...@hocuspocus/provider@1.0.0-alpha.31) (2022-02-22)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.30](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.29...@hocuspocus/provider@1.0.0-alpha.30) (2022-02-18)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.29](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.28...@hocuspocus/provider@1.0.0-alpha.29) (2021-12-09)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.28](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.27...@hocuspocus/provider@1.0.0-alpha.28) (2021-12-07)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.27](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.26...@hocuspocus/provider@1.0.0-alpha.27) (2021-12-03)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.26](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.25...@hocuspocus/provider@1.0.0-alpha.26) (2021-11-30)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.25](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.24...@hocuspocus/provider@1.0.0-alpha.25) (2021-11-30)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.24](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.23...@hocuspocus/provider@1.0.0-alpha.24) (2021-11-26)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.23](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.22...@hocuspocus/provider@1.0.0-alpha.23) (2021-11-24)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.22](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.21...@hocuspocus/provider@1.0.0-alpha.22) (2021-11-22)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.21](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.20...@hocuspocus/provider@1.0.0-alpha.21) (2021-10-31)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.20](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.19...@hocuspocus/provider@1.0.0-alpha.20) (2021-10-28)
+
+
+### Bug Fixes
+
+* Account for this.webSocket being null ([#235](https://github.com/ueberdosis/hocuspocus/issues/235)) ([b1476b6](https://github.com/ueberdosis/hocuspocus/commit/b1476b60f0eceb83d70c1ded2b3139e4f865a869))
+
+
+
+
+
+# [1.0.0-alpha.19](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.18...@hocuspocus/provider@1.0.0-alpha.19) (2021-10-15)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.18](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.17...@hocuspocus/provider@1.0.0-alpha.18) (2021-10-06)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.17](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.16...@hocuspocus/provider@1.0.0-alpha.17) (2021-10-05)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.16](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.15...@hocuspocus/provider@1.0.0-alpha.16) (2021-09-17)
+
+
+### Bug Fixes
+
+* Remote client awareness not immediately available ([37703f6](https://github.com/ueberdosis/hocuspocus/commit/37703f695f6bf3b0508c287294c5d26d2e888c37))
+
+
+
+
+
+# [1.0.0-alpha.15](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.14...@hocuspocus/provider@1.0.0-alpha.15) (2021-09-14)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.14](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.13...@hocuspocus/provider@1.0.0-alpha.14) (2021-09-03)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.13](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.12...@hocuspocus/provider@1.0.0-alpha.13) (2021-09-01)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.12](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.11...@hocuspocus/provider@1.0.0-alpha.12) (2021-08-31)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.11](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.10...@hocuspocus/provider@1.0.0-alpha.11) (2021-08-27)
+
+
+### Bug Fixes
+
+* Empty sync message causes error in client MessageReceiver ([#174](https://github.com/ueberdosis/hocuspocus/issues/174)) ([f9dca69](https://github.com/ueberdosis/hocuspocus/commit/f9dca69eb96d1ede37a0709bd3b7735bf1ff57ba))
+
+
+
+
+
+# [1.0.0-alpha.10](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.9...@hocuspocus/provider@1.0.0-alpha.10) (2021-08-19)
+
+
+### Features
+
+* Message Authentication ([#163](https://github.com/ueberdosis/hocuspocus/issues/163)) ([a1e68d5](https://github.com/ueberdosis/hocuspocus/commit/a1e68d5a272742bd17dd92522dfc908277343849))
+
+
+
+
+
+# [1.0.0-alpha.9](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.8...@hocuspocus/provider@1.0.0-alpha.9) (2021-08-19)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.8](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.7...@hocuspocus/provider@1.0.0-alpha.8) (2021-06-23)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.7](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.6...@hocuspocus/provider@1.0.0-alpha.7) (2021-06-22)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.6](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.5...@hocuspocus/provider@1.0.0-alpha.6) (2021-06-11)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.5](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.4...@hocuspocus/provider@1.0.0-alpha.5) (2021-06-11)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.4](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.3...@hocuspocus/provider@1.0.0-alpha.4) (2021-06-09)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# [1.0.0-alpha.3](https://github.com/ueberdosis/hocuspocus/compare/@hocuspocus/provider@1.0.0-alpha.2...@hocuspocus/provider@1.0.0-alpha.3) (2021-06-09)
+
+**Note:** Version bump only for package @hocuspocus/provider
+
+
+
+
+
+# 1.0.0-alpha.2 (2021-06-08)
+
+**Note:** Version bump only for package @hocuspocus/provider
diff --git a/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.cjs b/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.cjs
index c00693b..fc67b7c 100644
--- a/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.cjs
+++ b/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.cjs
@@ -2,8 +2,8 @@
 
 Object.defineProperty(exports, '__esModule', { value: true });
 
-var Y = require('yjs');
 var common = require('@hocuspocus/common');
+var Y = require('yjs');
 var attempt = require('@lifeomic/attempt');
 
 function _interopNamespace(e) {
@@ -74,6 +74,22 @@ const setIfUndefined = (map, key, createT) => {
 
 const create$1 = () => new Set();
 
+/**
+ * Utility module to work with Arrays.
+ *
+ * @module array
+ */
+
+/**
+ * Transforms something array-like to an actual Array.
+ *
+ * @function
+ * @template T
+ * @param {ArrayLike<T>|Iterable<T>} arraylike
+ * @return {T}
+ */
+const from = Array.from;
+
 /**
  * Utility module to work with strings.
  *
@@ -236,22 +252,6 @@ const onChange = eventHandler => usePolyfill || addEventListener('storage', /**
 /* c8 ignore next */
 const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler));
 
-/**
- * Utility module to work with Arrays.
- *
- * @module array
- */
-
-/**
- * Transforms something array-like to an actual Array.
- *
- * @function
- * @template T
- * @param {ArrayLike<T>|Iterable<T>} arraylike
- * @return {T}
- */
-const from = Array.from;
-
 /**
  * Utility functions for working with EcmaScript objects.
  *
@@ -399,7 +399,6 @@ const equalityDeep = (a, b) => {
  */
 // @ts-ignore
 const isOneOf = (value, options) => options.includes(value);
-/* c8 ignore stop */
 
 /**
  * Isomorphic module to work access the environment (query params, env variables).
@@ -531,7 +530,9 @@ const min = (a, b) => a < b ? a : b;
 const max = (a, b) => a > b ? a : b;
 
 /* eslint-env browser */
+const BIT7 = 64;
 const BIT8 = 128;
+const BITS6 = 63;
 const BITS7 = 127;
 
 /**
@@ -889,6 +890,44 @@ const readVarUint = decoder => {
   throw errorUnexpectedEndOfArray
 };
 
+/**
+ * Read signed integer (32bit) with variable length.
+ * 1/8th of the storage is used as encoding overhead.
+ *  * numbers < 2^7 is stored in one bytlength
+ *  * numbers < 2^14 is stored in two bylength
+ * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.
+ *
+ * @function
+ * @param {Decoder} decoder
+ * @return {number} An unsigned integer.length
+ */
+const readVarInt = decoder => {
+  let r = decoder.arr[decoder.pos++];
+  let num = r & BITS6;
+  let mult = 64;
+  const sign = (r & BIT7) > 0 ? -1 : 1;
+  if ((r & BIT8) === 0) {
+    // don't continue reading
+    return sign * num
+  }
+  const len = decoder.arr.length;
+  while (decoder.pos < len) {
+    r = decoder.arr[decoder.pos++];
+    // num = num | ((r & binary.BITS7) << len)
+    num = num + (r & BITS7) * mult;
+    mult *= 128;
+    if (r < BIT8) {
+      return sign * num
+    }
+    /* c8 ignore start */
+    if (num > MAX_SAFE_INTEGER) {
+      throw errorIntegerOutOfRange
+    }
+    /* c8 ignore stop */
+  }
+  throw errorUnexpectedEndOfArray
+};
+
 /**
  * We don't test this function anymore as we use native decoding/encoding by default now.
  * Better not modify this anymore..
@@ -1136,6 +1175,50 @@ const publish = (room, data, origin = null) => {
   c.subs.forEach(sub => sub(data, origin));
 };
 
+/**
+ * Mutual exclude for JavaScript.
+ *
+ * @module mutex
+ */
+
+/**
+ * @callback mutex
+ * @param {function():void} cb Only executed when this mutex is not in the current stack
+ * @param {function():void} [elseCb] Executed when this mutex is in the current stack
+ */
+
+/**
+ * Creates a mutual exclude function with the following property:
+ *
+ * ```js
+ * const mutex = createMutex()
+ * mutex(() => {
+ *   // This function is immediately executed
+ *   mutex(() => {
+ *     // This function is not executed, as the mutex is already active.
+ *   })
+ * })
+ * ```
+ *
+ * @return {mutex} A mutual exclude function
+ * @public
+ */
+const createMutex = () => {
+  let token = true;
+  return (f, g) => {
+    if (token) {
+      token = false;
+      try {
+        f();
+      } finally {
+        token = true;
+      }
+    } else if (g !== undefined) {
+      g();
+    }
+  }
+};
+
 /**
  * Utility module to work with time.
  *
@@ -1486,50 +1569,6 @@ const applyAwarenessUpdate = (awareness, update, origin) => {
   }
 };
 
-/**
- * Mutual exclude for JavaScript.
- *
- * @module mutex
- */
-
-/**
- * @callback mutex
- * @param {function():void} cb Only executed when this mutex is not in the current stack
- * @param {function():void} [elseCb] Executed when this mutex is in the current stack
- */
-
-/**
- * Creates a mutual exclude function with the following property:
- *
- * ```js
- * const mutex = createMutex()
- * mutex(() => {
- *   // This function is immediately executed
- *   mutex(() => {
- *     // This function is not executed, as the mutex is already active.
- *   })
- * })
- * ```
- *
- * @return {mutex} A mutual exclude function
- * @public
- */
-const createMutex = () => {
-  let token = true;
-  return (f, g) => {
-    if (token) {
-      token = false;
-      try {
-        f();
-      } finally {
-        token = true;
-      }
-    } else if (g !== undefined) {
-      g();
-    }
-  }
-};
-
 class EventEmitter {
     constructor() {
         this.callbacks = {};
@@ -1565,712 +1604,690 @@ class EventEmitter {
     }
 }
 
-class IncomingMessage {
-    constructor(data) {
-        this.data = data;
-        this.encoder = createEncoder();
-        this.decoder = createDecoder(new Uint8Array(this.data));
-    }
-    readVarUint() {
-        return readVarUint(this.decoder);
-    }
-    readVarString() {
-        return readVarString(this.decoder);
-    }
-    readVarUint8Array() {
-        return readVarUint8Array(this.decoder);
-    }
-    writeVarUint(type) {
-        return writeVarUint(this.encoder, type);
-    }
-    writeVarString(string) {
-        return writeVarString(this.encoder, string);
-    }
-    writeVarUint8Array(data) {
-        return writeVarUint8Array(this.encoder, data);
-    }
-    length() {
-        return length(this.encoder);
-    }
-}
-
 /**
- * @module sync-protocol
- */
-
-/**
- * @typedef {Map<number, number>} StateMap
- */
-
-/**
- * Core Yjs defines two message types:
- * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.
- * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it
- *   received all information from the remote client.
- *
- * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection
- * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both
- * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.
- *
- * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.
- * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies
- * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the
- * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can
- * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.
- * Therefore it is necesarry that the client initiates the sync.
- *
- * Construction of a message:
- * [messageType : varUint, message definition..]
- *
- * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!
+ * Utility module to work with urls.
  *
- * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)
+ * @module url
  */
 
-const messageYjsSyncStep1 = 0;
-const messageYjsSyncStep2 = 1;
-const messageYjsUpdate = 2;
-
 /**
- * Create a sync step 1 message based on the state of the current shared document.
- *
- * @param {encoding.Encoder} encoder
- * @param {Y.Doc} doc
+ * @param {Object<string,string>} params
+ * @return {string}
  */
-const writeSyncStep1 = (encoder, doc) => {
-  writeVarUint(encoder, messageYjsSyncStep1);
-  const sv = Y__namespace.encodeStateVector(doc);
-  writeVarUint8Array(encoder, sv);
-};
+const encodeQueryParams = params =>
+  map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&');
 
-/**
- * @param {encoding.Encoder} encoder
- * @param {Y.Doc} doc
- * @param {Uint8Array} [encodedStateVector]
- */
-const writeSyncStep2 = (encoder, doc, encodedStateVector) => {
-  writeVarUint(encoder, messageYjsSyncStep2);
-  writeVarUint8Array(encoder, Y__namespace.encodeStateAsUpdate(doc, encodedStateVector));
-};
+exports.MessageType = void 0;
+(function (MessageType) {
+    MessageType[MessageType["Sync"] = 0] = "Sync";
+    MessageType[MessageType["Awareness"] = 1] = "Awareness";
+    MessageType[MessageType["Auth"] = 2] = "Auth";
+    MessageType[MessageType["QueryAwareness"] = 3] = "QueryAwareness";
+    MessageType[MessageType["Stateless"] = 5] = "Stateless";
+    MessageType[MessageType["CLOSE"] = 7] = "CLOSE";
+    MessageType[MessageType["SyncStatus"] = 8] = "SyncStatus";
+})(exports.MessageType || (exports.MessageType = {}));
+exports.WebSocketStatus = void 0;
+(function (WebSocketStatus) {
+    WebSocketStatus["Connecting"] = "connecting";
+    WebSocketStatus["Connected"] = "connected";
+    WebSocketStatus["Disconnected"] = "disconnected";
+})(exports.WebSocketStatus || (exports.WebSocketStatus = {}));
 
-/**
- * Read SyncStep1 message and reply with SyncStep2.
- *
- * @param {decoding.Decoder} decoder The reply to the received message
- * @param {encoding.Encoder} encoder The received message
- * @param {Y.Doc} doc
- */
-const readSyncStep1 = (decoder, encoder, doc) =>
-  writeSyncStep2(encoder, doc, readVarUint8Array(decoder));
-
-/**
- * Read and apply Structs and then DeleteStore to a y instance.
- *
- * @param {decoding.Decoder} decoder
- * @param {Y.Doc} doc
- * @param {any} transactionOrigin
- */
-const readSyncStep2 = (decoder, doc, transactionOrigin) => {
-  try {
-    Y__namespace.applyUpdate(doc, readVarUint8Array(decoder), transactionOrigin);
-  } catch (error) {
-    // This catches errors that are thrown by event handlers
-    console.error('Caught error while handling a Yjs update', error);
-  }
-};
-
-/**
- * @param {encoding.Encoder} encoder
- * @param {Uint8Array} update
- */
-const writeUpdate = (encoder, update) => {
-  writeVarUint(encoder, messageYjsUpdate);
-  writeVarUint8Array(encoder, update);
-};
-
-/**
- * Read and apply Structs and then DeleteStore to a y instance.
- *
- * @param {decoding.Decoder} decoder
- * @param {Y.Doc} doc
- * @param {any} transactionOrigin
- */
-const readUpdate = readSyncStep2;
-
-/**
- * @param {decoding.Decoder} decoder A message received from another client
- * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.
- * @param {Y.Doc} doc
- * @param {any} transactionOrigin
- */
-const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {
-  const messageType = readVarUint(decoder);
-  switch (messageType) {
-    case messageYjsSyncStep1:
-      readSyncStep1(decoder, encoder, doc);
-      break
-    case messageYjsSyncStep2:
-      readSyncStep2(decoder, doc, transactionOrigin);
-      break
-    case messageYjsUpdate:
-      readUpdate(decoder, doc, transactionOrigin);
-      break
-    default:
-      throw new Error('Unknown message type')
-  }
-  return messageType
-};
-
-exports.MessageType = void 0;
-(function (MessageType) {
-    MessageType[MessageType["Sync"] = 0] = "Sync";
-    MessageType[MessageType["Awareness"] = 1] = "Awareness";
-    MessageType[MessageType["Auth"] = 2] = "Auth";
-    MessageType[MessageType["QueryAwareness"] = 3] = "QueryAwareness";
-    MessageType[MessageType["Stateless"] = 5] = "Stateless";
-    MessageType[MessageType["CLOSE"] = 7] = "CLOSE";
-})(exports.MessageType || (exports.MessageType = {}));
-exports.WebSocketStatus = void 0;
-(function (WebSocketStatus) {
-    WebSocketStatus["Connecting"] = "connecting";
-    WebSocketStatus["Connected"] = "connected";
-    WebSocketStatus["Disconnected"] = "disconnected";
-})(exports.WebSocketStatus || (exports.WebSocketStatus = {}));
-
-class OutgoingMessage {
-    constructor() {
-        this.encoder = createEncoder();
+class HocuspocusProviderWebsocket extends EventEmitter {
+    constructor(configuration) {
+        super();
+        this.messageQueue = [];
+        this.configuration = {
+            url: '',
+            // @ts-ignore
+            document: undefined,
+            // @ts-ignore
+            awareness: undefined,
+            WebSocketPolyfill: undefined,
+            parameters: {},
+            connect: true,
+            broadcast: true,
+            forceSyncInterval: false,
+            // TODO: this should depend on awareness.outdatedTime
+            messageReconnectTimeout: 30000,
+            // 1 second
+            delay: 1000,
+            // instant
+            initialDelay: 0,
+            // double the delay each time
+            factor: 2,
+            // unlimited retries
+            maxAttempts: 0,
+            // wait at least 1 second
+            minDelay: 1000,
+            // at least every 30 seconds
+            maxDelay: 30000,
+            // randomize
+            jitter: true,
+            // retry forever
+            timeout: 0,
+            onOpen: () => null,
+            onConnect: () => null,
+            onMessage: () => null,
+            onOutgoingMessage: () => null,
+            onStatus: () => null,
+            onDisconnect: () => null,
+            onClose: () => null,
+            onDestroy: () => null,
+            onAwarenessUpdate: () => null,
+            onAwarenessChange: () => null,
+            quiet: false,
+        };
+        this.subscribedToBroadcastChannel = false;
+        this.webSocket = null;
+        this.shouldConnect = true;
+        this.status = exports.WebSocketStatus.Disconnected;
+        this.lastMessageReceived = 0;
+        this.mux = createMutex();
+        this.intervals = {
+            forceSync: null,
+            connectionChecker: null,
+        };
+        this.connectionAttempt = null;
+        this.receivedOnOpenPayload = undefined;
+        this.receivedOnStatusPayload = undefined;
+        this.boundConnect = this.connect.bind(this);
+        this.setConfiguration(configuration);
+        this.configuration.WebSocketPolyfill = configuration.WebSocketPolyfill ? configuration.WebSocketPolyfill : WebSocket;
+        this.on('open', this.configuration.onOpen);
+        this.on('open', this.onOpen.bind(this));
+        this.on('connect', this.configuration.onConnect);
+        this.on('message', this.configuration.onMessage);
+        this.on('outgoingMessage', this.configuration.onOutgoingMessage);
+        this.on('status', this.configuration.onStatus);
+        this.on('status', this.onStatus.bind(this));
+        this.on('disconnect', this.configuration.onDisconnect);
+        this.on('close', this.configuration.onClose);
+        this.on('destroy', this.configuration.onDestroy);
+        this.on('awarenessUpdate', this.configuration.onAwarenessUpdate);
+        this.on('awarenessChange', this.configuration.onAwarenessChange);
+        this.on('close', this.onClose.bind(this));
+        this.on('message', this.onMessage.bind(this));
+        this.registerEventListeners();
+        this.intervals.connectionChecker = setInterval(this.checkConnection.bind(this), this.configuration.messageReconnectTimeout / 10);
+        if (typeof configuration.connect !== 'undefined') {
+            this.shouldConnect = configuration.connect;
+        }
+        if (!this.shouldConnect) {
+            return;
+        }
+        this.connect();
     }
-    get(args) {
-        return args.encoder;
+    async onOpen(event) {
+        this.receivedOnOpenPayload = event;
     }
-    toUint8Array() {
-        return toUint8Array(this.encoder);
+    async onStatus(data) {
+        this.receivedOnStatusPayload = data;
     }
-}
-
-class MessageReceiver {
-    constructor(message) {
-        this.broadcasted = false;
-        this.message = message;
+    attach(provider) {
+        if (this.receivedOnOpenPayload) {
+            provider.onOpen(this.receivedOnOpenPayload);
+        }
+        if (this.receivedOnStatusPayload) {
+            provider.onStatus(this.receivedOnStatusPayload);
+        }
     }
-    setBroadcasted(value) {
-        this.broadcasted = value;
-        return this;
+    detach(provider) {
+        // tell the server to remove the listener
     }
-    apply(provider, emitSynced = true) {
-        const { message } = this;
-        const type = message.readVarUint();
-        const emptyMessageLength = message.length();
-        switch (type) {
-            case exports.MessageType.Sync:
-                this.applySyncMessage(provider, emitSynced);
-                break;
-            case exports.MessageType.Awareness:
-                this.applyAwarenessMessage(provider);
-                break;
-            case exports.MessageType.Auth:
-                this.applyAuthMessage(provider);
-                break;
-            case exports.MessageType.QueryAwareness:
-                this.applyQueryAwarenessMessage(provider);
-                break;
-            case exports.MessageType.Stateless:
-                provider.receiveStateless(readVarString(message.decoder));
-                break;
-            default:
-                throw new Error(`Can’t apply message of unknown type: ${type}`);
+    setConfiguration(configuration = {}) {
+        this.configuration = { ...this.configuration, ...configuration };
+    }
+    async connect() {
+        if (this.status === exports.WebSocketStatus.Connected) {
+            return;
         }
-        // Reply
-        if (message.length() > emptyMessageLength + 1) { // length of documentName (considered in emptyMessageLength plus length of yjs sync type, set in applySyncMessage)
-            if (this.broadcasted) {
-                // TODO: Some weird TypeScript error
-                // @ts-ignore
-                provider.broadcast(OutgoingMessage, { encoder: message.encoder });
+        // Always cancel any previously initiated connection retryer instances
+        if (this.cancelWebsocketRetry) {
+            this.cancelWebsocketRetry();
+            this.cancelWebsocketRetry = undefined;
+        }
+        this.shouldConnect = true;
+        const abortableRetry = () => {
+            let cancelAttempt = false;
+            const retryPromise = attempt.retry(this.createWebSocketConnection.bind(this), {
+                delay: this.configuration.delay,
+                initialDelay: this.configuration.initialDelay,
+                factor: this.configuration.factor,
+                maxAttempts: this.configuration.maxAttempts,
+                minDelay: this.configuration.minDelay,
+                maxDelay: this.configuration.maxDelay,
+                jitter: this.configuration.jitter,
+                timeout: this.configuration.timeout,
+                beforeAttempt: context => {
+                    if (!this.shouldConnect || cancelAttempt) {
+                        context.abort();
+                    }
+                },
+            }).catch((error) => {
+                // If we aborted the connection attempt then don’t throw an error
+                // ref: https://github.com/lifeomic/attempt/blob/master/src/index.ts#L136
+                if (error && error.code !== 'ATTEMPT_ABORTED') {
+                    throw error;
+                }
+            });
+            return {
+                retryPromise,
+                cancelFunc: () => {
+                    cancelAttempt = true;
+                },
+            };
+        };
+        const { retryPromise, cancelFunc } = abortableRetry();
+        this.cancelWebsocketRetry = cancelFunc;
+        return retryPromise;
+    }
+    createWebSocketConnection() {
+        return new Promise((resolve, reject) => {
+            if (this.webSocket) {
+                this.messageQueue = [];
+                this.webSocket.close();
+                this.webSocket = null;
+            }
+            // Init the WebSocket connection
+            const ws = new this.configuration.WebSocketPolyfill(this.url);
+            ws.binaryType = 'arraybuffer';
+            ws.onmessage = (payload) => this.emit('message', payload);
+            ws.onclose = (payload) => this.emit('close', { event: payload });
+            ws.onopen = (payload) => this.emit('open', payload);
+            ws.onerror = (err) => {
+                reject(err);
+            };
+            this.webSocket = ws;
+            // Reset the status
+            this.status = exports.WebSocketStatus.Connecting;
+            this.emit('status', { status: exports.WebSocketStatus.Connecting });
+            // Store resolve/reject for later use
+            this.connectionAttempt = {
+                resolve,
+                reject,
+            };
+        });
+    }
+    onMessage(event) {
+        this.resolveConnectionAttempt();
+    }
+    resolveConnectionAttempt() {
+        if (this.connectionAttempt) {
+            this.connectionAttempt.resolve();
+            this.connectionAttempt = null;
+            this.status = exports.WebSocketStatus.Connected;
+            this.emit('status', { status: exports.WebSocketStatus.Connected });
+            this.emit('connect');
+            this.messageQueue.forEach(message => this.send(message));
+            this.messageQueue = [];
+        }
+    }
+    stopConnectionAttempt() {
+        this.connectionAttempt = null;
+    }
+    rejectConnectionAttempt() {
+        var _a;
+        (_a = this.connectionAttempt) === null || _a === void 0 ? void 0 : _a.reject();
+        this.connectionAttempt = null;
+    }
+    checkConnection() {
+        var _a;
+        // Don’t check the connection when it’s not even established
+        if (this.status !== exports.WebSocketStatus.Connected) {
+            return;
+        }
+        // Don’t close then connection while waiting for the first message
+        if (!this.lastMessageReceived) {
+            return;
+        }
+        // Don’t close the connection when a message was received recently
+        if (this.configuration.messageReconnectTimeout >= getUnixTime() - this.lastMessageReceived) {
+            return;
+        }
+        // No message received in a long time, not even your own
+        // Awareness updates, which are updated every 15 seconds.
+        (_a = this.webSocket) === null || _a === void 0 ? void 0 : _a.close();
+        this.messageQueue = [];
+    }
+    registerEventListeners() {
+        if (typeof window === 'undefined') {
+            return;
+        }
+        window.addEventListener('online', this.boundConnect);
+    }
+    // Ensure that the URL always ends with /
+    get serverUrl() {
+        while (this.configuration.url[this.configuration.url.length - 1] === '/') {
+            return this.configuration.url.slice(0, this.configuration.url.length - 1);
+        }
+        return this.configuration.url;
+    }
+    get url() {
+        const encodedParams = encodeQueryParams(this.configuration.parameters);
+        return `${this.serverUrl}${encodedParams.length === 0 ? '' : `?${encodedParams}`}`;
+    }
+    disconnect() {
+        this.shouldConnect = false;
+        if (this.webSocket === null) {
+            return;
+        }
+        try {
+            this.webSocket.close();
+            this.messageQueue = [];
+        }
+        catch {
+            //
+        }
+    }
+    send(message) {
+        var _a;
+        if (((_a = this.webSocket) === null || _a === void 0 ? void 0 : _a.readyState) === common.WsReadyStates.Open) {
+            this.webSocket.send(message);
+        }
+        else {
+            this.messageQueue.push(message);
+        }
+    }
+    onClose({ event }) {
+        this.webSocket = null;
+        if (this.status === exports.WebSocketStatus.Connected) {
+            this.status = exports.WebSocketStatus.Disconnected;
+            this.emit('status', { status: exports.WebSocketStatus.Disconnected });
+            this.emit('disconnect', { event });
+        }
+        if (event.code === common.Unauthorized.code) {
+            if (event.reason === common.Unauthorized.reason) {
+                console.warn('[HocuspocusProvider] An authentication token is required, but you didn’t send one. Try adding a `token` to your HocuspocusProvider configuration. Won’t try again.');
             }
             else {
-                // TODO: Some weird TypeScript error
-                // @ts-ignore
-                provider.send(OutgoingMessage, { encoder: message.encoder });
+                console.warn(`[HocuspocusProvider] Connection closed with status Unauthorized: ${event.reason}`);
             }
+            this.shouldConnect = false;
+        }
+        if (event.code === common.Forbidden.code) {
+            if (!this.configuration.quiet) {
+                console.warn('[HocuspocusProvider] The provided authentication token isn’t allowed to connect to this server. Will try again.');
+                return; // TODO REMOVE ME
+            }
+        }
+        if (event.code === common.MessageTooBig.code) {
+            console.warn(`[HocuspocusProvider] Connection closed with status MessageTooBig: ${event.reason}`);
+            this.shouldConnect = false;
+        }
+        if (this.connectionAttempt) {
+            // That connection attempt failed.
+            this.rejectConnectionAttempt();
+        }
+        else if (this.shouldConnect) {
+            // The connection was closed by the server. Let’s just try again.
+            this.connect();
+        }
+        // If we’ll reconnect, we’re done for now.
+        if (this.shouldConnect) {
+            return;
+        }
+        // The status is set correctly already.
+        if (this.status === exports.WebSocketStatus.Disconnected) {
+            return;
         }
+        // Let’s update the connection status.
+        this.status = exports.WebSocketStatus.Disconnected;
+        this.emit('status', { status: exports.WebSocketStatus.Disconnected });
+        this.emit('disconnect', { event });
     }
-    applySyncMessage(provider, emitSynced) {
-        const { message } = this;
-        message.writeVarUint(exports.MessageType.Sync);
-        // Apply update
-        const syncMessageType = readSyncMessage(message.decoder, message.encoder, provider.document, provider);
-        // Synced once we receive Step2
-        if (emitSynced && syncMessageType === messageYjsSyncStep2) {
-            provider.synced = true;
+    destroy() {
+        this.emit('destroy');
+        if (this.intervals.forceSync) {
+            clearInterval(this.intervals.forceSync);
         }
-        if (syncMessageType === messageYjsUpdate || syncMessageType === messageYjsSyncStep2) {
-            if (provider.unsyncedChanges > 0) {
-                provider.updateUnsyncedChanges(-1);
-            }
+        clearInterval(this.intervals.connectionChecker);
+        // If there is still a connection attempt outstanding then we should stop
+        // it before calling disconnect, otherwise it will be rejected in the onClose
+        // handler and trigger a retry
+        this.stopConnectionAttempt();
+        this.disconnect();
+        this.removeAllListeners();
+        if (typeof window === 'undefined') {
+            return;
         }
-    }
-    applyAwarenessMessage(provider) {
-        const { message } = this;
-        applyAwarenessUpdate(provider.awareness, message.readVarUint8Array(), provider);
-    }
-    applyAuthMessage(provider) {
-        const { message } = this;
-        common.readAuthMessage(message.decoder, provider.permissionDeniedHandler.bind(provider), provider.authenticatedHandler.bind(provider));
-    }
-    applyQueryAwarenessMessage(provider) {
-        const { message } = this;
-        message.writeVarUint(exports.MessageType.Awareness);
-        message.writeVarUint8Array(encodeAwarenessUpdate(provider.awareness, Array.from(provider.awareness.getStates().keys())));
+        window.removeEventListener('online', this.boundConnect);
     }
 }
 
-class MessageSender {
-    constructor(Message, args = {}) {
-        this.message = new Message();
-        this.encoder = this.message.get(args);
+class IncomingMessage {
+    constructor(data) {
+        this.data = data;
+        this.encoder = createEncoder();
+        this.decoder = createDecoder(new Uint8Array(this.data));
     }
-    create() {
-        return toUint8Array(this.encoder);
+    readVarUint() {
+        return readVarUint(this.decoder);
     }
-    send(webSocket) {
-        webSocket === null || webSocket === void 0 ? void 0 : webSocket.send(this.create());
+    readVarString() {
+        return readVarString(this.decoder);
     }
-    broadcast(channel) {
-        publish(channel, this.create());
+    readVarUint8Array() {
+        return readVarUint8Array(this.decoder);
     }
-}
-
-class SyncStepOneMessage extends OutgoingMessage {
-    constructor() {
-        super(...arguments);
-        this.type = exports.MessageType.Sync;
-        this.description = 'First sync step';
+    writeVarUint(type) {
+        return writeVarUint(this.encoder, type);
     }
-    get(args) {
-        if (typeof args.document === 'undefined') {
-            throw new Error('The sync step one message requires document as an argument');
-        }
-        writeVarString(this.encoder, args.documentName);
-        writeVarUint(this.encoder, this.type);
-        writeSyncStep1(this.encoder, args.document);
-        return this.encoder;
+    writeVarString(string) {
+        return writeVarString(this.encoder, string);
     }
-}
-
-class SyncStepTwoMessage extends OutgoingMessage {
-    constructor() {
-        super(...arguments);
-        this.type = exports.MessageType.Sync;
-        this.description = 'Second sync step';
+    writeVarUint8Array(data) {
+        return writeVarUint8Array(this.encoder, data);
     }
-    get(args) {
-        if (typeof args.document === 'undefined') {
-            throw new Error('The sync step two message requires document as an argument');
-        }
-        writeVarString(this.encoder, args.documentName);
-        writeVarUint(this.encoder, this.type);
-        writeSyncStep2(this.encoder, args.document);
-        return this.encoder;
+    length() {
+        return length(this.encoder);
     }
 }
 
-class QueryAwarenessMessage extends OutgoingMessage {
-    constructor() {
-        super(...arguments);
-        this.type = exports.MessageType.QueryAwareness;
-        this.description = 'Queries awareness states';
-    }
-    get(args) {
-        console.log('queryAwareness: writing string docName', args.documentName);
-        console.log(this.encoder.cpos);
-        writeVarString(this.encoder, args.documentName);
-        writeVarUint(this.encoder, this.type);
-        return this.encoder;
-    }
-}
+/**
+ * @module sync-protocol
+ */
 
-class AuthenticationMessage extends OutgoingMessage {
-    constructor() {
-        super(...arguments);
-        this.type = exports.MessageType.Auth;
-        this.description = 'Authentication';
-    }
-    get(args) {
-        if (typeof args.token === 'undefined') {
-            throw new Error('The authentication message requires `token` as an argument.');
-        }
-        writeVarString(this.encoder, args.documentName);
-        writeVarUint(this.encoder, this.type);
-        common.writeAuthentication(this.encoder, args.token);
-        return this.encoder;
-    }
-}
+/**
+ * @typedef {Map<number, number>} StateMap
+ */
 
-class AwarenessMessage extends OutgoingMessage {
-    constructor() {
-        super(...arguments);
-        this.type = exports.MessageType.Awareness;
-        this.description = 'Awareness states update';
-    }
-    get(args) {
-        if (typeof args.awareness === 'undefined') {
-            throw new Error('The awareness message requires awareness as an argument');
-        }
-        if (typeof args.clients === 'undefined') {
-            throw new Error('The awareness message requires clients as an argument');
-        }
-        writeVarString(this.encoder, args.documentName);
-        writeVarUint(this.encoder, this.type);
-        let awarenessUpdate;
-        if (args.states === undefined) {
-            awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients);
-        }
-        else {
-            awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients, args.states);
-        }
-        writeVarUint8Array(this.encoder, awarenessUpdate);
-        return this.encoder;
-    }
-}
+/**
+ * Core Yjs defines two message types:
+ * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.
+ * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it
+ *   received all information from the remote client.
+ *
+ * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection
+ * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both
+ * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.
+ *
+ * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.
+ * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies
+ * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the
+ * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can
+ * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.
+ * Therefore it is necesarry that the client initiates the sync.
+ *
+ * Construction of a message:
+ * [messageType : varUint, message definition..]
+ *
+ * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!
+ *
+ * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)
+ */
 
-class UpdateMessage extends OutgoingMessage {
-    constructor() {
-        super(...arguments);
-        this.type = exports.MessageType.Sync;
-        this.description = 'A document update';
-    }
-    get(args) {
-        writeVarString(this.encoder, args.documentName);
-        writeVarUint(this.encoder, this.type);
-        writeUpdate(this.encoder, args.update);
-        return this.encoder;
-    }
-}
+const messageYjsSyncStep1 = 0;
+const messageYjsSyncStep2 = 1;
+const messageYjsUpdate = 2;
+
+/**
+ * Create a sync step 1 message based on the state of the current shared document.
+ *
+ * @param {encoding.Encoder} encoder
+ * @param {Y.Doc} doc
+ */
+const writeSyncStep1 = (encoder, doc) => {
+  writeVarUint(encoder, messageYjsSyncStep1);
+  const sv = Y__namespace.encodeStateVector(doc);
+  writeVarUint8Array(encoder, sv);
+};
+
+/**
+ * @param {encoding.Encoder} encoder
+ * @param {Y.Doc} doc
+ * @param {Uint8Array} [encodedStateVector]
+ */
+const writeSyncStep2 = (encoder, doc, encodedStateVector) => {
+  writeVarUint(encoder, messageYjsSyncStep2);
+  writeVarUint8Array(encoder, Y__namespace.encodeStateAsUpdate(doc, encodedStateVector));
+};
+
+/**
+ * Read SyncStep1 message and reply with SyncStep2.
+ *
+ * @param {decoding.Decoder} decoder The reply to the received message
+ * @param {encoding.Encoder} encoder The received message
+ * @param {Y.Doc} doc
+ */
+const readSyncStep1 = (decoder, encoder, doc) =>
+  writeSyncStep2(encoder, doc, readVarUint8Array(decoder));
+
+/**
+ * Read and apply Structs and then DeleteStore to a y instance.
+ *
+ * @param {decoding.Decoder} decoder
+ * @param {Y.Doc} doc
+ * @param {any} transactionOrigin
+ */
+const readSyncStep2 = (decoder, doc, transactionOrigin) => {
+  try {
+    Y__namespace.applyUpdate(doc, readVarUint8Array(decoder), transactionOrigin);
+  } catch (error) {
+    // This catches errors that are thrown by event handlers
+    console.error('Caught error while handling a Yjs update', error);
+  }
+};
+
+/**
+ * @param {encoding.Encoder} encoder
+ * @param {Uint8Array} update
+ */
+const writeUpdate = (encoder, update) => {
+  writeVarUint(encoder, messageYjsUpdate);
+  writeVarUint8Array(encoder, update);
+};
 
 /**
- * Utility module to work with urls.
+ * Read and apply Structs and then DeleteStore to a y instance.
  *
- * @module url
+ * @param {decoding.Decoder} decoder
+ * @param {Y.Doc} doc
+ * @param {any} transactionOrigin
  */
+const readUpdate = readSyncStep2;
 
 /**
- * @param {Object<string,string>} params
- * @return {string}
+ * @param {decoding.Decoder} decoder A message received from another client
+ * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.
+ * @param {Y.Doc} doc
+ * @param {any} transactionOrigin
  */
-const encodeQueryParams = params =>
-  map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&');
+const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {
+  const messageType = readVarUint(decoder);
+  switch (messageType) {
+    case messageYjsSyncStep1:
+      readSyncStep1(decoder, encoder, doc);
+      break
+    case messageYjsSyncStep2:
+      readSyncStep2(decoder, doc, transactionOrigin);
+      break
+    case messageYjsUpdate:
+      readUpdate(decoder, doc, transactionOrigin);
+      break
+    default:
+      throw new Error('Unknown message type')
+  }
+  return messageType
+};
 
-class HocuspocusProviderWebsocket extends EventEmitter {
-    constructor(configuration) {
-        super();
-        this.configuration = {
-            url: '',
-            // @ts-ignore
-            document: undefined,
-            // @ts-ignore
-            awareness: undefined,
-            WebSocketPolyfill: undefined,
-            parameters: {},
-            connect: true,
-            broadcast: true,
-            forceSyncInterval: false,
-            // TODO: this should depend on awareness.outdatedTime
-            messageReconnectTimeout: 30000,
-            // 1 second
-            delay: 1000,
-            // instant
-            initialDelay: 0,
-            // double the delay each time
-            factor: 2,
-            // unlimited retries
-            maxAttempts: 0,
-            // wait at least 1 second
-            minDelay: 1000,
-            // at least every 30 seconds
-            maxDelay: 30000,
-            // randomize
-            jitter: true,
-            // retry forever
-            timeout: 0,
-            onOpen: () => null,
-            onConnect: () => null,
-            onMessage: () => null,
-            onOutgoingMessage: () => null,
-            onStatus: () => null,
-            onDisconnect: () => null,
-            onClose: () => null,
-            onDestroy: () => null,
-            onAwarenessUpdate: () => null,
-            onAwarenessChange: () => null,
-            quiet: false,
-        };
-        this.subscribedToBroadcastChannel = false;
-        this.webSocket = null;
-        this.shouldConnect = true;
-        this.status = exports.WebSocketStatus.Disconnected;
-        this.lastMessageReceived = 0;
-        this.mux = createMutex();
-        this.intervals = {
-            forceSync: null,
-            connectionChecker: null,
-        };
-        this.connectionAttempt = null;
-        this.receivedOnOpenPayload = undefined;
-        this.receivedOnStatusPayload = undefined;
-        this.boundConnect = this.connect.bind(this);
-        this.setConfiguration(configuration);
-        this.configuration.WebSocketPolyfill = configuration.WebSocketPolyfill ? configuration.WebSocketPolyfill : WebSocket;
-        this.on('open', this.configuration.onOpen);
-        this.on('open', this.onOpen.bind(this));
-        this.on('connect', this.configuration.onConnect);
-        this.on('message', this.configuration.onMessage);
-        this.on('outgoingMessage', this.configuration.onOutgoingMessage);
-        this.on('status', this.configuration.onStatus);
-        this.on('status', this.onStatus.bind(this));
-        this.on('disconnect', this.configuration.onDisconnect);
-        this.on('close', this.configuration.onClose);
-        this.on('destroy', this.configuration.onDestroy);
-        this.on('awarenessUpdate', this.configuration.onAwarenessUpdate);
-        this.on('awarenessChange', this.configuration.onAwarenessChange);
-        this.on('close', this.onClose.bind(this));
-        this.on('message', this.onMessage.bind(this));
-        this.registerEventListeners();
-        this.intervals.connectionChecker = setInterval(this.checkConnection.bind(this), this.configuration.messageReconnectTimeout / 10);
-        if (typeof configuration.connect !== 'undefined') {
-            this.shouldConnect = configuration.connect;
-        }
-        if (!this.shouldConnect) {
-            return;
-        }
-        this.connect();
-    }
-    async onOpen(event) {
-        this.receivedOnOpenPayload = event;
+class OutgoingMessage {
+    constructor() {
+        this.encoder = createEncoder();
     }
-    async onStatus(data) {
-        this.receivedOnStatusPayload = data;
+    get(args) {
+        return args.encoder;
     }
-    attach(provider) {
-        if (this.receivedOnOpenPayload) {
-            provider.onOpen(this.receivedOnOpenPayload);
-        }
-        if (this.receivedOnStatusPayload) {
-            provider.onStatus(this.receivedOnStatusPayload);
-        }
+    toUint8Array() {
+        return toUint8Array(this.encoder);
     }
-    detach(provider) {
-        // tell the server to remove the listener
+}
+
+class MessageReceiver {
+    constructor(message) {
+        this.broadcasted = false;
+        this.message = message;
     }
-    setConfiguration(configuration = {}) {
-        this.configuration = { ...this.configuration, ...configuration };
+    setBroadcasted(value) {
+        this.broadcasted = value;
+        return this;
     }
-    async connect() {
-        if (this.status === exports.WebSocketStatus.Connected) {
-            return;
-        }
-        // Always cancel any previously initiated connection retryer instances
-        if (this.cancelWebsocketRetry) {
-            this.cancelWebsocketRetry();
-            this.cancelWebsocketRetry = undefined;
+    apply(provider, emitSynced) {
+        const { message } = this;
+        const type = message.readVarUint();
+        const emptyMessageLength = message.length();
+        switch (type) {
+            case exports.MessageType.Sync:
+                this.applySyncMessage(provider, emitSynced);
+                break;
+            case exports.MessageType.Awareness:
+                this.applyAwarenessMessage(provider);
+                break;
+            case exports.MessageType.Auth:
+                this.applyAuthMessage(provider);
+                break;
+            case exports.MessageType.QueryAwareness:
+                this.applyQueryAwarenessMessage(provider);
+                break;
+            case exports.MessageType.Stateless:
+                provider.receiveStateless(readVarString(message.decoder));
+                break;
+            case exports.MessageType.SyncStatus:
+                this.applySyncStatusMessage(provider, readVarInt(message.decoder) === 1);
+                break;
+            default:
+                throw new Error(`Can’t apply message of unknown type: ${type}`);
         }
-        this.shouldConnect = true;
-        const abortableRetry = () => {
-            let cancelAttempt = false;
-            const retryPromise = attempt.retry(this.createWebSocketConnection.bind(this), {
-                delay: this.configuration.delay,
-                initialDelay: this.configuration.initialDelay,
-                factor: this.configuration.factor,
-                maxAttempts: this.configuration.maxAttempts,
-                minDelay: this.configuration.minDelay,
-                maxDelay: this.configuration.maxDelay,
-                jitter: this.configuration.jitter,
-                timeout: this.configuration.timeout,
-                beforeAttempt: context => {
-                    if (!this.shouldConnect || cancelAttempt) {
-                        context.abort();
-                    }
-                },
-            }).catch((error) => {
-                // If we aborted the connection attempt then don’t throw an error
-                // ref: https://github.com/lifeomic/attempt/blob/master/src/index.ts#L136
-                if (error && error.code !== 'ATTEMPT_ABORTED') {
-                    throw error;
-                }
-            });
-            return {
-                retryPromise,
-                cancelFunc: () => {
-                    cancelAttempt = true;
-                },
-            };
-        };
-        const { retryPromise, cancelFunc } = abortableRetry();
-        this.cancelWebsocketRetry = cancelFunc;
-        return retryPromise;
-    }
-    createWebSocketConnection() {
-        return new Promise((resolve, reject) => {
-            if (this.webSocket) {
-                this.webSocket.close();
-                this.webSocket = null;
+        // Reply
+        if (message.length() > emptyMessageLength + 1) { // length of documentName (considered in emptyMessageLength plus length of yjs sync type, set in applySyncMessage)
+            if (this.broadcasted) {
+                // TODO: Some weird TypeScript error
+                // @ts-ignore
+                provider.broadcast(OutgoingMessage, { encoder: message.encoder });
             }
-            // Init the WebSocket connection
-            const ws = new this.configuration.WebSocketPolyfill(this.url);
-            ws.binaryType = 'arraybuffer';
-            ws.onmessage = (payload) => this.emit('message', payload);
-            ws.onclose = (payload) => this.emit('close', { event: payload });
-            ws.onopen = (payload) => this.emit('open', payload);
-            ws.onerror = (err) => {
-                reject(err);
-            };
-            this.webSocket = ws;
-            // Reset the status
-            this.status = exports.WebSocketStatus.Connecting;
-            this.emit('status', { status: exports.WebSocketStatus.Connecting });
-            // Store resolve/reject for later use
-            this.connectionAttempt = {
-                resolve,
-                reject,
-            };
-        });
+            else {
+                // TODO: Some weird TypeScript error
+                // @ts-ignore
+                provider.send(OutgoingMessage, { encoder: message.encoder });
+            }
+        }
     }
-    onMessage(event) {
-        this.resolveConnectionAttempt();
+    applySyncMessage(provider, emitSynced) {
+        const { message } = this;
+        message.writeVarUint(exports.MessageType.Sync);
+        // Apply update
+        const syncMessageType = readSyncMessage(message.decoder, message.encoder, provider.document, provider);
+        // Synced once we receive Step2
+        if (emitSynced && syncMessageType === messageYjsSyncStep2) {
+            provider.synced = true;
+        }
     }
-    resolveConnectionAttempt() {
-        if (this.connectionAttempt) {
-            this.connectionAttempt.resolve();
-            this.connectionAttempt = null;
-            this.status = exports.WebSocketStatus.Connected;
-            this.emit('status', { status: exports.WebSocketStatus.Connected });
-            this.emit('connect');
+    applySyncStatusMessage(provider, applied) {
+        if (applied) {
+            provider.decrementUnsyncedChanges();
         }
     }
-    stopConnectionAttempt() {
-        this.connectionAttempt = null;
+    applyAwarenessMessage(provider) {
+        const { message } = this;
+        applyAwarenessUpdate(provider.awareness, message.readVarUint8Array(), provider);
     }
-    rejectConnectionAttempt() {
-        var _a;
-        (_a = this.connectionAttempt) === null || _a === void 0 ? void 0 : _a.reject();
-        this.connectionAttempt = null;
+    applyAuthMessage(provider) {
+        const { message } = this;
+        common.readAuthMessage(message.decoder, provider.permissionDeniedHandler.bind(provider), provider.authenticatedHandler.bind(provider));
     }
-    checkConnection() {
-        var _a;
-        // Don’t check the connection when it’s not even established
-        if (this.status !== exports.WebSocketStatus.Connected) {
-            return;
-        }
-        // Don’t close then connection while waiting for the first message
-        if (!this.lastMessageReceived) {
-            return;
-        }
-        // Don’t close the connection when a message was received recently
-        if (this.configuration.messageReconnectTimeout >= getUnixTime() - this.lastMessageReceived) {
-            return;
-        }
-        // No message received in a long time, not even your own
-        // Awareness updates, which are updated every 15 seconds.
-        (_a = this.webSocket) === null || _a === void 0 ? void 0 : _a.close();
+    applyQueryAwarenessMessage(provider) {
+        const { message } = this;
+        message.writeVarUint(exports.MessageType.Awareness);
+        message.writeVarUint8Array(encodeAwarenessUpdate(provider.awareness, Array.from(provider.awareness.getStates().keys())));
     }
-    registerEventListeners() {
-        if (typeof window === 'undefined') {
-            return;
-        }
-        window.addEventListener('online', this.boundConnect);
+}
+
+class MessageSender {
+    constructor(Message, args = {}) {
+        this.message = new Message();
+        this.encoder = this.message.get(args);
     }
-    // Ensure that the URL always ends with /
-    get serverUrl() {
-        while (this.configuration.url[this.configuration.url.length - 1] === '/') {
-            return this.configuration.url.slice(0, this.configuration.url.length - 1);
-        }
-        return this.configuration.url;
+    create() {
+        return toUint8Array(this.encoder);
     }
-    get url() {
-        const encodedParams = encodeQueryParams(this.configuration.parameters);
-        return `${this.serverUrl}${encodedParams.length === 0 ? '' : `?${encodedParams}`}`;
+    send(webSocket) {
+        webSocket === null || webSocket === void 0 ? void 0 : webSocket.send(this.create());
     }
-    disconnect() {
-        this.shouldConnect = false;
-        if (this.webSocket === null) {
-            return;
-        }
-        try {
-            this.webSocket.close();
-        }
-        catch {
-            //
-        }
+    broadcast(channel) {
+        publish(channel, this.create());
     }
-    send(message) {
-        var _a;
-        if (((_a = this.webSocket) === null || _a === void 0 ? void 0 : _a.readyState) === common.WsReadyStates.Open) {
-            this.webSocket.send(message);
-        }
+}
+
+class AuthenticationMessage extends OutgoingMessage {
+    constructor() {
+        super(...arguments);
+        this.type = exports.MessageType.Auth;
+        this.description = 'Authentication';
     }
-    onClose({ event }) {
-        this.webSocket = null;
-        if (this.status === exports.WebSocketStatus.Connected) {
-            this.status = exports.WebSocketStatus.Disconnected;
-            this.emit('status', { status: exports.WebSocketStatus.Disconnected });
-            this.emit('disconnect', { event });
-        }
-        if (event.code === common.Unauthorized.code) {
-            if (event.reason === common.Unauthorized.reason) {
-                console.warn('[HocuspocusProvider] An authentication token is required, but you didn’t send one. Try adding a `token` to your HocuspocusProvider configuration. Won’t try again.');
-            }
-            else {
-                console.warn(`[HocuspocusProvider] Connection closed with status Unauthorized: ${event.reason}`);
-            }
-            this.shouldConnect = false;
-        }
-        if (event.code === common.Forbidden.code) {
-            if (!this.configuration.quiet) {
-                console.warn('[HocuspocusProvider] The provided authentication token isn’t allowed to connect to this server. Will try again.');
-                return; // TODO REMOVE ME
-            }
-        }
-        if (event.code === common.MessageTooBig.code) {
-            console.warn(`[HocuspocusProvider] Connection closed with status MessageTooBig: ${event.reason}`);
-            this.shouldConnect = false;
+    get(args) {
+        if (typeof args.token === 'undefined') {
+            throw new Error('The authentication message requires `token` as an argument.');
         }
-        if (this.connectionAttempt) {
-            // That connection attempt failed.
-            this.rejectConnectionAttempt();
+        writeVarString(this.encoder, args.documentName);
+        writeVarUint(this.encoder, this.type);
+        common.writeAuthentication(this.encoder, args.token);
+        return this.encoder;
+    }
+}
+
+class AwarenessMessage extends OutgoingMessage {
+    constructor() {
+        super(...arguments);
+        this.type = exports.MessageType.Awareness;
+        this.description = 'Awareness states update';
+    }
+    get(args) {
+        if (typeof args.awareness === 'undefined') {
+            throw new Error('The awareness message requires awareness as an argument');
         }
-        else if (this.shouldConnect) {
-            // The connection was closed by the server. Let’s just try again.
-            this.connect();
+        if (typeof args.clients === 'undefined') {
+            throw new Error('The awareness message requires clients as an argument');
         }
-        // If we’ll reconnect, we’re done for now.
-        if (this.shouldConnect) {
-            return;
+        writeVarString(this.encoder, args.documentName);
+        writeVarUint(this.encoder, this.type);
+        let awarenessUpdate;
+        if (args.states === undefined) {
+            awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients);
         }
-        // The status is set correctly already.
-        if (this.status === exports.WebSocketStatus.Disconnected) {
-            return;
+        else {
+            awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients, args.states);
         }
-        // Let’s update the connection status.
-        this.status = exports.WebSocketStatus.Disconnected;
-        this.emit('status', { status: exports.WebSocketStatus.Disconnected });
-        this.emit('disconnect', { event });
+        writeVarUint8Array(this.encoder, awarenessUpdate);
+        return this.encoder;
     }
-    destroy() {
-        this.emit('destroy');
-        if (this.intervals.forceSync) {
-            clearInterval(this.intervals.forceSync);
-        }
-        clearInterval(this.intervals.connectionChecker);
-        // If there is still a connection attempt outstanding then we should stop
-        // it before calling disconnect, otherwise it will be rejected in the onClose
-        // handler and trigger a retry
-        this.stopConnectionAttempt();
-        this.disconnect();
-        this.removeAllListeners();
-        if (typeof window === 'undefined') {
-            return;
-        }
-        window.removeEventListener('online', this.boundConnect);
+}
+
+class CloseMessage extends OutgoingMessage {
+    constructor() {
+        super(...arguments);
+        this.type = exports.MessageType.CLOSE;
+        this.description = 'Ask the server to close the connection';
+    }
+    get(args) {
+        writeVarString(this.encoder, args.documentName);
+        writeVarUint(this.encoder, this.type);
+        return this.encoder;
+    }
+}
+
+class QueryAwarenessMessage extends OutgoingMessage {
+    constructor() {
+        super(...arguments);
+        this.type = exports.MessageType.QueryAwareness;
+        this.description = 'Queries awareness states';
+    }
+    get(args) {
+        console.log('queryAwareness: writing string docName', args.documentName);
+        console.log(this.encoder.cpos);
+        writeVarString(this.encoder, args.documentName);
+        writeVarUint(this.encoder, this.type);
+        return this.encoder;
     }
 }
 
@@ -2289,15 +2306,50 @@ class StatelessMessage extends OutgoingMessage {
     }
 }
 
-class CloseMessage extends OutgoingMessage {
+class SyncStepOneMessage extends OutgoingMessage {
     constructor() {
         super(...arguments);
-        this.type = exports.MessageType.CLOSE;
-        this.description = 'Ask the server to close the connection';
+        this.type = exports.MessageType.Sync;
+        this.description = 'First sync step';
+    }
+    get(args) {
+        if (typeof args.document === 'undefined') {
+            throw new Error('The sync step one message requires document as an argument');
+        }
+        writeVarString(this.encoder, args.documentName);
+        writeVarUint(this.encoder, this.type);
+        writeSyncStep1(this.encoder, args.document);
+        return this.encoder;
+    }
+}
+
+class SyncStepTwoMessage extends OutgoingMessage {
+    constructor() {
+        super(...arguments);
+        this.type = exports.MessageType.Sync;
+        this.description = 'Second sync step';
+    }
+    get(args) {
+        if (typeof args.document === 'undefined') {
+            throw new Error('The sync step two message requires document as an argument');
+        }
+        writeVarString(this.encoder, args.documentName);
+        writeVarUint(this.encoder, this.type);
+        writeSyncStep2(this.encoder, args.document);
+        return this.encoder;
+    }
+}
+
+class UpdateMessage extends OutgoingMessage {
+    constructor() {
+        super(...arguments);
+        this.type = exports.MessageType.Sync;
+        this.description = 'A document update';
     }
     get(args) {
         writeVarString(this.encoder, args.documentName);
         writeVarUint(this.encoder, this.type);
+        writeUpdate(this.encoder, args.update);
         return this.encoder;
     }
 }
@@ -2408,8 +2460,15 @@ class HocuspocusProvider extends EventEmitter {
     get hasUnsyncedChanges() {
         return this.unsyncedChanges > 0;
     }
-    updateUnsyncedChanges(unsyncedChanges = 0) {
-        this.unsyncedChanges += unsyncedChanges;
+    incrementUnsyncedChanges() {
+        this.unsyncedChanges += 1;
+        this.emit('unsyncedChanges', this.unsyncedChanges);
+    }
+    decrementUnsyncedChanges() {
+        this.unsyncedChanges -= 1;
+        if (this.unsyncedChanges === 0) {
+            this.synced = true;
+        }
         this.emit('unsyncedChanges', this.unsyncedChanges);
     }
     forceSync() {
@@ -2431,7 +2490,7 @@ class HocuspocusProvider extends EventEmitter {
         if (origin === this) {
             return;
         }
-        this.updateUnsyncedChanges(1);
+        this.incrementUnsyncedChanges();
         this.send(UpdateMessage, { update, documentName: this.configuration.name }, true);
     }
     awarenessUpdateHandler({ added, updated, removed }, origin) {
@@ -2449,9 +2508,6 @@ class HocuspocusProvider extends EventEmitter {
         if (this.isSynced === state) {
             return;
         }
-        if (state && this.unsyncedChanges > 0) {
-            this.updateUnsyncedChanges(-1 * this.unsyncedChanges);
-        }
         this.isSynced = state;
         this.emit('synced', { state });
         this.emit('sync', { state });
@@ -2489,6 +2545,7 @@ class HocuspocusProvider extends EventEmitter {
         return this.configuration.token;
     }
     startSync() {
+        this.incrementUnsyncedChanges();
         this.send(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name });
         if (this.awareness.getLocalState() !== null) {
             this.send(AwarenessMessage, {
@@ -2499,8 +2556,9 @@ class HocuspocusProvider extends EventEmitter {
         }
     }
     send(message, args, broadcast = false) {
-        if (!this.isConnected)
+        if (!this.isConnected) {
             return;
+        }
         if (broadcast) {
             this.mux(() => { this.broadcast(message, args); });
         }
@@ -2516,7 +2574,7 @@ class HocuspocusProvider extends EventEmitter {
         }
         message.writeVarString(documentName);
         this.emit('message', { event, message: new IncomingMessage(event.data) });
-        new MessageReceiver(message).apply(this);
+        new MessageReceiver(message).apply(this, true);
     }
     onClose(event) {
         this.isAuthenticated = false;
diff --git a/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.cjs.map b/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.cjs.map
index 1f1c0d8..0a4f5b5 100644
--- a/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.cjs.map
+++ b/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.cjs.map
@@ -1 +1 @@
-{"version":3,"file":"hocuspocus-provider.cjs","sources":["../../../node_modules/lib0/map.js","../../../node_modules/lib0/set.js","../../../node_modules/lib0/string.js","../../../node_modules/lib0/conditions.js","../../../node_modules/lib0/storage.js","../../../node_modules/lib0/array.js","../../../node_modules/lib0/object.js","../../../node_modules/lib0/function.js","../../../node_modules/lib0/environment.js","../../../node_modules/lib0/math.js","../../../node_modules/lib0/binary.js","../../../node_modules/lib0/number.js","../../../node_modules/lib0/encoding.js","../../../node_modules/lib0/error.js","../../../node_modules/lib0/decoding.js","../../../node_modules/lib0/buffer.js","../../../node_modules/lib0/broadcastchannel.js","../../../node_modules/lib0/time.js","../../../node_modules/lib0/observable.js","../../../node_modules/y-protocols/awareness.js","../../../node_modules/lib0/mutex.js","../src/EventEmitter.ts","../src/IncomingMessage.ts","../../../node_modules/y-protocols/sync.js","../src/types.ts","../src/OutgoingMessage.ts","../src/MessageReceiver.ts","../src/MessageSender.ts","../src/OutgoingMessages/SyncStepOneMessage.ts","../src/OutgoingMessages/SyncStepTwoMessage.ts","../src/OutgoingMessages/QueryAwarenessMessage.ts","../src/OutgoingMessages/AuthenticationMessage.ts","../src/OutgoingMessages/AwarenessMessage.ts","../src/OutgoingMessages/UpdateMessage.ts","../../../node_modules/lib0/url.js","../src/HocuspocusProviderWebsocket.ts","../src/OutgoingMessages/StatelessMessage.ts","../src/OutgoingMessages/CloseMessage.ts","../src/HocuspocusProvider.ts","../src/TiptapCollabProviderWebsocket.ts","../src/TiptapCollabProvider.ts"],"sourcesContent":["/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template V,K\n * @template {Map<K,V>} MAP\n * @param {MAP} map\n * @param {K} key\n * @param {function():V} createT\n * @return {V}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value || undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release &&\n  /node|io\\.js/.test(process.release.name)\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n/* c8 ignore stop */\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\n/**\n * @type {number}\n */\nexport const HIGHEST_INT32 = binary.BITS31\n\n/**\n * @module number\n */\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* c8 ignore start */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* c8 ignore start */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* c8 ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* c8 ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/* eslint-env browser */\n\n/**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */\n\n// @todo before next major: use Uint8Array instead as buffer object\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as buffer from './buffer.js'\nimport * as storage from './storage.js'\n\n/**\n * @typedef {Object} Channel\n * @property {Set<function(any, any):any>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nconst channels = new Map()\n\n/* c8 ignore start */\nclass LocalStoragePolyfill {\n  /**\n   * @param {string} room\n   */\n  constructor (room) {\n    this.room = room\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null\n    /**\n     * @param {any} e\n     */\n    this._onChange = e => e.key === room && this.onmessage !== null && this.onmessage({ data: buffer.fromBase64(e.newValue || '') })\n    storage.onChange(this._onChange)\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  postMessage (buf) {\n    storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)))\n  }\n\n  close () {\n    storage.offChange(this._onChange)\n  }\n}\n/* c8 ignore stop */\n\n// Use BroadcastChannel or Polyfill\n/* c8 ignore next */\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nconst getChannel = room =>\n  map.setIfUndefined(channels, room, () => {\n    const subs = set.create()\n    const bc = new BC(room)\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    /* c8 ignore next */\n    bc.onmessage = e => subs.forEach(sub => sub(e.data, 'broadcastchannel'))\n    return {\n      bc, subs\n    }\n  })\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const subscribe = (room, f) => {\n  getChannel(room).subs.add(f)\n  return f\n}\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const unsubscribe = (room, f) => {\n  const channel = getChannel(room)\n  const unsubscribed = channel.subs.delete(f)\n  if (unsubscribed && channel.subs.size === 0) {\n    channel.bc.close()\n    channels.delete(room)\n  }\n  return unsubscribed\n}\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n * @param {any} [origin]\n */\nexport const publish = (room, data, origin = null) => {\n  const c = getChannel(room)\n  c.bc.postMessage(data)\n  c.subs.forEach(sub => sub(data, origin))\n}\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n","/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nexport const createMutex = () => {\n  let token = true\n  return (f, g) => {\n    if (token) {\n      token = false\n      try {\n        f()\n      } finally {\n        token = true\n      }\n    } else if (g !== undefined) {\n      g()\n    }\n  }\n}\n","export default class EventEmitter {\n\n  public callbacks: { [key: string]: Function[] } = {}\n\n  public on(event: string, fn: Function): this {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = []\n    }\n\n    this.callbacks[event].push(fn)\n\n    return this\n  }\n\n  protected emit(event: string, ...args: any): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args))\n    }\n\n    return this\n  }\n\n  public off(event: string, fn?: Function): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      if (fn) {\n        this.callbacks[event] = callbacks.filter(callback => callback !== fn)\n      } else {\n        delete this.callbacks[event]\n      }\n    }\n\n    return this\n  }\n\n  removeAllListeners(): void {\n    this.callbacks = {}\n  }\n}\n","import {\n  createDecoder,\n  readVarUint,\n  readVarUint8Array,\n  readVarString,\n  Decoder,\n} from 'lib0/decoding'\nimport {\n  Encoder,\n  createEncoder,\n  writeVarUint,\n  writeVarUint8Array,\n  writeVarString,\n  length,\n} from 'lib0/encoding'\nimport { MessageType } from './types.js'\n\nexport class IncomingMessage {\n\n  data: any\n\n  encoder: Encoder\n\n  decoder: Decoder\n\n  constructor(data: any) {\n    this.data = data\n    this.encoder = createEncoder()\n    this.decoder = createDecoder(new Uint8Array(this.data))\n  }\n\n  readVarUint(): MessageType {\n    return readVarUint(this.decoder)\n  }\n\n  readVarString(): string {\n    return readVarString(this.decoder)\n  }\n\n  readVarUint8Array() {\n    return readVarUint8Array(this.decoder)\n  }\n\n  writeVarUint(type: MessageType) {\n    return writeVarUint(this.encoder, type)\n  }\n\n  writeVarString(string: string) {\n    return writeVarString(this.encoder, string)\n  }\n\n  writeVarUint8Array(data: Uint8Array) {\n    return writeVarUint8Array(this.encoder, data)\n  }\n\n  length() {\n    return length(this.encoder)\n  }\n}\n","/**\n * @module sync-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as Y from 'yjs'\n\n/**\n * @typedef {Map<number, number>} StateMap\n */\n\n/**\n * Core Yjs defines two message types:\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it\n *   received all information from the remote client.\n *\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\n *\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\n * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.\n * Therefore it is necesarry that the client initiates the sync.\n *\n * Construction of a message:\n * [messageType : varUint, message definition..]\n *\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\n *\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\n */\n\nexport const messageYjsSyncStep1 = 0\nexport const messageYjsSyncStep2 = 1\nexport const messageYjsUpdate = 2\n\n/**\n * Create a sync step 1 message based on the state of the current shared document.\n *\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n */\nexport const writeSyncStep1 = (encoder, doc) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep1)\n  const sv = Y.encodeStateVector(doc)\n  encoding.writeVarUint8Array(encoder, sv)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n * @param {Uint8Array} [encodedStateVector]\n */\nexport const writeSyncStep2 = (encoder, doc, encodedStateVector) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep2)\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector))\n}\n\n/**\n * Read SyncStep1 message and reply with SyncStep2.\n *\n * @param {decoding.Decoder} decoder The reply to the received message\n * @param {encoding.Encoder} encoder The received message\n * @param {Y.Doc} doc\n */\nexport const readSyncStep1 = (decoder, encoder, doc) =>\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder))\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncStep2 = (decoder, doc, transactionOrigin) => {\n  try {\n    Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin)\n  } catch (error) {\n    // This catches errors that are thrown by event handlers\n    console.error('Caught error while handling a Yjs update', error)\n  }\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Uint8Array} update\n */\nexport const writeUpdate = (encoder, update) => {\n  encoding.writeVarUint(encoder, messageYjsUpdate)\n  encoding.writeVarUint8Array(encoder, update)\n}\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readUpdate = readSyncStep2\n\n/**\n * @param {decoding.Decoder} decoder A message received from another client\n * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\n  const messageType = decoding.readVarUint(decoder)\n  switch (messageType) {\n    case messageYjsSyncStep1:\n      readSyncStep1(decoder, encoder, doc)\n      break\n    case messageYjsSyncStep2:\n      readSyncStep2(decoder, doc, transactionOrigin)\n      break\n    case messageYjsUpdate:\n      readUpdate(decoder, doc, transactionOrigin)\n      break\n    default:\n      throw new Error('Unknown message type')\n  }\n  return messageType\n}\n","import { Awareness } from 'y-protocols/awareness'\nimport * as Y from 'yjs'\nimport { Encoder } from 'lib0/encoding'\nimport type { Event, CloseEvent, MessageEvent } from 'ws'\nimport { AuthenticationMessage } from './OutgoingMessages/AuthenticationMessage.js'\nimport { AwarenessMessage } from './OutgoingMessages/AwarenessMessage.js'\nimport { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js'\nimport { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js'\nimport { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js'\nimport { UpdateMessage } from './OutgoingMessages/UpdateMessage.js'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { OutgoingMessage } from './OutgoingMessage.js'\n\nexport enum MessageType {\n  Sync = 0,\n  Awareness = 1,\n  Auth = 2,\n  QueryAwareness = 3,\n  Stateless = 5,\n  CLOSE = 7,\n}\n\nexport enum WebSocketStatus {\n  Connecting = 'connecting',\n  Connected = 'connected',\n  Disconnected = 'disconnected',\n}\n\nexport interface OutgoingMessageInterface {\n  encoder: Encoder\n  type?: MessageType\n}\n\nexport interface OutgoingMessageArguments {\n  documentName: string,\n  token: string,\n  document: Y.Doc,\n  awareness: Awareness,\n  clients: number[],\n  states: Map<number, { [key: string]: any; }>,\n  update: any,\n  payload: string,\n  encoder: Encoder,\n}\n\nexport interface Constructable<T> {\n  new(...args: any) : T\n}\n\nexport type ConstructableOutgoingMessage =\n  Constructable<AuthenticationMessage> |\n  Constructable<AwarenessMessage> |\n  Constructable<QueryAwarenessMessage> |\n  Constructable<SyncStepOneMessage> |\n  Constructable<SyncStepTwoMessage> |\n  Constructable<UpdateMessage>\n\nexport type onAuthenticationFailedParameters = {\n  reason: string,\n}\n\nexport type onOpenParameters = {\n  event: Event,\n}\n\nexport type onMessageParameters = {\n  event: MessageEvent,\n  message: IncomingMessage,\n}\n\nexport type onOutgoingMessageParameters = {\n  message: OutgoingMessage,\n}\n\nexport type onStatusParameters = {\n  status: WebSocketStatus,\n}\n\nexport type onSyncedParameters = {\n  state: boolean,\n}\n\nexport type onDisconnectParameters = {\n  event: CloseEvent,\n}\n\nexport type onCloseParameters = {\n  event: CloseEvent,\n}\n\nexport type onAwarenessUpdateParameters = {\n  states: StatesArray\n}\n\nexport type onAwarenessChangeParameters = {\n  states: StatesArray\n}\n\nexport type onStatelessParameters = {\n  payload: string\n}\n\nexport type StatesArray = { clientId: number, [key: string | number]: any }[]\n","import { Encoder, createEncoder, toUint8Array } from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments, OutgoingMessageInterface } from './types.js'\n\nexport class OutgoingMessage implements OutgoingMessageInterface {\n  encoder: Encoder\n\n  type?: MessageType\n\n  constructor() {\n    this.encoder = createEncoder()\n  }\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    return args.encoder\n  }\n\n  toUint8Array() {\n    return toUint8Array(this.encoder)\n  }\n}\n","import * as awarenessProtocol from 'y-protocols/awareness'\nimport { readSyncMessage, messageYjsSyncStep2, messageYjsUpdate } from 'y-protocols/sync'\nimport { readAuthMessage } from '@hocuspocus/common'\nimport { readVarString } from 'lib0/decoding'\nimport { MessageType } from './types.js'\nimport { HocuspocusProvider } from './HocuspocusProvider.js'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { OutgoingMessage } from './OutgoingMessage.js'\n\nexport class MessageReceiver {\n\n  message: IncomingMessage\n\n  broadcasted = false\n\n  constructor(message: IncomingMessage) {\n    this.message = message\n  }\n\n  public setBroadcasted(value: boolean) {\n    this.broadcasted = value\n\n    return this\n  }\n\n  public apply(provider: HocuspocusProvider, emitSynced = true) {\n    const { message } = this\n    const type = message.readVarUint()\n\n    const emptyMessageLength = message.length()\n\n    switch (type) {\n      case MessageType.Sync:\n        this.applySyncMessage(provider, emitSynced)\n        break\n\n      case MessageType.Awareness:\n        this.applyAwarenessMessage(provider)\n        break\n\n      case MessageType.Auth:\n        this.applyAuthMessage(provider)\n        break\n\n      case MessageType.QueryAwareness:\n        this.applyQueryAwarenessMessage(provider)\n        break\n\n      case MessageType.Stateless:\n        provider.receiveStateless(readVarString(message.decoder))\n        break\n\n      default:\n        throw new Error(`Can’t apply message of unknown type: ${type}`)\n    }\n\n    // Reply\n    if (message.length() > emptyMessageLength + 1) { // length of documentName (considered in emptyMessageLength plus length of yjs sync type, set in applySyncMessage)\n      if (this.broadcasted) {\n        // TODO: Some weird TypeScript error\n        // @ts-ignore\n        provider.broadcast(OutgoingMessage, { encoder: message.encoder })\n      } else {\n        // TODO: Some weird TypeScript error\n        // @ts-ignore\n        provider.send(OutgoingMessage, { encoder: message.encoder })\n      }\n    }\n  }\n\n  private applySyncMessage(provider: HocuspocusProvider, emitSynced: boolean) {\n    const { message } = this\n\n    message.writeVarUint(MessageType.Sync)\n\n    // Apply update\n    const syncMessageType = readSyncMessage(\n      message.decoder,\n      message.encoder,\n      provider.document,\n      provider,\n    )\n\n    // Synced once we receive Step2\n    if (emitSynced && syncMessageType === messageYjsSyncStep2) {\n      provider.synced = true\n    }\n\n    if (syncMessageType === messageYjsUpdate || syncMessageType === messageYjsSyncStep2) {\n      if (provider.unsyncedChanges > 0) {\n        provider.updateUnsyncedChanges(-1)\n      }\n    }\n  }\n\n  private applyAwarenessMessage(provider: HocuspocusProvider) {\n    const { message } = this\n\n    awarenessProtocol.applyAwarenessUpdate(\n      provider.awareness,\n      message.readVarUint8Array(),\n      provider,\n    )\n  }\n\n  private applyAuthMessage(provider: HocuspocusProvider) {\n    const { message } = this\n\n    readAuthMessage(\n      message.decoder,\n      provider.permissionDeniedHandler.bind(provider),\n      provider.authenticatedHandler.bind(provider),\n    )\n  }\n\n  private applyQueryAwarenessMessage(provider: HocuspocusProvider) {\n    const { message } = this\n\n    message.writeVarUint(MessageType.Awareness)\n    message.writeVarUint8Array(\n      awarenessProtocol.encodeAwarenessUpdate(\n        provider.awareness,\n        Array.from(provider.awareness.getStates().keys()),\n      ),\n    )\n  }\n}\n","import { Encoder, toUint8Array } from 'lib0/encoding'\nimport * as bc from 'lib0/broadcastchannel'\nimport { ConstructableOutgoingMessage } from './types.js'\n\nexport class MessageSender {\n\n  encoder: Encoder\n\n  message: any\n\n  constructor(Message: ConstructableOutgoingMessage, args: any = {}) {\n    this.message = new Message()\n    this.encoder = this.message.get(args)\n  }\n\n  create() {\n    return toUint8Array(this.encoder)\n  }\n\n  send(webSocket: any) {\n    webSocket?.send(this.create())\n  }\n\n  broadcast(channel: string) {\n    bc.publish(channel, this.create())\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class SyncStepOneMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'First sync step'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.document === 'undefined') {\n      throw new Error('The sync step one message requires document as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n    syncProtocol.writeSyncStep1(this.encoder, args.document)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class SyncStepTwoMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'Second sync step'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.document === 'undefined') {\n      throw new Error('The sync step two message requires document as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n    syncProtocol.writeSyncStep2(this.encoder, args.document)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class QueryAwarenessMessage extends OutgoingMessage {\n  type = MessageType.QueryAwareness\n\n  description = 'Queries awareness states'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n\n    console.log('queryAwareness: writing string docName', args.documentName)\n    console.log(this.encoder.cpos)\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    return this.encoder\n  }\n}\n","import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { writeAuthentication } from '@hocuspocus/common'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class AuthenticationMessage extends OutgoingMessage {\n  type = MessageType.Auth\n\n  description = 'Authentication'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.token === 'undefined') {\n      throw new Error('The authentication message requires `token` as an argument.')\n    }\n\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n    writeAuthentication(this.encoder, args.token)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport { encodeAwarenessUpdate } from 'y-protocols/awareness'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class AwarenessMessage extends OutgoingMessage {\n  type = MessageType.Awareness\n\n  description = 'Awareness states update'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.awareness === 'undefined') {\n      throw new Error('The awareness message requires awareness as an argument')\n    }\n\n    if (typeof args.clients === 'undefined') {\n      throw new Error('The awareness message requires clients as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    let awarenessUpdate\n    if (args.states === undefined) {\n      awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients)\n    } else {\n      awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients, args.states)\n    }\n\n    encoding.writeVarUint8Array(this.encoder, awarenessUpdate)\n\n    return this.encoder\n  }\n}\n","import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { writeUpdate } from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class UpdateMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'A document update'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n\n    writeUpdate(this.encoder, args.update)\n\n    return this.encoder\n  }\n}\n","/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js'\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {}\n  const urlQuerySplit = url.split('?')\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\n  for (let i = 0; i < pairs.length; i++) {\n    const item = pairs[i]\n    if (item.length > 0) {\n      const pair = item.split('=')\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n  }\n  return query\n}\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport const encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\n","import * as time from 'lib0/time'\nimport * as mutex from 'lib0/mutex'\nimport * as url from 'lib0/url'\nimport type { MessageEvent } from 'ws'\nimport { retry } from '@lifeomic/attempt'\nimport {\n  Forbidden, MessageTooBig, Unauthorized, WsReadyStates,\n} from '@hocuspocus/common'\nimport { Event } from 'ws'\nimport EventEmitter from './EventEmitter.js'\nimport {\n  onCloseParameters, onDisconnectParameters, onMessageParameters, onOpenParameters, onOutgoingMessageParameters, onStatusParameters, WebSocketStatus,\n  onAwarenessChangeParameters, onAwarenessUpdateParameters,\n} from './types.js'\nimport { HocuspocusProvider } from './HocuspocusProvider.js'\n\nexport type HocuspocusProviderWebsocketConfiguration =\n  Required<Pick<CompleteHocuspocusProviderWebsocketConfiguration, 'url'>>\n  & Partial<CompleteHocuspocusProviderWebsocketConfiguration>\n\nexport interface CompleteHocuspocusProviderWebsocketConfiguration {\n  /**\n   * URL of your @hocuspocus/server instance\n   */\n   url: string,\n\n  /**\n   * Pass `false` to start the connection manually.\n   */\n  connect: boolean,\n\n  /**\n   * URL parameters that should be added.\n   */\n  parameters: { [key: string]: any },\n  /**\n   * An optional WebSocket polyfill, for example for Node.js\n   */\n  WebSocketPolyfill: any,\n\n  /**\n   * Disconnect when no message is received for the defined amount of milliseconds.\n   */\n  messageReconnectTimeout: number,\n  /**\n   * The delay between each attempt in milliseconds. You can provide a factor to have the delay grow exponentially.\n   */\n  delay: number,\n  /**\n   * The intialDelay is the amount of time to wait before making the first attempt. This option should typically be 0 since you typically want the first attempt to happen immediately.\n   */\n  initialDelay: number,\n  /**\n   * The factor option is used to grow the delay exponentially.\n   */\n  factor: number,\n  /**\n   * The maximum number of attempts or 0 if there is no limit on number of attempts.\n   */\n  maxAttempts: number,\n  /**\n   * minDelay is used to set a lower bound of delay when jitter is enabled. This property has no effect if jitter is disabled.\n   */\n  minDelay: number,\n  /**\n   * The maxDelay option is used to set an upper bound for the delay when factor is enabled. A value of 0 can be provided if there should be no upper bound when calculating delay.\n   */\n  maxDelay: number,\n  /**\n   * If jitter is true then the calculated delay will be a random integer value between minDelay and the calculated delay for the current iteration.\n   */\n  jitter: boolean,\n  /**\n   * A timeout in milliseconds. If timeout is non-zero then a timer is set using setTimeout. If the timeout is triggered then future attempts will be aborted.\n   */\n  timeout: number,\n  onOpen: (data: onOpenParameters) => void,\n  onConnect: () => void,\n  onMessage: (data: onMessageParameters) => void,\n  onOutgoingMessage: (data: onOutgoingMessageParameters) => void,\n  onStatus: (data: onStatusParameters) => void,\n  onDisconnect: (data: onDisconnectParameters) => void,\n  onClose: (data: onCloseParameters) => void,\n  onDestroy: () => void,\n  onAwarenessUpdate: (data: onAwarenessUpdateParameters) => void,\n  onAwarenessChange: (data: onAwarenessChangeParameters) => void,\n  /**\n   * Don’t output any warnings.\n   */\n  quiet: boolean,\n}\n\nexport class HocuspocusProviderWebsocket extends EventEmitter {\n  public configuration: CompleteHocuspocusProviderWebsocketConfiguration = {\n    url: '',\n    // @ts-ignore\n    document: undefined,\n    // @ts-ignore\n    awareness: undefined,\n    WebSocketPolyfill: undefined,\n    parameters: {},\n    connect: true,\n    broadcast: true,\n    forceSyncInterval: false,\n    // TODO: this should depend on awareness.outdatedTime\n    messageReconnectTimeout: 30000,\n    // 1 second\n    delay: 1000,\n    // instant\n    initialDelay: 0,\n    // double the delay each time\n    factor: 2,\n    // unlimited retries\n    maxAttempts: 0,\n    // wait at least 1 second\n    minDelay: 1000,\n    // at least every 30 seconds\n    maxDelay: 30000,\n    // randomize\n    jitter: true,\n    // retry forever\n    timeout: 0,\n    onOpen: () => null,\n    onConnect: () => null,\n    onMessage: () => null,\n    onOutgoingMessage: () => null,\n    onStatus: () => null,\n    onDisconnect: () => null,\n    onClose: () => null,\n    onDestroy: () => null,\n    onAwarenessUpdate: () => null,\n    onAwarenessChange: () => null,\n    quiet: false,\n  }\n\n  subscribedToBroadcastChannel = false\n\n  webSocket: WebSocket | null = null\n\n  shouldConnect = true\n\n  status = WebSocketStatus.Disconnected\n\n  lastMessageReceived = 0\n\n  mux = mutex.createMutex()\n\n  intervals: any = {\n    forceSync: null,\n    connectionChecker: null,\n  }\n\n  connectionAttempt: {\n    resolve: (value?: any) => void\n    reject: (reason?: any) => void\n  } | null = null\n\n  constructor(configuration: HocuspocusProviderWebsocketConfiguration) {\n    super()\n    this.setConfiguration(configuration)\n\n    this.configuration.WebSocketPolyfill = configuration.WebSocketPolyfill ? configuration.WebSocketPolyfill : WebSocket\n\n    this.on('open', this.configuration.onOpen)\n    this.on('open', this.onOpen.bind(this))\n    this.on('connect', this.configuration.onConnect)\n    this.on('message', this.configuration.onMessage)\n    this.on('outgoingMessage', this.configuration.onOutgoingMessage)\n    this.on('status', this.configuration.onStatus)\n    this.on('status', this.onStatus.bind(this))\n    this.on('disconnect', this.configuration.onDisconnect)\n    this.on('close', this.configuration.onClose)\n    this.on('destroy', this.configuration.onDestroy)\n    this.on('awarenessUpdate', this.configuration.onAwarenessUpdate)\n    this.on('awarenessChange', this.configuration.onAwarenessChange)\n\n    this.on('close', this.onClose.bind(this))\n    this.on('message', this.onMessage.bind(this))\n\n    this.registerEventListeners()\n\n    this.intervals.connectionChecker = setInterval(\n      this.checkConnection.bind(this),\n      this.configuration.messageReconnectTimeout / 10,\n    )\n\n    if (typeof configuration.connect !== 'undefined') {\n      this.shouldConnect = configuration.connect\n    }\n\n    if (!this.shouldConnect) {\n      return\n    }\n\n    this.connect()\n  }\n\n  receivedOnOpenPayload?: Event | undefined = undefined\n\n  receivedOnStatusPayload?: onStatusParameters | undefined = undefined\n\n  async onOpen(event: Event) {\n    this.receivedOnOpenPayload = event\n  }\n\n  async onStatus(data: onStatusParameters) {\n    this.receivedOnStatusPayload = data\n  }\n\n  attach(provider: HocuspocusProvider) {\n    if (this.receivedOnOpenPayload) {\n      provider.onOpen(this.receivedOnOpenPayload)\n    }\n\n    if (this.receivedOnStatusPayload) {\n      provider.onStatus(this.receivedOnStatusPayload)\n    }\n  }\n\n  detach(provider: HocuspocusProvider) {\n    // tell the server to remove the listener\n\n  }\n\n  public setConfiguration(configuration: Partial<HocuspocusProviderWebsocketConfiguration> = {}): void {\n    this.configuration = { ...this.configuration, ...configuration }\n  }\n\n  boundConnect = this.connect.bind(this)\n\n  cancelWebsocketRetry?: () => void\n\n  async connect() {\n    if (this.status === WebSocketStatus.Connected) {\n      return\n    }\n\n    // Always cancel any previously initiated connection retryer instances\n    if (this.cancelWebsocketRetry) {\n      this.cancelWebsocketRetry()\n      this.cancelWebsocketRetry = undefined\n    }\n\n    this.shouldConnect = true\n\n    const abortableRetry = () => {\n      let cancelAttempt = false\n\n      const retryPromise = retry(this.createWebSocketConnection.bind(this), {\n        delay: this.configuration.delay,\n        initialDelay: this.configuration.initialDelay,\n        factor: this.configuration.factor,\n        maxAttempts: this.configuration.maxAttempts,\n        minDelay: this.configuration.minDelay,\n        maxDelay: this.configuration.maxDelay,\n        jitter: this.configuration.jitter,\n        timeout: this.configuration.timeout,\n        beforeAttempt: context => {\n          if (!this.shouldConnect || cancelAttempt) {\n            context.abort()\n          }\n        },\n      }).catch((error: any) => {\n        // If we aborted the connection attempt then don’t throw an error\n        // ref: https://github.com/lifeomic/attempt/blob/master/src/index.ts#L136\n        if (error && error.code !== 'ATTEMPT_ABORTED') {\n          throw error\n        }\n      })\n\n      return {\n        retryPromise,\n        cancelFunc: () => {\n          cancelAttempt = true\n        },\n      }\n    }\n\n    const { retryPromise, cancelFunc } = abortableRetry()\n    this.cancelWebsocketRetry = cancelFunc\n\n    return retryPromise\n  }\n\n  createWebSocketConnection() {\n    return new Promise((resolve, reject) => {\n      if (this.webSocket) {\n        this.webSocket.close()\n        this.webSocket = null\n      }\n\n      // Init the WebSocket connection\n      const ws = new this.configuration.WebSocketPolyfill(this.url)\n      ws.binaryType = 'arraybuffer'\n      ws.onmessage = (payload: any) => this.emit('message', payload)\n      ws.onclose = (payload: any) => this.emit('close', { event: payload })\n      ws.onopen = (payload: any) => this.emit('open', payload)\n      ws.onerror = (err: any) => {\n        reject(err)\n      }\n      this.webSocket = ws\n\n      // Reset the status\n      this.status = WebSocketStatus.Connecting\n      this.emit('status', { status: WebSocketStatus.Connecting })\n\n      // Store resolve/reject for later use\n      this.connectionAttempt = {\n        resolve,\n        reject,\n      }\n    })\n  }\n\n  onMessage(event: MessageEvent) {\n    this.resolveConnectionAttempt()\n  }\n\n  resolveConnectionAttempt() {\n    if (this.connectionAttempt) {\n      this.connectionAttempt.resolve()\n      this.connectionAttempt = null\n\n      this.status = WebSocketStatus.Connected\n      this.emit('status', { status: WebSocketStatus.Connected })\n      this.emit('connect')\n    }\n  }\n\n  stopConnectionAttempt() {\n    this.connectionAttempt = null\n  }\n\n  rejectConnectionAttempt() {\n    this.connectionAttempt?.reject()\n    this.connectionAttempt = null\n  }\n\n  checkConnection() {\n    // Don’t check the connection when it’s not even established\n    if (this.status !== WebSocketStatus.Connected) {\n      return\n    }\n\n    // Don’t close then connection while waiting for the first message\n    if (!this.lastMessageReceived) {\n      return\n    }\n\n    // Don’t close the connection when a message was received recently\n    if (this.configuration.messageReconnectTimeout >= time.getUnixTime() - this.lastMessageReceived) {\n      return\n    }\n\n    // No message received in a long time, not even your own\n    // Awareness updates, which are updated every 15 seconds.\n    this.webSocket?.close()\n  }\n\n  registerEventListeners() {\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.addEventListener('online', this.boundConnect)\n  }\n\n  // Ensure that the URL always ends with /\n  get serverUrl() {\n    while (this.configuration.url[this.configuration.url.length - 1] === '/') {\n      return this.configuration.url.slice(0, this.configuration.url.length - 1)\n    }\n\n    return this.configuration.url\n  }\n\n  get url() {\n    const encodedParams = url.encodeQueryParams(this.configuration.parameters)\n\n    return `${this.serverUrl}${encodedParams.length === 0 ? '' : `?${encodedParams}`}`\n  }\n\n  disconnect() {\n    this.shouldConnect = false\n\n    if (this.webSocket === null) {\n      return\n    }\n\n    try {\n      this.webSocket.close()\n    } catch {\n      //\n    }\n  }\n\n  send(message: any) {\n    if (this.webSocket?.readyState === WsReadyStates.Open) {\n      this.webSocket.send(message)\n    }\n  }\n\n  onClose({ event }: onCloseParameters) {\n    this.webSocket = null\n\n    if (this.status === WebSocketStatus.Connected) {\n      this.status = WebSocketStatus.Disconnected\n      this.emit('status', { status: WebSocketStatus.Disconnected })\n      this.emit('disconnect', { event })\n    }\n\n    if (event.code === Unauthorized.code) {\n      if (event.reason === Unauthorized.reason) {\n        console.warn('[HocuspocusProvider] An authentication token is required, but you didn’t send one. Try adding a `token` to your HocuspocusProvider configuration. Won’t try again.')\n      } else {\n        console.warn(`[HocuspocusProvider] Connection closed with status Unauthorized: ${event.reason}`)\n      }\n\n      this.shouldConnect = false\n    }\n\n    if (event.code === Forbidden.code) {\n      if (!this.configuration.quiet) {\n        console.warn('[HocuspocusProvider] The provided authentication token isn’t allowed to connect to this server. Will try again.')\n        return // TODO REMOVE ME\n      }\n    }\n\n    if (event.code === MessageTooBig.code) {\n      console.warn(`[HocuspocusProvider] Connection closed with status MessageTooBig: ${event.reason}`)\n      this.shouldConnect = false\n    }\n\n    if (this.connectionAttempt) {\n      // That connection attempt failed.\n      this.rejectConnectionAttempt()\n    } else if (this.shouldConnect) {\n      // The connection was closed by the server. Let’s just try again.\n      this.connect()\n    }\n\n    // If we’ll reconnect, we’re done for now.\n    if (this.shouldConnect) {\n      return\n    }\n\n    // The status is set correctly already.\n    if (this.status === WebSocketStatus.Disconnected) {\n      return\n    }\n\n    // Let’s update the connection status.\n    this.status = WebSocketStatus.Disconnected\n    this.emit('status', { status: WebSocketStatus.Disconnected })\n    this.emit('disconnect', { event })\n  }\n\n  destroy() {\n    this.emit('destroy')\n\n    if (this.intervals.forceSync) {\n      clearInterval(this.intervals.forceSync)\n    }\n\n    clearInterval(this.intervals.connectionChecker)\n\n    // If there is still a connection attempt outstanding then we should stop\n    // it before calling disconnect, otherwise it will be rejected in the onClose\n    // handler and trigger a retry\n    this.stopConnectionAttempt()\n\n    this.disconnect()\n\n    this.removeAllListeners()\n\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.removeEventListener('online', this.boundConnect)\n  }\n\n}\n","import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class StatelessMessage extends OutgoingMessage {\n  type = MessageType.Stateless\n\n  description = 'A stateless message'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n    writeVarString(this.encoder, args.payload ?? '')\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class CloseMessage extends OutgoingMessage {\n  type = MessageType.CLOSE\n\n  description = 'Ask the server to close the connection'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    return this.encoder\n  }\n}\n","import * as Y from 'yjs'\nimport * as bc from 'lib0/broadcastchannel'\nimport { Awareness, removeAwarenessStates } from 'y-protocols/awareness'\nimport * as mutex from 'lib0/mutex'\nimport type { CloseEvent, Event, MessageEvent } from 'ws'\nimport { awarenessStatesToArray } from '@hocuspocus/common'\nimport EventEmitter from './EventEmitter.js'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { MessageReceiver } from './MessageReceiver.js'\nimport { MessageSender } from './MessageSender.js'\nimport { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js'\nimport { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js'\nimport { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js'\nimport { AuthenticationMessage } from './OutgoingMessages/AuthenticationMessage.js'\nimport { AwarenessMessage } from './OutgoingMessages/AwarenessMessage.js'\nimport { UpdateMessage } from './OutgoingMessages/UpdateMessage.js'\nimport {\n  ConstructableOutgoingMessage,\n  onAuthenticationFailedParameters,\n  onCloseParameters,\n  onDisconnectParameters,\n  onMessageParameters,\n  onOpenParameters,\n  onOutgoingMessageParameters, onStatelessParameters,\n  onStatusParameters,\n  onSyncedParameters,\n  WebSocketStatus,\n  onAwarenessChangeParameters,\n  onAwarenessUpdateParameters,\n} from './types.js'\nimport {\n  CompleteHocuspocusProviderWebsocketConfiguration,\n  HocuspocusProviderWebsocket,\n} from './HocuspocusProviderWebsocket.js'\nimport { StatelessMessage } from './OutgoingMessages/StatelessMessage.js'\nimport { CloseMessage } from './OutgoingMessages/CloseMessage.js'\n\nexport type HocuspocusProviderConfiguration =\n  Required<Pick<CompleteHocuspocusProviderConfiguration, 'name'>>\n    & Partial<CompleteHocuspocusProviderConfiguration> & (\n  Required<Pick<CompleteHocuspocusProviderWebsocketConfiguration, 'url'>> |\n  Required<Pick<CompleteHocuspocusProviderConfiguration, 'websocketProvider'>>\n  )\n\nexport interface CompleteHocuspocusProviderConfiguration {\n   /**\n    * The identifier/name of your document\n    */\n   name: string,\n  /**\n   * The actual Y.js document\n   */\n  document: Y.Doc,\n\n  /**\n   * Pass false to disable broadcasting between browser tabs.\n   */\n  broadcast: boolean,\n  /**\n   * An Awareness instance to keep the presence state of all clients.\n   */\n  awareness: Awareness,\n  /**\n   * A token that’s sent to the backend for authentication purposes.\n   */\n  token: string | (() => string) | (() => Promise<string>) | null,\n  /**\n   * URL parameters that should be added.\n   */\n  parameters: { [key: string]: any },\n  /**\n   * Hocuspocus websocket provider\n   */\n  websocketProvider: HocuspocusProviderWebsocket,\n  /**\n   * Force syncing the document in the defined interval.\n   */\n  forceSyncInterval: false | number,\n\n  onAuthenticated: () => void,\n  onAuthenticationFailed: (data: onAuthenticationFailedParameters) => void,\n  onOpen: (data: onOpenParameters) => void,\n  onConnect: () => void,\n  onMessage: (data: onMessageParameters) => void,\n  onOutgoingMessage: (data: onOutgoingMessageParameters) => void,\n  onStatus: (data: onStatusParameters) => void,\n  onSynced: (data: onSyncedParameters) => void,\n  onDisconnect: (data: onDisconnectParameters) => void,\n  onClose: (data: onCloseParameters) => void,\n  onDestroy: () => void,\n  onAwarenessUpdate: (data: onAwarenessUpdateParameters) => void,\n  onAwarenessChange: (data: onAwarenessChangeParameters) => void,\n  onStateless: (data: onStatelessParameters) => void\n\n  /**\n   * Don’t output any warnings.\n   */\n  quiet: boolean,\n}\n\nexport class HocuspocusProvider extends EventEmitter {\n  public configuration: CompleteHocuspocusProviderConfiguration = {\n    name: '',\n    // @ts-ignore\n    document: undefined,\n    // @ts-ignore\n    awareness: undefined,\n    token: null,\n    parameters: {},\n    broadcast: true,\n    forceSyncInterval: false,\n    onAuthenticated: () => null,\n    onAuthenticationFailed: () => null,\n    onOpen: () => null,\n    onConnect: () => null,\n    onMessage: () => null,\n    onOutgoingMessage: () => null,\n    onStatus: () => null,\n    onSynced: () => null,\n    onDisconnect: () => null,\n    onClose: () => null,\n    onDestroy: () => null,\n    onAwarenessUpdate: () => null,\n    onAwarenessChange: () => null,\n    onStateless: () => null,\n    quiet: false,\n  }\n\n  subscribedToBroadcastChannel = false\n\n  isSynced = false\n\n  unsyncedChanges = 0\n\n  status = WebSocketStatus.Disconnected\n\n  isAuthenticated = false\n\n  authorizedScope: string | undefined = undefined\n\n  mux = mutex.createMutex()\n\n  intervals: any = {\n    forceSync: null,\n  }\n\n  isConnected = true\n\n  constructor(configuration: HocuspocusProviderConfiguration) {\n    super()\n    this.setConfiguration(configuration)\n\n    this.configuration.document = configuration.document ? configuration.document : new Y.Doc()\n    this.configuration.awareness = configuration.awareness ? configuration.awareness : new Awareness(this.document)\n\n    this.on('open', this.configuration.onOpen)\n    this.on('message', this.configuration.onMessage)\n    this.on('outgoingMessage', this.configuration.onOutgoingMessage)\n    this.on('synced', this.configuration.onSynced)\n    this.on('destroy', this.configuration.onDestroy)\n    this.on('awarenessUpdate', this.configuration.onAwarenessUpdate)\n    this.on('awarenessChange', this.configuration.onAwarenessChange)\n    this.on('stateless', this.configuration.onStateless)\n\n    this.on('authenticated', this.configuration.onAuthenticated)\n    this.on('authenticationFailed', this.configuration.onAuthenticationFailed)\n\n    this.configuration.websocketProvider.on('connect', this.configuration.onConnect)\n    this.configuration.websocketProvider.on('connect', (e: Event) => this.emit('connect', e))\n\n    this.configuration.websocketProvider.on('open', this.onOpen.bind(this))\n    this.configuration.websocketProvider.on('open', (e: Event) => this.emit('open', e))\n\n    this.configuration.websocketProvider.on('message', this.onMessage.bind(this))\n\n    this.configuration.websocketProvider.on('close', this.onClose.bind(this))\n    this.configuration.websocketProvider.on('close', this.configuration.onClose)\n    this.configuration.websocketProvider.on('close', (e: Event) => this.emit('close', e))\n\n    this.configuration.websocketProvider.on('status', this.onStatus.bind(this))\n\n    this.configuration.websocketProvider.on('disconnect', this.configuration.onDisconnect)\n    this.configuration.websocketProvider.on('disconnect', (e: Event) => this.emit('disconnect', e))\n\n    this.configuration.websocketProvider.on('destroy', this.configuration.onDestroy)\n    this.configuration.websocketProvider.on('destroy', (e: Event) => this.emit('destroy', e))\n\n    this.awareness.on('update', () => {\n      this.emit('awarenessUpdate', { states: awarenessStatesToArray(this.awareness.getStates()) })\n    })\n\n    this.awareness.on('change', () => {\n      this.emit('awarenessChange', { states: awarenessStatesToArray(this.awareness.getStates()) })\n    })\n\n    this.document.on('update', this.documentUpdateHandler.bind(this))\n    this.awareness.on('update', this.awarenessUpdateHandler.bind(this))\n    this.registerEventListeners()\n\n    if (this.configuration.forceSyncInterval) {\n      this.intervals.forceSync = setInterval(\n        this.forceSync.bind(this),\n        this.configuration.forceSyncInterval,\n      )\n    }\n\n    this.configuration.websocketProvider.attach(this)\n  }\n\n  public onStatus({ status } : onStatusParameters) {\n    this.status = status\n\n    this.configuration.onStatus({ status })\n    this.emit('status', { status })\n  }\n\n  public setConfiguration(configuration: Partial<HocuspocusProviderConfiguration> = {}): void {\n    if (!configuration.websocketProvider && (configuration as CompleteHocuspocusProviderWebsocketConfiguration).url) {\n      const websocketProviderConfig = configuration as CompleteHocuspocusProviderWebsocketConfiguration\n\n      this.configuration.websocketProvider = new HocuspocusProviderWebsocket({\n        url: websocketProviderConfig.url,\n        parameters: websocketProviderConfig.parameters,\n      })\n    }\n\n    this.configuration = { ...this.configuration, ...configuration }\n  }\n\n  get document() {\n    return this.configuration.document\n  }\n\n  get awareness() {\n    return this.configuration.awareness\n  }\n\n  get hasUnsyncedChanges(): boolean {\n    return this.unsyncedChanges > 0\n  }\n\n  updateUnsyncedChanges(unsyncedChanges = 0) {\n    this.unsyncedChanges += unsyncedChanges\n    this.emit('unsyncedChanges', this.unsyncedChanges)\n  }\n\n  forceSync() {\n    this.send(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name })\n  }\n\n  boundBeforeUnload = this.beforeUnload.bind(this)\n\n  beforeUnload() {\n    removeAwarenessStates(this.awareness, [this.document.clientID], 'window unload')\n  }\n\n  registerEventListeners() {\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.addEventListener('beforeunload', this.boundBeforeUnload)\n  }\n\n  sendStateless(payload: string) {\n    this.send(StatelessMessage, { documentName: this.configuration.name, payload })\n  }\n\n  documentUpdateHandler(update: Uint8Array, origin: any) {\n    if (origin === this) {\n      return\n    }\n\n    this.updateUnsyncedChanges(1)\n    this.send(UpdateMessage, { update, documentName: this.configuration.name }, true)\n  }\n\n  awarenessUpdateHandler({ added, updated, removed }: any, origin: any) {\n    const changedClients = added.concat(updated).concat(removed)\n\n    this.send(AwarenessMessage, {\n      awareness: this.awareness,\n      clients: changedClients,\n      documentName: this.configuration.name,\n    }, true)\n  }\n\n  get synced(): boolean {\n    return this.isSynced\n  }\n\n  set synced(state) {\n    if (this.isSynced === state) {\n      return\n    }\n\n    if (state && this.unsyncedChanges > 0) {\n      this.updateUnsyncedChanges(-1 * this.unsyncedChanges)\n    }\n\n    this.isSynced = state\n    this.emit('synced', { state })\n    this.emit('sync', { state })\n  }\n\n  receiveStateless(payload: string) {\n    this.emit('stateless', { payload })\n  }\n\n  get isAuthenticationRequired(): boolean {\n    return !!this.configuration.token && !this.isAuthenticated\n  }\n\n  // not needed, but provides backward compatibility with e.g. lexicla/yjs\n  async connect() {\n    return this.configuration.websocketProvider.connect()\n  }\n\n  disconnect() {\n    this.disconnectBroadcastChannel()\n    this.configuration.websocketProvider.detach(this)\n  }\n\n  async onOpen(event: Event) {\n    this.isAuthenticated = false\n\n    this.emit('open', { event })\n\n    if (this.isAuthenticationRequired) {\n      this.send(AuthenticationMessage, {\n        token: await this.getToken(),\n        documentName: this.configuration.name,\n      })\n    }\n\n    this.startSync()\n  }\n\n  async getToken() {\n    if (typeof this.configuration.token === 'function') {\n      const token = await this.configuration.token()\n      return token\n    }\n\n    return this.configuration.token\n  }\n\n  startSync() {\n    this.send(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name })\n\n    if (this.awareness.getLocalState() !== null) {\n      this.send(AwarenessMessage, {\n        awareness: this.awareness,\n        clients: [this.document.clientID],\n        documentName: this.configuration.name,\n      })\n    }\n  }\n\n  send(message: ConstructableOutgoingMessage, args: any, broadcast = false) {\n    if (!this.isConnected) return\n\n    if (broadcast) {\n      this.mux(() => { this.broadcast(message, args) })\n    }\n\n    const messageSender = new MessageSender(message, args)\n\n    this.emit('outgoingMessage', { message: messageSender.message })\n    messageSender.send(this.configuration.websocketProvider)\n  }\n\n  onMessage(event: MessageEvent) {\n    const message = new IncomingMessage(event.data)\n\n    const documentName = message.readVarString()\n\n    if (documentName !== this.configuration.name) {\n      return // message is meant for another provider\n    }\n\n    message.writeVarString(documentName)\n\n    this.emit('message', { event, message: new IncomingMessage(event.data) })\n\n    new MessageReceiver(message).apply(this)\n  }\n\n  onClose(event: CloseEvent) {\n    this.isAuthenticated = false\n    this.synced = false\n\n    // update awareness (all users except local left)\n    removeAwarenessStates(\n      this.awareness,\n      Array.from(this.awareness.getStates().keys()).filter(client => client !== this.document.clientID),\n      this,\n    )\n  }\n\n  destroy() {\n    this.emit('destroy')\n\n    if (this.intervals.forceSync) {\n      clearInterval(this.intervals.forceSync)\n    }\n\n    removeAwarenessStates(this.awareness, [this.document.clientID], 'provider destroy')\n\n    this.disconnect()\n\n    this.awareness.off('update', this.awarenessUpdateHandler)\n    this.document.off('update', this.documentUpdateHandler)\n\n    this.removeAllListeners()\n\n    this.send(CloseMessage, { documentName: this.configuration.name })\n    this.isConnected = false\n\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.removeEventListener('beforeunload', this.boundBeforeUnload)\n  }\n\n  permissionDeniedHandler(reason: string) {\n    this.emit('authenticationFailed', { reason })\n    this.isAuthenticated = false\n    this.disconnect()\n    this.status = WebSocketStatus.Disconnected\n  }\n\n  authenticatedHandler(scope: string) {\n    this.isAuthenticated = true\n    this.authorizedScope = scope\n\n    this.emit('authenticated')\n    this.startSync()\n  }\n\n  get broadcastChannel() {\n    return `${this.configuration.name}`\n  }\n\n  boundBroadcastChannelSubscriber = this.broadcastChannelSubscriber.bind(this)\n\n  broadcastChannelSubscriber(data: ArrayBuffer) {\n    this.mux(() => {\n      const message = new IncomingMessage(data)\n\n      const documentName = message.readVarString()\n\n      message.writeVarString(documentName)\n\n      new MessageReceiver(message)\n        .setBroadcasted(true)\n        .apply(this, false)\n    })\n  }\n\n  subscribeToBroadcastChannel() {\n    if (!this.subscribedToBroadcastChannel) {\n      bc.subscribe(this.broadcastChannel, this.boundBroadcastChannelSubscriber)\n      this.subscribedToBroadcastChannel = true\n    }\n\n    this.mux(() => {\n      this.broadcast(SyncStepOneMessage, { document: this.document })\n      this.broadcast(SyncStepTwoMessage, { document: this.document })\n      this.broadcast(QueryAwarenessMessage, { document: this.document })\n      this.broadcast(AwarenessMessage, { awareness: this.awareness, clients: [this.document.clientID], document: this.document })\n    })\n  }\n\n  disconnectBroadcastChannel() {\n    // broadcast message with local awareness state set to null (indicating disconnect)\n    this.send(AwarenessMessage, {\n      awareness: this.awareness,\n      clients: [this.document.clientID],\n      states: new Map(),\n      documentName: this.configuration.name,\n    }, true)\n\n    if (this.subscribedToBroadcastChannel) {\n      bc.unsubscribe(this.broadcastChannel, this.boundBroadcastChannelSubscriber)\n      this.subscribedToBroadcastChannel = false\n    }\n  }\n\n  broadcast(Message: ConstructableOutgoingMessage, args?: any) {\n    if (!this.configuration.broadcast) {\n      return\n    }\n\n    if (!this.subscribedToBroadcastChannel) {\n      return\n    }\n\n    new MessageSender(Message, args).broadcast(this.broadcastChannel)\n  }\n\n  setAwarenessField(key: string, value: any) {\n    this.awareness.setLocalStateField(key, value)\n  }\n}\n","import {\n  CompleteHocuspocusProviderWebsocketConfiguration,\n  HocuspocusProviderWebsocket, HocuspocusProviderWebsocketConfiguration,\n} from './HocuspocusProviderWebsocket.js'\n\nexport type TiptapCollabProviderWebsocketConfiguration =\n  Partial<CompleteHocuspocusProviderWebsocketConfiguration> &\n  AdditionalTiptapCollabProviderWebsocketConfiguration\n\nexport interface AdditionalTiptapCollabProviderWebsocketConfiguration {\n  /**\n   * A Hocuspocus Cloud App ID, get one here: https://collab.tiptap.dev\n   */\n  appId: string,\n}\n\nexport class TiptapCollabProviderWebsocket extends HocuspocusProviderWebsocket {\n  constructor(configuration: TiptapCollabProviderWebsocketConfiguration) {\n    super({ ...configuration as HocuspocusProviderWebsocketConfiguration, url: `wss://${configuration.appId}.collab.tiptap.cloud` })\n  }\n}\n","import {\n  HocuspocusProvider,\n  HocuspocusProviderConfiguration,\n} from './HocuspocusProvider.js'\n\nimport { TiptapCollabProviderWebsocket } from './TiptapCollabProviderWebsocket.js'\n\nexport type TiptapCollabProviderConfiguration =\n  Required<Pick<HocuspocusProviderConfiguration, 'name'>> &\n  Partial<HocuspocusProviderConfiguration> &\n  AdditionalTiptapCollabProviderConfiguration\n\nexport interface AdditionalTiptapCollabProviderConfiguration {\n  /**\n   * A Hocuspocus Cloud App ID, get one here: https://collab.tiptap.dev\n   */\n  appId: string,\n}\n\nexport class TiptapCollabProvider extends HocuspocusProvider {\n  constructor(configuration: TiptapCollabProviderConfiguration) {\n    if (!configuration.websocketProvider) {\n      configuration.websocketProvider = new TiptapCollabProviderWebsocket({ appId: configuration.appId })\n    }\n\n    if (!configuration.token) {\n      configuration.token = 'notoken' // need to send a token anyway (which will be ignored)\n    }\n\n    super(configuration as HocuspocusProviderConfiguration)\n  }\n}\n"],"names":["create","length","object.length","object.hasProperty","map.create","string.fromCamelCase","conditions.undefinedToNull","storage.varStorage","f.isOneOf","buffer.createUint8ArrayViewFromArrayBuffer","binary.BITS7","binary.BIT8","math.floor","string.utf8TextEncoder","string.encodeUtf8","math.min","math.max","error.create","number.MAX_SAFE_INTEGER","string.utf8TextDecoder","string.fromCharCode","env.isBrowser","buffer.fromBase64","storage.onChange","buffer.toBase64","buffer.createUint8ArrayFromArrayBuffer","storage.offChange","map.setIfUndefined","set.create","array.from","time.getUnixTime","f.equalityDeep","encoding.createEncoder","encoding.writeVarUint","encoding.writeVarString","encoding.toUint8Array","decoding.createDecoder","decoding.readVarUint","decoding.readVarString","Y","encoding.writeVarUint8Array","decoding.readVarUint8Array","MessageType","WebSocketStatus","awarenessProtocol.applyAwarenessUpdate","readAuthMessage","awarenessProtocol.encodeAwarenessUpdate","bc.publish","syncProtocol.writeSyncStep1","syncProtocol.writeSyncStep2","writeAuthentication","object.map","mutex.createMutex","retry","url.encodeQueryParams","WsReadyStates","Unauthorized","Forbidden","MessageTooBig","awarenessStatesToArray","bc.subscribe","bc.unsubscribe"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"hocuspocus-provider.cjs","sources":["../../../node_modules/lib0/map.js","../../../node_modules/lib0/set.js","../../../node_modules/lib0/array.js","../../../node_modules/lib0/string.js","../../../node_modules/lib0/conditions.js","../../../node_modules/lib0/storage.js","../../../node_modules/lib0/object.js","../../../node_modules/lib0/function.js","../../../node_modules/lib0/environment.js","../../../node_modules/lib0/math.js","../../../node_modules/lib0/binary.js","../../../node_modules/lib0/number.js","../../../node_modules/lib0/encoding.js","../../../node_modules/lib0/error.js","../../../node_modules/lib0/decoding.js","../../../node_modules/lib0/buffer.js","../../../node_modules/lib0/broadcastchannel.js","../../../node_modules/lib0/mutex.js","../../../node_modules/lib0/time.js","../../../node_modules/lib0/observable.js","../../../node_modules/y-protocols/awareness.js","../src/EventEmitter.ts","../../../node_modules/lib0/url.js","../src/types.ts","../src/HocuspocusProviderWebsocket.ts","../src/IncomingMessage.ts","../../../node_modules/y-protocols/sync.js","../src/OutgoingMessage.ts","../src/MessageReceiver.ts","../src/MessageSender.ts","../src/OutgoingMessages/AuthenticationMessage.ts","../src/OutgoingMessages/AwarenessMessage.ts","../src/OutgoingMessages/CloseMessage.ts","../src/OutgoingMessages/QueryAwarenessMessage.ts","../src/OutgoingMessages/StatelessMessage.ts","../src/OutgoingMessages/SyncStepOneMessage.ts","../src/OutgoingMessages/SyncStepTwoMessage.ts","../src/OutgoingMessages/UpdateMessage.ts","../src/HocuspocusProvider.ts","../src/TiptapCollabProviderWebsocket.ts","../src/TiptapCollabProvider.ts"],"sourcesContent":["/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template V,K\n * @template {Map<K,V>} MAP\n * @param {MAP} map\n * @param {K} key\n * @param {function():V} createT\n * @return {V}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value || undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n","import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release &&\n  /node|io\\.js/.test(process.release.name)\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n/* c8 ignore stop */\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* c8 ignore start */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* c8 ignore start */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* c8 ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* c8 ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/* eslint-env browser */\n\n/**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */\n\n// @todo before next major: use Uint8Array instead as buffer object\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as buffer from './buffer.js'\nimport * as storage from './storage.js'\n\n/**\n * @typedef {Object} Channel\n * @property {Set<function(any, any):any>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nconst channels = new Map()\n\n/* c8 ignore start */\nclass LocalStoragePolyfill {\n  /**\n   * @param {string} room\n   */\n  constructor (room) {\n    this.room = room\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null\n    /**\n     * @param {any} e\n     */\n    this._onChange = e => e.key === room && this.onmessage !== null && this.onmessage({ data: buffer.fromBase64(e.newValue || '') })\n    storage.onChange(this._onChange)\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  postMessage (buf) {\n    storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)))\n  }\n\n  close () {\n    storage.offChange(this._onChange)\n  }\n}\n/* c8 ignore stop */\n\n// Use BroadcastChannel or Polyfill\n/* c8 ignore next */\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nconst getChannel = room =>\n  map.setIfUndefined(channels, room, () => {\n    const subs = set.create()\n    const bc = new BC(room)\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    /* c8 ignore next */\n    bc.onmessage = e => subs.forEach(sub => sub(e.data, 'broadcastchannel'))\n    return {\n      bc, subs\n    }\n  })\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const subscribe = (room, f) => {\n  getChannel(room).subs.add(f)\n  return f\n}\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const unsubscribe = (room, f) => {\n  const channel = getChannel(room)\n  const unsubscribed = channel.subs.delete(f)\n  if (unsubscribed && channel.subs.size === 0) {\n    channel.bc.close()\n    channels.delete(room)\n  }\n  return unsubscribed\n}\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n * @param {any} [origin]\n */\nexport const publish = (room, data, origin = null) => {\n  const c = getChannel(room)\n  c.bc.postMessage(data)\n  c.subs.forEach(sub => sub(data, origin))\n}\n","/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nexport const createMutex = () => {\n  let token = true\n  return (f, g) => {\n    if (token) {\n      token = false\n      try {\n        f()\n      } finally {\n        token = true\n      }\n    } else if (g !== undefined) {\n      g()\n    }\n  }\n}\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n","export default class EventEmitter {\n\n  public callbacks: { [key: string]: Function[] } = {}\n\n  public on(event: string, fn: Function): this {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = []\n    }\n\n    this.callbacks[event].push(fn)\n\n    return this\n  }\n\n  protected emit(event: string, ...args: any): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args))\n    }\n\n    return this\n  }\n\n  public off(event: string, fn?: Function): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      if (fn) {\n        this.callbacks[event] = callbacks.filter(callback => callback !== fn)\n      } else {\n        delete this.callbacks[event]\n      }\n    }\n\n    return this\n  }\n\n  removeAllListeners(): void {\n    this.callbacks = {}\n  }\n}\n","/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js'\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {}\n  const urlQuerySplit = url.split('?')\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\n  for (let i = 0; i < pairs.length; i++) {\n    const item = pairs[i]\n    if (item.length > 0) {\n      const pair = item.split('=')\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n  }\n  return query\n}\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport const encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\n","import { Encoder } from 'lib0/encoding'\nimport type { CloseEvent, Event, MessageEvent } from 'ws'\nimport { Awareness } from 'y-protocols/awareness'\nimport * as Y from 'yjs'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { OutgoingMessage } from './OutgoingMessage.js'\nimport { AuthenticationMessage } from './OutgoingMessages/AuthenticationMessage.js'\nimport { AwarenessMessage } from './OutgoingMessages/AwarenessMessage.js'\nimport { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js'\nimport { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js'\nimport { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js'\nimport { UpdateMessage } from './OutgoingMessages/UpdateMessage.js'\n\nexport enum MessageType {\n  Sync = 0,\n  Awareness = 1,\n  Auth = 2,\n  QueryAwareness = 3,\n  Stateless = 5,\n  CLOSE = 7,\n  SyncStatus = 8,\n}\n\nexport enum WebSocketStatus {\n  Connecting = 'connecting',\n  Connected = 'connected',\n  Disconnected = 'disconnected',\n}\n\nexport interface OutgoingMessageInterface {\n  encoder: Encoder\n  type?: MessageType\n}\n\nexport interface OutgoingMessageArguments {\n  documentName: string,\n  token: string,\n  document: Y.Doc,\n  awareness: Awareness,\n  clients: number[],\n  states: Map<number, { [key: string]: any; }>,\n  update: any,\n  payload: string,\n  encoder: Encoder,\n}\n\nexport interface Constructable<T> {\n  new(...args: any) : T\n}\n\nexport type ConstructableOutgoingMessage =\n  Constructable<AuthenticationMessage> |\n  Constructable<AwarenessMessage> |\n  Constructable<QueryAwarenessMessage> |\n  Constructable<SyncStepOneMessage> |\n  Constructable<SyncStepTwoMessage> |\n  Constructable<UpdateMessage>\n\nexport type onAuthenticationFailedParameters = {\n  reason: string,\n}\n\nexport type onOpenParameters = {\n  event: Event,\n}\n\nexport type onMessageParameters = {\n  event: MessageEvent,\n  message: IncomingMessage,\n}\n\nexport type onOutgoingMessageParameters = {\n  message: OutgoingMessage,\n}\n\nexport type onStatusParameters = {\n  status: WebSocketStatus,\n}\n\nexport type onSyncedParameters = {\n  state: boolean,\n}\n\nexport type onDisconnectParameters = {\n  event: CloseEvent,\n}\n\nexport type onCloseParameters = {\n  event: CloseEvent,\n}\n\nexport type onAwarenessUpdateParameters = {\n  states: StatesArray\n}\n\nexport type onAwarenessChangeParameters = {\n  states: StatesArray\n}\n\nexport type onStatelessParameters = {\n  payload: string\n}\n\nexport type StatesArray = { clientId: number, [key: string | number]: any }[]\n","import {\n  Forbidden, MessageTooBig, Unauthorized, WsReadyStates,\n} from '@hocuspocus/common'\nimport { retry } from '@lifeomic/attempt'\nimport * as mutex from 'lib0/mutex'\nimport * as time from 'lib0/time'\nimport * as url from 'lib0/url'\nimport type { MessageEvent } from 'ws'\nimport { Event } from 'ws'\nimport EventEmitter from './EventEmitter.js'\nimport { HocuspocusProvider } from './HocuspocusProvider.js'\nimport {\n  WebSocketStatus,\n  onAwarenessChangeParameters, onAwarenessUpdateParameters,\n  onCloseParameters, onDisconnectParameters, onMessageParameters, onOpenParameters, onOutgoingMessageParameters, onStatusParameters,\n} from './types.js'\n\nexport type HocuspocusProviderWebsocketConfiguration =\n  Required<Pick<CompleteHocuspocusProviderWebsocketConfiguration, 'url'>>\n  & Partial<CompleteHocuspocusProviderWebsocketConfiguration>\n\nexport interface CompleteHocuspocusProviderWebsocketConfiguration {\n  /**\n   * URL of your @hocuspocus/server instance\n   */\n   url: string,\n\n  /**\n   * Pass `false` to start the connection manually.\n   */\n  connect: boolean,\n\n  /**\n   * URL parameters that should be added.\n   */\n  parameters: { [key: string]: any },\n  /**\n   * An optional WebSocket polyfill, for example for Node.js\n   */\n  WebSocketPolyfill: any,\n\n  /**\n   * Disconnect when no message is received for the defined amount of milliseconds.\n   */\n  messageReconnectTimeout: number,\n  /**\n   * The delay between each attempt in milliseconds. You can provide a factor to have the delay grow exponentially.\n   */\n  delay: number,\n  /**\n   * The intialDelay is the amount of time to wait before making the first attempt. This option should typically be 0 since you typically want the first attempt to happen immediately.\n   */\n  initialDelay: number,\n  /**\n   * The factor option is used to grow the delay exponentially.\n   */\n  factor: number,\n  /**\n   * The maximum number of attempts or 0 if there is no limit on number of attempts.\n   */\n  maxAttempts: number,\n  /**\n   * minDelay is used to set a lower bound of delay when jitter is enabled. This property has no effect if jitter is disabled.\n   */\n  minDelay: number,\n  /**\n   * The maxDelay option is used to set an upper bound for the delay when factor is enabled. A value of 0 can be provided if there should be no upper bound when calculating delay.\n   */\n  maxDelay: number,\n  /**\n   * If jitter is true then the calculated delay will be a random integer value between minDelay and the calculated delay for the current iteration.\n   */\n  jitter: boolean,\n  /**\n   * A timeout in milliseconds. If timeout is non-zero then a timer is set using setTimeout. If the timeout is triggered then future attempts will be aborted.\n   */\n  timeout: number,\n  onOpen: (data: onOpenParameters) => void,\n  onConnect: () => void,\n  onMessage: (data: onMessageParameters) => void,\n  onOutgoingMessage: (data: onOutgoingMessageParameters) => void,\n  onStatus: (data: onStatusParameters) => void,\n  onDisconnect: (data: onDisconnectParameters) => void,\n  onClose: (data: onCloseParameters) => void,\n  onDestroy: () => void,\n  onAwarenessUpdate: (data: onAwarenessUpdateParameters) => void,\n  onAwarenessChange: (data: onAwarenessChangeParameters) => void,\n  /**\n   * Don’t output any warnings.\n   */\n  quiet: boolean,\n}\n\nexport class HocuspocusProviderWebsocket extends EventEmitter {\n  private messageQueue: any[] = []\n\n  public configuration: CompleteHocuspocusProviderWebsocketConfiguration = {\n    url: '',\n    // @ts-ignore\n    document: undefined,\n    // @ts-ignore\n    awareness: undefined,\n    WebSocketPolyfill: undefined,\n    parameters: {},\n    connect: true,\n    broadcast: true,\n    forceSyncInterval: false,\n    // TODO: this should depend on awareness.outdatedTime\n    messageReconnectTimeout: 30000,\n    // 1 second\n    delay: 1000,\n    // instant\n    initialDelay: 0,\n    // double the delay each time\n    factor: 2,\n    // unlimited retries\n    maxAttempts: 0,\n    // wait at least 1 second\n    minDelay: 1000,\n    // at least every 30 seconds\n    maxDelay: 30000,\n    // randomize\n    jitter: true,\n    // retry forever\n    timeout: 0,\n    onOpen: () => null,\n    onConnect: () => null,\n    onMessage: () => null,\n    onOutgoingMessage: () => null,\n    onStatus: () => null,\n    onDisconnect: () => null,\n    onClose: () => null,\n    onDestroy: () => null,\n    onAwarenessUpdate: () => null,\n    onAwarenessChange: () => null,\n    quiet: false,\n  }\n\n  subscribedToBroadcastChannel = false\n\n  webSocket: WebSocket | null = null\n\n  shouldConnect = true\n\n  status = WebSocketStatus.Disconnected\n\n  lastMessageReceived = 0\n\n  mux = mutex.createMutex()\n\n  intervals: any = {\n    forceSync: null,\n    connectionChecker: null,\n  }\n\n  connectionAttempt: {\n    resolve: (value?: any) => void\n    reject: (reason?: any) => void\n  } | null = null\n\n  constructor(configuration: HocuspocusProviderWebsocketConfiguration) {\n    super()\n    this.setConfiguration(configuration)\n\n    this.configuration.WebSocketPolyfill = configuration.WebSocketPolyfill ? configuration.WebSocketPolyfill : WebSocket\n\n    this.on('open', this.configuration.onOpen)\n    this.on('open', this.onOpen.bind(this))\n    this.on('connect', this.configuration.onConnect)\n    this.on('message', this.configuration.onMessage)\n    this.on('outgoingMessage', this.configuration.onOutgoingMessage)\n    this.on('status', this.configuration.onStatus)\n    this.on('status', this.onStatus.bind(this))\n    this.on('disconnect', this.configuration.onDisconnect)\n    this.on('close', this.configuration.onClose)\n    this.on('destroy', this.configuration.onDestroy)\n    this.on('awarenessUpdate', this.configuration.onAwarenessUpdate)\n    this.on('awarenessChange', this.configuration.onAwarenessChange)\n\n    this.on('close', this.onClose.bind(this))\n    this.on('message', this.onMessage.bind(this))\n\n    this.registerEventListeners()\n\n    this.intervals.connectionChecker = setInterval(\n      this.checkConnection.bind(this),\n      this.configuration.messageReconnectTimeout / 10,\n    )\n\n    if (typeof configuration.connect !== 'undefined') {\n      this.shouldConnect = configuration.connect\n    }\n\n    if (!this.shouldConnect) {\n      return\n    }\n\n    this.connect()\n  }\n\n  receivedOnOpenPayload?: Event | undefined = undefined\n\n  receivedOnStatusPayload?: onStatusParameters | undefined = undefined\n\n  async onOpen(event: Event) {\n    this.receivedOnOpenPayload = event\n  }\n\n  async onStatus(data: onStatusParameters) {\n    this.receivedOnStatusPayload = data\n  }\n\n  attach(provider: HocuspocusProvider) {\n    if (this.receivedOnOpenPayload) {\n      provider.onOpen(this.receivedOnOpenPayload)\n    }\n\n    if (this.receivedOnStatusPayload) {\n      provider.onStatus(this.receivedOnStatusPayload)\n    }\n  }\n\n  detach(provider: HocuspocusProvider) {\n    // tell the server to remove the listener\n\n  }\n\n  public setConfiguration(configuration: Partial<HocuspocusProviderWebsocketConfiguration> = {}): void {\n    this.configuration = { ...this.configuration, ...configuration }\n  }\n\n  boundConnect = this.connect.bind(this)\n\n  cancelWebsocketRetry?: () => void\n\n  async connect() {\n    if (this.status === WebSocketStatus.Connected) {\n      return\n    }\n\n    // Always cancel any previously initiated connection retryer instances\n    if (this.cancelWebsocketRetry) {\n      this.cancelWebsocketRetry()\n      this.cancelWebsocketRetry = undefined\n    }\n\n    this.shouldConnect = true\n\n    const abortableRetry = () => {\n      let cancelAttempt = false\n\n      const retryPromise = retry(this.createWebSocketConnection.bind(this), {\n        delay: this.configuration.delay,\n        initialDelay: this.configuration.initialDelay,\n        factor: this.configuration.factor,\n        maxAttempts: this.configuration.maxAttempts,\n        minDelay: this.configuration.minDelay,\n        maxDelay: this.configuration.maxDelay,\n        jitter: this.configuration.jitter,\n        timeout: this.configuration.timeout,\n        beforeAttempt: context => {\n          if (!this.shouldConnect || cancelAttempt) {\n            context.abort()\n          }\n        },\n      }).catch((error: any) => {\n        // If we aborted the connection attempt then don’t throw an error\n        // ref: https://github.com/lifeomic/attempt/blob/master/src/index.ts#L136\n        if (error && error.code !== 'ATTEMPT_ABORTED') {\n          throw error\n        }\n      })\n\n      return {\n        retryPromise,\n        cancelFunc: () => {\n          cancelAttempt = true\n        },\n      }\n    }\n\n    const { retryPromise, cancelFunc } = abortableRetry()\n    this.cancelWebsocketRetry = cancelFunc\n\n    return retryPromise\n  }\n\n  createWebSocketConnection() {\n    return new Promise((resolve, reject) => {\n      if (this.webSocket) {\n        this.messageQueue = []\n        this.webSocket.close()\n        this.webSocket = null\n      }\n\n      // Init the WebSocket connection\n      const ws = new this.configuration.WebSocketPolyfill(this.url)\n      ws.binaryType = 'arraybuffer'\n      ws.onmessage = (payload: any) => this.emit('message', payload)\n      ws.onclose = (payload: any) => this.emit('close', { event: payload })\n      ws.onopen = (payload: any) => this.emit('open', payload)\n      ws.onerror = (err: any) => {\n        reject(err)\n      }\n      this.webSocket = ws\n\n      // Reset the status\n      this.status = WebSocketStatus.Connecting\n      this.emit('status', { status: WebSocketStatus.Connecting })\n\n      // Store resolve/reject for later use\n      this.connectionAttempt = {\n        resolve,\n        reject,\n      }\n    })\n  }\n\n  onMessage(event: MessageEvent) {\n    this.resolveConnectionAttempt()\n  }\n\n  resolveConnectionAttempt() {\n    if (this.connectionAttempt) {\n      this.connectionAttempt.resolve()\n      this.connectionAttempt = null\n\n      this.status = WebSocketStatus.Connected\n      this.emit('status', { status: WebSocketStatus.Connected })\n      this.emit('connect')\n      this.messageQueue.forEach(message => this.send(message))\n      this.messageQueue = []\n    }\n  }\n\n  stopConnectionAttempt() {\n    this.connectionAttempt = null\n  }\n\n  rejectConnectionAttempt() {\n    this.connectionAttempt?.reject()\n    this.connectionAttempt = null\n  }\n\n  checkConnection() {\n    // Don’t check the connection when it’s not even established\n    if (this.status !== WebSocketStatus.Connected) {\n      return\n    }\n\n    // Don’t close then connection while waiting for the first message\n    if (!this.lastMessageReceived) {\n      return\n    }\n\n    // Don’t close the connection when a message was received recently\n    if (this.configuration.messageReconnectTimeout >= time.getUnixTime() - this.lastMessageReceived) {\n      return\n    }\n\n    // No message received in a long time, not even your own\n    // Awareness updates, which are updated every 15 seconds.\n    this.webSocket?.close()\n    this.messageQueue = []\n  }\n\n  registerEventListeners() {\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.addEventListener('online', this.boundConnect)\n  }\n\n  // Ensure that the URL always ends with /\n  get serverUrl() {\n    while (this.configuration.url[this.configuration.url.length - 1] === '/') {\n      return this.configuration.url.slice(0, this.configuration.url.length - 1)\n    }\n\n    return this.configuration.url\n  }\n\n  get url() {\n    const encodedParams = url.encodeQueryParams(this.configuration.parameters)\n\n    return `${this.serverUrl}${encodedParams.length === 0 ? '' : `?${encodedParams}`}`\n  }\n\n  disconnect() {\n    this.shouldConnect = false\n\n    if (this.webSocket === null) {\n      return\n    }\n\n    try {\n      this.webSocket.close()\n      this.messageQueue = []\n    } catch {\n      //\n    }\n  }\n\n  send(message: any) {\n    if (this.webSocket?.readyState === WsReadyStates.Open) {\n      this.webSocket.send(message)\n    } else {\n      this.messageQueue.push(message)\n    }\n  }\n\n  onClose({ event }: onCloseParameters) {\n    this.webSocket = null\n\n    if (this.status === WebSocketStatus.Connected) {\n      this.status = WebSocketStatus.Disconnected\n      this.emit('status', { status: WebSocketStatus.Disconnected })\n      this.emit('disconnect', { event })\n    }\n\n    if (event.code === Unauthorized.code) {\n      if (event.reason === Unauthorized.reason) {\n        console.warn('[HocuspocusProvider] An authentication token is required, but you didn’t send one. Try adding a `token` to your HocuspocusProvider configuration. Won’t try again.')\n      } else {\n        console.warn(`[HocuspocusProvider] Connection closed with status Unauthorized: ${event.reason}`)\n      }\n\n      this.shouldConnect = false\n    }\n\n    if (event.code === Forbidden.code) {\n      if (!this.configuration.quiet) {\n        console.warn('[HocuspocusProvider] The provided authentication token isn’t allowed to connect to this server. Will try again.')\n        return // TODO REMOVE ME\n      }\n    }\n\n    if (event.code === MessageTooBig.code) {\n      console.warn(`[HocuspocusProvider] Connection closed with status MessageTooBig: ${event.reason}`)\n      this.shouldConnect = false\n    }\n\n    if (this.connectionAttempt) {\n      // That connection attempt failed.\n      this.rejectConnectionAttempt()\n    } else if (this.shouldConnect) {\n      // The connection was closed by the server. Let’s just try again.\n      this.connect()\n    }\n\n    // If we’ll reconnect, we’re done for now.\n    if (this.shouldConnect) {\n      return\n    }\n\n    // The status is set correctly already.\n    if (this.status === WebSocketStatus.Disconnected) {\n      return\n    }\n\n    // Let’s update the connection status.\n    this.status = WebSocketStatus.Disconnected\n    this.emit('status', { status: WebSocketStatus.Disconnected })\n    this.emit('disconnect', { event })\n  }\n\n  destroy() {\n    this.emit('destroy')\n\n    if (this.intervals.forceSync) {\n      clearInterval(this.intervals.forceSync)\n    }\n\n    clearInterval(this.intervals.connectionChecker)\n\n    // If there is still a connection attempt outstanding then we should stop\n    // it before calling disconnect, otherwise it will be rejected in the onClose\n    // handler and trigger a retry\n    this.stopConnectionAttempt()\n\n    this.disconnect()\n\n    this.removeAllListeners()\n\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.removeEventListener('online', this.boundConnect)\n  }\n\n}\n","import {\n  createDecoder,\n  readVarUint,\n  readVarUint8Array,\n  readVarString,\n  Decoder,\n} from 'lib0/decoding'\nimport {\n  Encoder,\n  createEncoder,\n  writeVarUint,\n  writeVarUint8Array,\n  writeVarString,\n  length,\n} from 'lib0/encoding'\nimport { MessageType } from './types.js'\n\nexport class IncomingMessage {\n\n  data: any\n\n  encoder: Encoder\n\n  decoder: Decoder\n\n  constructor(data: any) {\n    this.data = data\n    this.encoder = createEncoder()\n    this.decoder = createDecoder(new Uint8Array(this.data))\n  }\n\n  readVarUint(): MessageType {\n    return readVarUint(this.decoder)\n  }\n\n  readVarString(): string {\n    return readVarString(this.decoder)\n  }\n\n  readVarUint8Array() {\n    return readVarUint8Array(this.decoder)\n  }\n\n  writeVarUint(type: MessageType) {\n    return writeVarUint(this.encoder, type)\n  }\n\n  writeVarString(string: string) {\n    return writeVarString(this.encoder, string)\n  }\n\n  writeVarUint8Array(data: Uint8Array) {\n    return writeVarUint8Array(this.encoder, data)\n  }\n\n  length() {\n    return length(this.encoder)\n  }\n}\n","/**\n * @module sync-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as Y from 'yjs'\n\n/**\n * @typedef {Map<number, number>} StateMap\n */\n\n/**\n * Core Yjs defines two message types:\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it\n *   received all information from the remote client.\n *\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\n *\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\n * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.\n * Therefore it is necesarry that the client initiates the sync.\n *\n * Construction of a message:\n * [messageType : varUint, message definition..]\n *\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\n *\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\n */\n\nexport const messageYjsSyncStep1 = 0\nexport const messageYjsSyncStep2 = 1\nexport const messageYjsUpdate = 2\n\n/**\n * Create a sync step 1 message based on the state of the current shared document.\n *\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n */\nexport const writeSyncStep1 = (encoder, doc) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep1)\n  const sv = Y.encodeStateVector(doc)\n  encoding.writeVarUint8Array(encoder, sv)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n * @param {Uint8Array} [encodedStateVector]\n */\nexport const writeSyncStep2 = (encoder, doc, encodedStateVector) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep2)\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector))\n}\n\n/**\n * Read SyncStep1 message and reply with SyncStep2.\n *\n * @param {decoding.Decoder} decoder The reply to the received message\n * @param {encoding.Encoder} encoder The received message\n * @param {Y.Doc} doc\n */\nexport const readSyncStep1 = (decoder, encoder, doc) =>\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder))\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncStep2 = (decoder, doc, transactionOrigin) => {\n  try {\n    Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin)\n  } catch (error) {\n    // This catches errors that are thrown by event handlers\n    console.error('Caught error while handling a Yjs update', error)\n  }\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Uint8Array} update\n */\nexport const writeUpdate = (encoder, update) => {\n  encoding.writeVarUint(encoder, messageYjsUpdate)\n  encoding.writeVarUint8Array(encoder, update)\n}\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readUpdate = readSyncStep2\n\n/**\n * @param {decoding.Decoder} decoder A message received from another client\n * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\n  const messageType = decoding.readVarUint(decoder)\n  switch (messageType) {\n    case messageYjsSyncStep1:\n      readSyncStep1(decoder, encoder, doc)\n      break\n    case messageYjsSyncStep2:\n      readSyncStep2(decoder, doc, transactionOrigin)\n      break\n    case messageYjsUpdate:\n      readUpdate(decoder, doc, transactionOrigin)\n      break\n    default:\n      throw new Error('Unknown message type')\n  }\n  return messageType\n}\n","import { Encoder, createEncoder, toUint8Array } from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments, OutgoingMessageInterface } from './types.js'\n\nexport class OutgoingMessage implements OutgoingMessageInterface {\n  encoder: Encoder\n\n  type?: MessageType\n\n  constructor() {\n    this.encoder = createEncoder()\n  }\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    return args.encoder\n  }\n\n  toUint8Array() {\n    return toUint8Array(this.encoder)\n  }\n}\n","import { readAuthMessage } from '@hocuspocus/common'\nimport { readVarInt, readVarString } from 'lib0/decoding'\nimport * as awarenessProtocol from 'y-protocols/awareness'\nimport { messageYjsSyncStep2, readSyncMessage } from 'y-protocols/sync'\nimport { HocuspocusProvider } from './HocuspocusProvider.js'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { OutgoingMessage } from './OutgoingMessage.js'\nimport { MessageType } from './types.js'\n\nexport class MessageReceiver {\n\n  message: IncomingMessage\n\n  broadcasted = false\n\n  constructor(message: IncomingMessage) {\n    this.message = message\n  }\n\n  public setBroadcasted(value: boolean) {\n    this.broadcasted = value\n\n    return this\n  }\n\n  public apply(provider: HocuspocusProvider, emitSynced: boolean) {\n    const { message } = this\n    const type = message.readVarUint()\n\n    const emptyMessageLength = message.length()\n\n    switch (type) {\n      case MessageType.Sync:\n        this.applySyncMessage(provider, emitSynced)\n        break\n\n      case MessageType.Awareness:\n        this.applyAwarenessMessage(provider)\n        break\n\n      case MessageType.Auth:\n        this.applyAuthMessage(provider)\n        break\n\n      case MessageType.QueryAwareness:\n        this.applyQueryAwarenessMessage(provider)\n        break\n\n      case MessageType.Stateless:\n        provider.receiveStateless(readVarString(message.decoder))\n        break\n\n      case MessageType.SyncStatus:\n        this.applySyncStatusMessage(provider, readVarInt(message.decoder) === 1)\n        break\n      default:\n        throw new Error(`Can’t apply message of unknown type: ${type}`)\n    }\n\n    // Reply\n    if (message.length() > emptyMessageLength + 1) { // length of documentName (considered in emptyMessageLength plus length of yjs sync type, set in applySyncMessage)\n      if (this.broadcasted) {\n        // TODO: Some weird TypeScript error\n        // @ts-ignore\n        provider.broadcast(OutgoingMessage, { encoder: message.encoder })\n      } else {\n        // TODO: Some weird TypeScript error\n        // @ts-ignore\n        provider.send(OutgoingMessage, { encoder: message.encoder })\n      }\n    }\n  }\n\n  private applySyncMessage(provider: HocuspocusProvider, emitSynced: boolean) {\n    const { message } = this\n\n    message.writeVarUint(MessageType.Sync)\n\n    // Apply update\n    const syncMessageType = readSyncMessage(\n      message.decoder,\n      message.encoder,\n      provider.document,\n      provider,\n    )\n\n    // Synced once we receive Step2\n    if (emitSynced && syncMessageType === messageYjsSyncStep2) {\n      provider.synced = true\n    }\n  }\n\n  applySyncStatusMessage(provider: HocuspocusProvider, applied: boolean) {\n    if (applied) {\n      provider.decrementUnsyncedChanges()\n    }\n  }\n\n  private applyAwarenessMessage(provider: HocuspocusProvider) {\n    const { message } = this\n\n    awarenessProtocol.applyAwarenessUpdate(\n      provider.awareness,\n      message.readVarUint8Array(),\n      provider,\n    )\n  }\n\n  private applyAuthMessage(provider: HocuspocusProvider) {\n    const { message } = this\n\n    readAuthMessage(\n      message.decoder,\n      provider.permissionDeniedHandler.bind(provider),\n      provider.authenticatedHandler.bind(provider),\n    )\n  }\n\n  private applyQueryAwarenessMessage(provider: HocuspocusProvider) {\n    const { message } = this\n\n    message.writeVarUint(MessageType.Awareness)\n    message.writeVarUint8Array(\n      awarenessProtocol.encodeAwarenessUpdate(\n        provider.awareness,\n        Array.from(provider.awareness.getStates().keys()),\n      ),\n    )\n  }\n}\n","import { Encoder, toUint8Array } from 'lib0/encoding'\nimport * as bc from 'lib0/broadcastchannel'\nimport { ConstructableOutgoingMessage } from './types.js'\n\nexport class MessageSender {\n\n  encoder: Encoder\n\n  message: any\n\n  constructor(Message: ConstructableOutgoingMessage, args: any = {}) {\n    this.message = new Message()\n    this.encoder = this.message.get(args)\n  }\n\n  create() {\n    return toUint8Array(this.encoder)\n  }\n\n  send(webSocket: any) {\n    webSocket?.send(this.create())\n  }\n\n  broadcast(channel: string) {\n    bc.publish(channel, this.create())\n  }\n}\n","import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { writeAuthentication } from '@hocuspocus/common'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class AuthenticationMessage extends OutgoingMessage {\n  type = MessageType.Auth\n\n  description = 'Authentication'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.token === 'undefined') {\n      throw new Error('The authentication message requires `token` as an argument.')\n    }\n\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n    writeAuthentication(this.encoder, args.token)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport { encodeAwarenessUpdate } from 'y-protocols/awareness'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class AwarenessMessage extends OutgoingMessage {\n  type = MessageType.Awareness\n\n  description = 'Awareness states update'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.awareness === 'undefined') {\n      throw new Error('The awareness message requires awareness as an argument')\n    }\n\n    if (typeof args.clients === 'undefined') {\n      throw new Error('The awareness message requires clients as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    let awarenessUpdate\n    if (args.states === undefined) {\n      awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients)\n    } else {\n      awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients, args.states)\n    }\n\n    encoding.writeVarUint8Array(this.encoder, awarenessUpdate)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class CloseMessage extends OutgoingMessage {\n  type = MessageType.CLOSE\n\n  description = 'Ask the server to close the connection'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class QueryAwarenessMessage extends OutgoingMessage {\n  type = MessageType.QueryAwareness\n\n  description = 'Queries awareness states'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n\n    console.log('queryAwareness: writing string docName', args.documentName)\n    console.log(this.encoder.cpos)\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    return this.encoder\n  }\n}\n","import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class StatelessMessage extends OutgoingMessage {\n  type = MessageType.Stateless\n\n  description = 'A stateless message'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n    writeVarString(this.encoder, args.payload ?? '')\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class SyncStepOneMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'First sync step'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.document === 'undefined') {\n      throw new Error('The sync step one message requires document as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n    syncProtocol.writeSyncStep1(this.encoder, args.document)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class SyncStepTwoMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'Second sync step'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.document === 'undefined') {\n      throw new Error('The sync step two message requires document as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n    syncProtocol.writeSyncStep2(this.encoder, args.document)\n\n    return this.encoder\n  }\n}\n","import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { writeUpdate } from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class UpdateMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'A document update'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n\n    writeUpdate(this.encoder, args.update)\n\n    return this.encoder\n  }\n}\n","import { awarenessStatesToArray } from '@hocuspocus/common'\nimport * as bc from 'lib0/broadcastchannel'\nimport * as mutex from 'lib0/mutex'\nimport type { CloseEvent, Event, MessageEvent } from 'ws'\nimport { Awareness, removeAwarenessStates } from 'y-protocols/awareness'\nimport * as Y from 'yjs'\nimport EventEmitter from './EventEmitter.js'\nimport {\n  CompleteHocuspocusProviderWebsocketConfiguration,\n  HocuspocusProviderWebsocket,\n} from './HocuspocusProviderWebsocket.js'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { MessageReceiver } from './MessageReceiver.js'\nimport { MessageSender } from './MessageSender.js'\nimport { AuthenticationMessage } from './OutgoingMessages/AuthenticationMessage.js'\nimport { AwarenessMessage } from './OutgoingMessages/AwarenessMessage.js'\nimport { CloseMessage } from './OutgoingMessages/CloseMessage.js'\nimport { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js'\nimport { StatelessMessage } from './OutgoingMessages/StatelessMessage.js'\nimport { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js'\nimport { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js'\nimport { UpdateMessage } from './OutgoingMessages/UpdateMessage.js'\nimport {\n  ConstructableOutgoingMessage,\n  WebSocketStatus,\n  onAuthenticationFailedParameters,\n  onAwarenessChangeParameters,\n  onAwarenessUpdateParameters,\n  onCloseParameters,\n  onDisconnectParameters,\n  onMessageParameters,\n  onOpenParameters,\n  onOutgoingMessageParameters, onStatelessParameters,\n  onStatusParameters,\n  onSyncedParameters,\n} from './types.js'\n\nexport type HocuspocusProviderConfiguration =\n  Required<Pick<CompleteHocuspocusProviderConfiguration, 'name'>>\n    & Partial<CompleteHocuspocusProviderConfiguration> & (\n  Required<Pick<CompleteHocuspocusProviderWebsocketConfiguration, 'url'>> |\n  Required<Pick<CompleteHocuspocusProviderConfiguration, 'websocketProvider'>>\n  )\n\nexport interface CompleteHocuspocusProviderConfiguration {\n   /**\n    * The identifier/name of your document\n    */\n   name: string,\n  /**\n   * The actual Y.js document\n   */\n  document: Y.Doc,\n\n  /**\n   * Pass false to disable broadcasting between browser tabs.\n   */\n  broadcast: boolean,\n  /**\n   * An Awareness instance to keep the presence state of all clients.\n   */\n  awareness: Awareness,\n  /**\n   * A token that’s sent to the backend for authentication purposes.\n   */\n  token: string | (() => string) | (() => Promise<string>) | null,\n  /**\n   * URL parameters that should be added.\n   */\n  parameters: { [key: string]: any },\n  /**\n   * Hocuspocus websocket provider\n   */\n  websocketProvider: HocuspocusProviderWebsocket,\n  /**\n   * Force syncing the document in the defined interval.\n   */\n  forceSyncInterval: false | number,\n\n  onAuthenticated: () => void,\n  onAuthenticationFailed: (data: onAuthenticationFailedParameters) => void,\n  onOpen: (data: onOpenParameters) => void,\n  onConnect: () => void,\n  onMessage: (data: onMessageParameters) => void,\n  onOutgoingMessage: (data: onOutgoingMessageParameters) => void,\n  onStatus: (data: onStatusParameters) => void,\n  onSynced: (data: onSyncedParameters) => void,\n  onDisconnect: (data: onDisconnectParameters) => void,\n  onClose: (data: onCloseParameters) => void,\n  onDestroy: () => void,\n  onAwarenessUpdate: (data: onAwarenessUpdateParameters) => void,\n  onAwarenessChange: (data: onAwarenessChangeParameters) => void,\n  onStateless: (data: onStatelessParameters) => void\n\n  /**\n   * Don’t output any warnings.\n   */\n  quiet: boolean,\n}\n\nexport class HocuspocusProvider extends EventEmitter {\n  public configuration: CompleteHocuspocusProviderConfiguration = {\n    name: '',\n    // @ts-ignore\n    document: undefined,\n    // @ts-ignore\n    awareness: undefined,\n    token: null,\n    parameters: {},\n    broadcast: true,\n    forceSyncInterval: false,\n    onAuthenticated: () => null,\n    onAuthenticationFailed: () => null,\n    onOpen: () => null,\n    onConnect: () => null,\n    onMessage: () => null,\n    onOutgoingMessage: () => null,\n    onStatus: () => null,\n    onSynced: () => null,\n    onDisconnect: () => null,\n    onClose: () => null,\n    onDestroy: () => null,\n    onAwarenessUpdate: () => null,\n    onAwarenessChange: () => null,\n    onStateless: () => null,\n    quiet: false,\n  }\n\n  subscribedToBroadcastChannel = false\n\n  isSynced = false\n\n  unsyncedChanges = 0\n\n  status = WebSocketStatus.Disconnected\n\n  isAuthenticated = false\n\n  authorizedScope: string | undefined = undefined\n\n  mux = mutex.createMutex()\n\n  intervals: any = {\n    forceSync: null,\n  }\n\n  isConnected = true\n\n  constructor(configuration: HocuspocusProviderConfiguration) {\n    super()\n    this.setConfiguration(configuration)\n\n    this.configuration.document = configuration.document ? configuration.document : new Y.Doc()\n    this.configuration.awareness = configuration.awareness ? configuration.awareness : new Awareness(this.document)\n\n    this.on('open', this.configuration.onOpen)\n    this.on('message', this.configuration.onMessage)\n    this.on('outgoingMessage', this.configuration.onOutgoingMessage)\n    this.on('synced', this.configuration.onSynced)\n    this.on('destroy', this.configuration.onDestroy)\n    this.on('awarenessUpdate', this.configuration.onAwarenessUpdate)\n    this.on('awarenessChange', this.configuration.onAwarenessChange)\n    this.on('stateless', this.configuration.onStateless)\n\n    this.on('authenticated', this.configuration.onAuthenticated)\n    this.on('authenticationFailed', this.configuration.onAuthenticationFailed)\n\n    this.configuration.websocketProvider.on('connect', this.configuration.onConnect)\n    this.configuration.websocketProvider.on('connect', (e: Event) => this.emit('connect', e))\n\n    this.configuration.websocketProvider.on('open', this.onOpen.bind(this))\n    this.configuration.websocketProvider.on('open', (e: Event) => this.emit('open', e))\n\n    this.configuration.websocketProvider.on('message', this.onMessage.bind(this))\n\n    this.configuration.websocketProvider.on('close', this.onClose.bind(this))\n    this.configuration.websocketProvider.on('close', this.configuration.onClose)\n    this.configuration.websocketProvider.on('close', (e: Event) => this.emit('close', e))\n\n    this.configuration.websocketProvider.on('status', this.onStatus.bind(this))\n\n    this.configuration.websocketProvider.on('disconnect', this.configuration.onDisconnect)\n    this.configuration.websocketProvider.on('disconnect', (e: Event) => this.emit('disconnect', e))\n\n    this.configuration.websocketProvider.on('destroy', this.configuration.onDestroy)\n    this.configuration.websocketProvider.on('destroy', (e: Event) => this.emit('destroy', e))\n\n    this.awareness.on('update', () => {\n      this.emit('awarenessUpdate', { states: awarenessStatesToArray(this.awareness.getStates()) })\n    })\n\n    this.awareness.on('change', () => {\n      this.emit('awarenessChange', { states: awarenessStatesToArray(this.awareness.getStates()) })\n    })\n\n    this.document.on('update', this.documentUpdateHandler.bind(this))\n    this.awareness.on('update', this.awarenessUpdateHandler.bind(this))\n    this.registerEventListeners()\n\n    if (this.configuration.forceSyncInterval) {\n      this.intervals.forceSync = setInterval(\n        this.forceSync.bind(this),\n        this.configuration.forceSyncInterval,\n      )\n    }\n\n    this.configuration.websocketProvider.attach(this)\n  }\n\n  public onStatus({ status } : onStatusParameters) {\n    this.status = status\n\n    this.configuration.onStatus({ status })\n    this.emit('status', { status })\n  }\n\n  public setConfiguration(configuration: Partial<HocuspocusProviderConfiguration> = {}): void {\n    if (!configuration.websocketProvider && (configuration as CompleteHocuspocusProviderWebsocketConfiguration).url) {\n      const websocketProviderConfig = configuration as CompleteHocuspocusProviderWebsocketConfiguration\n\n      this.configuration.websocketProvider = new HocuspocusProviderWebsocket({\n        url: websocketProviderConfig.url,\n        parameters: websocketProviderConfig.parameters,\n      })\n    }\n\n    this.configuration = { ...this.configuration, ...configuration }\n  }\n\n  get document() {\n    return this.configuration.document\n  }\n\n  get awareness() {\n    return this.configuration.awareness\n  }\n\n  get hasUnsyncedChanges(): boolean {\n    return this.unsyncedChanges > 0\n  }\n\n  incrementUnsyncedChanges() {\n    this.unsyncedChanges += 1\n    this.emit('unsyncedChanges', this.unsyncedChanges)\n  }\n\n  decrementUnsyncedChanges() {\n    this.unsyncedChanges -= 1\n    if (this.unsyncedChanges === 0) {\n      this.synced = true\n    }\n    this.emit('unsyncedChanges', this.unsyncedChanges)\n  }\n\n  forceSync() {\n    this.send(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name })\n  }\n\n  boundBeforeUnload = this.beforeUnload.bind(this)\n\n  beforeUnload() {\n    removeAwarenessStates(this.awareness, [this.document.clientID], 'window unload')\n  }\n\n  registerEventListeners() {\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.addEventListener('beforeunload', this.boundBeforeUnload)\n  }\n\n  sendStateless(payload: string) {\n    this.send(StatelessMessage, { documentName: this.configuration.name, payload })\n  }\n\n  documentUpdateHandler(update: Uint8Array, origin: any) {\n    if (origin === this) {\n      return\n    }\n\n    this.incrementUnsyncedChanges()\n    this.send(UpdateMessage, { update, documentName: this.configuration.name }, true)\n  }\n\n  awarenessUpdateHandler({ added, updated, removed }: any, origin: any) {\n    const changedClients = added.concat(updated).concat(removed)\n\n    this.send(AwarenessMessage, {\n      awareness: this.awareness,\n      clients: changedClients,\n      documentName: this.configuration.name,\n    }, true)\n  }\n\n  get synced(): boolean {\n    return this.isSynced\n  }\n\n  set synced(state) {\n    if (this.isSynced === state) {\n      return\n    }\n\n    this.isSynced = state\n    this.emit('synced', { state })\n    this.emit('sync', { state })\n  }\n\n  receiveStateless(payload: string) {\n    this.emit('stateless', { payload })\n  }\n\n  get isAuthenticationRequired(): boolean {\n    return !!this.configuration.token && !this.isAuthenticated\n  }\n\n  // not needed, but provides backward compatibility with e.g. lexicla/yjs\n  async connect() {\n    return this.configuration.websocketProvider.connect()\n  }\n\n  disconnect() {\n    this.disconnectBroadcastChannel()\n    this.configuration.websocketProvider.detach(this)\n  }\n\n  async onOpen(event: Event) {\n    this.isAuthenticated = false\n\n    this.emit('open', { event })\n\n    if (this.isAuthenticationRequired) {\n      this.send(AuthenticationMessage, {\n        token: await this.getToken(),\n        documentName: this.configuration.name,\n      })\n    }\n\n    this.startSync()\n  }\n\n  async getToken() {\n    if (typeof this.configuration.token === 'function') {\n      const token = await this.configuration.token()\n      return token\n    }\n\n    return this.configuration.token\n  }\n\n  startSync() {\n    this.incrementUnsyncedChanges()\n    this.send(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name })\n\n    if (this.awareness.getLocalState() !== null) {\n      this.send(AwarenessMessage, {\n        awareness: this.awareness,\n        clients: [this.document.clientID],\n        documentName: this.configuration.name,\n      })\n    }\n  }\n\n  send(message: ConstructableOutgoingMessage, args: any, broadcast = false) {\n    if (!this.isConnected) {\n      return\n    }\n\n    if (broadcast) {\n      this.mux(() => { this.broadcast(message, args) })\n    }\n\n    const messageSender = new MessageSender(message, args)\n\n    this.emit('outgoingMessage', { message: messageSender.message })\n    messageSender.send(this.configuration.websocketProvider)\n  }\n\n  onMessage(event: MessageEvent) {\n    const message = new IncomingMessage(event.data)\n\n    const documentName = message.readVarString()\n\n    if (documentName !== this.configuration.name) {\n      return // message is meant for another provider\n    }\n\n    message.writeVarString(documentName)\n\n    this.emit('message', { event, message: new IncomingMessage(event.data) })\n\n    new MessageReceiver(message).apply(this, true)\n  }\n\n  onClose(event: CloseEvent) {\n    this.isAuthenticated = false\n    this.synced = false\n\n    // update awareness (all users except local left)\n    removeAwarenessStates(\n      this.awareness,\n      Array.from(this.awareness.getStates().keys()).filter(client => client !== this.document.clientID),\n      this,\n    )\n  }\n\n  destroy() {\n    this.emit('destroy')\n\n    if (this.intervals.forceSync) {\n      clearInterval(this.intervals.forceSync)\n    }\n\n    removeAwarenessStates(this.awareness, [this.document.clientID], 'provider destroy')\n\n    this.disconnect()\n\n    this.awareness.off('update', this.awarenessUpdateHandler)\n    this.document.off('update', this.documentUpdateHandler)\n\n    this.removeAllListeners()\n\n    this.send(CloseMessage, { documentName: this.configuration.name })\n    this.isConnected = false\n\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.removeEventListener('beforeunload', this.boundBeforeUnload)\n  }\n\n  permissionDeniedHandler(reason: string) {\n    this.emit('authenticationFailed', { reason })\n    this.isAuthenticated = false\n    this.disconnect()\n    this.status = WebSocketStatus.Disconnected\n  }\n\n  authenticatedHandler(scope: string) {\n    this.isAuthenticated = true\n    this.authorizedScope = scope\n\n    this.emit('authenticated')\n    this.startSync()\n  }\n\n  get broadcastChannel() {\n    return `${this.configuration.name}`\n  }\n\n  boundBroadcastChannelSubscriber = this.broadcastChannelSubscriber.bind(this)\n\n  broadcastChannelSubscriber(data: ArrayBuffer) {\n    this.mux(() => {\n      const message = new IncomingMessage(data)\n\n      const documentName = message.readVarString()\n\n      message.writeVarString(documentName)\n\n      new MessageReceiver(message)\n        .setBroadcasted(true)\n        .apply(this, false)\n    })\n  }\n\n  subscribeToBroadcastChannel() {\n    if (!this.subscribedToBroadcastChannel) {\n      bc.subscribe(this.broadcastChannel, this.boundBroadcastChannelSubscriber)\n      this.subscribedToBroadcastChannel = true\n    }\n\n    this.mux(() => {\n      this.broadcast(SyncStepOneMessage, { document: this.document })\n      this.broadcast(SyncStepTwoMessage, { document: this.document })\n      this.broadcast(QueryAwarenessMessage, { document: this.document })\n      this.broadcast(AwarenessMessage, { awareness: this.awareness, clients: [this.document.clientID], document: this.document })\n    })\n  }\n\n  disconnectBroadcastChannel() {\n    // broadcast message with local awareness state set to null (indicating disconnect)\n    this.send(AwarenessMessage, {\n      awareness: this.awareness,\n      clients: [this.document.clientID],\n      states: new Map(),\n      documentName: this.configuration.name,\n    }, true)\n\n    if (this.subscribedToBroadcastChannel) {\n      bc.unsubscribe(this.broadcastChannel, this.boundBroadcastChannelSubscriber)\n      this.subscribedToBroadcastChannel = false\n    }\n  }\n\n  broadcast(Message: ConstructableOutgoingMessage, args?: any) {\n    if (!this.configuration.broadcast) {\n      return\n    }\n\n    if (!this.subscribedToBroadcastChannel) {\n      return\n    }\n\n    new MessageSender(Message, args).broadcast(this.broadcastChannel)\n  }\n\n  setAwarenessField(key: string, value: any) {\n    this.awareness.setLocalStateField(key, value)\n  }\n}\n","import {\n  CompleteHocuspocusProviderWebsocketConfiguration,\n  HocuspocusProviderWebsocket, HocuspocusProviderWebsocketConfiguration,\n} from './HocuspocusProviderWebsocket.js'\n\nexport type TiptapCollabProviderWebsocketConfiguration =\n  Partial<CompleteHocuspocusProviderWebsocketConfiguration> &\n  AdditionalTiptapCollabProviderWebsocketConfiguration\n\nexport interface AdditionalTiptapCollabProviderWebsocketConfiguration {\n  /**\n   * A Hocuspocus Cloud App ID, get one here: https://collab.tiptap.dev\n   */\n  appId: string,\n}\n\nexport class TiptapCollabProviderWebsocket extends HocuspocusProviderWebsocket {\n  constructor(configuration: TiptapCollabProviderWebsocketConfiguration) {\n    super({ ...configuration as HocuspocusProviderWebsocketConfiguration, url: `wss://${configuration.appId}.collab.tiptap.cloud` })\n  }\n}\n","import {\n  HocuspocusProvider,\n  HocuspocusProviderConfiguration,\n} from './HocuspocusProvider.js'\n\nimport { TiptapCollabProviderWebsocket } from './TiptapCollabProviderWebsocket.js'\n\nexport type TiptapCollabProviderConfiguration =\n  Required<Pick<HocuspocusProviderConfiguration, 'name'>> &\n  Partial<HocuspocusProviderConfiguration> &\n  AdditionalTiptapCollabProviderConfiguration\n\nexport interface AdditionalTiptapCollabProviderConfiguration {\n  /**\n   * A Hocuspocus Cloud App ID, get one here: https://collab.tiptap.dev\n   */\n  appId: string,\n}\n\nexport class TiptapCollabProvider extends HocuspocusProvider {\n  constructor(configuration: TiptapCollabProviderConfiguration) {\n    if (!configuration.websocketProvider) {\n      configuration.websocketProvider = new TiptapCollabProviderWebsocket({ appId: configuration.appId })\n    }\n\n    if (!configuration.token) {\n      configuration.token = 'notoken' // need to send a token anyway (which will be ignored)\n    }\n\n    super(configuration as HocuspocusProviderConfiguration)\n  }\n}\n"],"names":["create","length","object.length","object.hasProperty","map.create","string.fromCamelCase","conditions.undefinedToNull","storage.varStorage","f.isOneOf","buffer.createUint8ArrayViewFromArrayBuffer","binary.BITS7","binary.BIT8","math.floor","string.utf8TextEncoder","string.encodeUtf8","math.min","math.max","error.create","number.MAX_SAFE_INTEGER","binary.BITS6","binary.BIT7","string.utf8TextDecoder","string.fromCharCode","env.isBrowser","buffer.fromBase64","storage.onChange","buffer.toBase64","buffer.createUint8ArrayFromArrayBuffer","storage.offChange","map.setIfUndefined","set.create","array.from","time.getUnixTime","f.equalityDeep","encoding.createEncoder","encoding.writeVarUint","encoding.writeVarString","encoding.toUint8Array","decoding.createDecoder","decoding.readVarUint","decoding.readVarString","object.map","MessageType","WebSocketStatus","mutex.createMutex","retry","url.encodeQueryParams","WsReadyStates","Unauthorized","Forbidden","MessageTooBig","Y","encoding.writeVarUint8Array","decoding.readVarUint8Array","awarenessProtocol.applyAwarenessUpdate","readAuthMessage","awarenessProtocol.encodeAwarenessUpdate","bc.publish","writeAuthentication","syncProtocol.writeSyncStep1","syncProtocol.writeSyncStep2","awarenessStatesToArray","bc.subscribe","bc.unsubscribe"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,QAAM,GAAG,MAAM,IAAI,GAAG,GAAE;AAerC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,cAAc,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,KAAK;AACrD,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAC;AACxB,EAAE,IAAI,GAAG,KAAK,SAAS,EAAE;AACzB,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,OAAO,EAAE,EAAC;AACjC,GAAG;AACH,EAAE,OAAO,GAAG;AACZ;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,QAAM,GAAG,MAAM,IAAI,GAAG;;ACNnC;AACA;AACA;AACA;AACA;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,IAAI,GAAG,KAAK,CAAC;;ACjD1B;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,YAAY,GAAG,MAAM,CAAC,aAAY;AAQ/C;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC,WAAW,GAAE;AACxC;AACA,MAAM,aAAa,GAAG,QAAO;AAC7B;AACA;AACA;AACA;AACA;AACO,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,EAAC;AACzD;AACA,MAAM,kBAAkB,GAAG,WAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,GAAG,CAAC,CAAC,EAAE,SAAS,KAAK,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,kBAAkB,EAAE,KAAK,IAAI,CAAC,EAAE,SAAS,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC;AAQpI;AACA;AACA;AACA;AACA;AACO,MAAM,mBAAmB,GAAG,GAAG,IAAI;AAC1C,EAAE,MAAM,aAAa,GAAG,QAAQ,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAC;AACzD,EAAE,MAAM,GAAG,GAAG,aAAa,CAAC,OAAM;AAClC,EAAE,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,EAAC;AACjC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAChC,IAAI,GAAG,CAAC,CAAC,CAAC,0BAA0B,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,EAAC;AACjE,GAAG;AACH,EAAE,OAAO,GAAG;AACZ,EAAC;AACD;AACA;AACO,MAAM,eAAe,+BAA+B,OAAO,WAAW,KAAK,WAAW,GAAG,IAAI,WAAW,EAAE,GAAG,IAAI,EAAC;AACzH;AACA;AACA;AACA;AACA;AACO,MAAM,iBAAiB,GAAG,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,GAAG,EAAC;AACnE;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,UAAU,GAAG,eAAe,GAAG,iBAAiB,GAAG,oBAAmB;AAoBnF;AACA;AACO,IAAI,eAAe,GAAG,OAAO,WAAW,KAAK,WAAW,GAAG,IAAI,GAAG,IAAI,WAAW,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,EAAC;AACnI;AACA;AACA,IAAI,eAAe,IAAI,eAAe,CAAC,MAAM,CAAC,IAAI,UAAU,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,eAAe,GAAG,KAAI;AACxB;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,eAAe,GAAG,CAAC,IAAI,CAAC,KAAK,SAAS,GAAG,IAAI,GAAG;;ACZ7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAkB,CAAC;AACzB,EAAE,WAAW,CAAC,GAAG;AACjB,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,GAAE;AACxB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE;AAC1B,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,EAAC;AAC/B,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE;AAChB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AAC5B,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,GAAG,IAAI,kBAAkB,GAAE;AAC5C,IAAI,WAAW,GAAG,KAAI;AACtB;AACA;AACA,IAAI;AACJ;AACA,EAAE,IAAI,OAAO,YAAY,KAAK,WAAW,EAAE;AAC3C,IAAI,aAAa,GAAG,aAAY;AAChC,IAAI,WAAW,GAAG,MAAK;AACvB,GAAG;AACH,CAAC,CAAC,OAAO,CAAC,EAAE,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,UAAU,GAAG,cAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,QAAQ,GAAG,YAAY,IAAI,WAAW,IAAI,gBAAgB,CAAC,SAAS,sBAAsB,YAAY,GAAE;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,SAAS,GAAG,YAAY,IAAI,WAAW,IAAI,mBAAmB,CAAC,SAAS,sBAAsB,YAAY;;ACvEvH;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACO,MAAM,IAAI,GAAG,MAAM,CAAC,KAAI;AAY/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,KAAK;AAC/B,EAAE,MAAM,OAAO,GAAG,GAAE;AACpB,EAAE,KAAK,MAAM,GAAG,IAAI,GAAG,EAAE;AACzB,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAC;AAClC,GAAG;AACH,EAAE,OAAO,OAAO;AAChB,EAAC;AACD;AACA;AACA;AACA;AACA;AACO,MAAMC,QAAM,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,OAAM;AAuC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG;;ACnGtF;AACA;AACA;AACA;AACA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,EAAC;AAU/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;AACtC,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AAC9B,IAAI,OAAO,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC;AAC/B,GAAG;AACH,EAAE,IAAI,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,EAAE;AACvC,IAAI,OAAO,KAAK;AAChB,GAAG;AACH,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;AACf,IAAI,OAAO,IAAI;AACf,GAAG;AACH,EAAE,QAAQ,CAAC,CAAC,WAAW;AACvB,IAAI,KAAK,WAAW;AACpB,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,EAAC;AAC3B,MAAM,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,EAAC;AAC3B;AACA,IAAI,KAAK,UAAU,EAAE;AACrB,MAAM,IAAI,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,UAAU,EAAE;AACzC,QAAQ,OAAO,KAAK;AACpB,OAAO;AACP,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AAC3B,UAAU,OAAO,KAAK;AACtB,SAAS;AACT,OAAO;AACP,MAAM,KAAK;AACX,KAAK;AACL,IAAI,KAAK,GAAG,EAAE;AACd,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE;AAC7B,QAAQ,OAAO,KAAK;AACpB,OAAO;AACP,MAAM,KAAK,MAAM,KAAK,IAAI,CAAC,EAAE;AAC7B,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AAC3B,UAAU,OAAO,KAAK;AACtB,SAAS;AACT,OAAO;AACP,MAAM,KAAK;AACX,KAAK;AACL,IAAI,KAAK,GAAG,EAAE;AACd,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE;AAC7B,QAAQ,OAAO,KAAK;AACpB,OAAO;AACP,MAAM,KAAK,MAAM,GAAG,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;AAClC,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;AAClE,UAAU,OAAO,KAAK;AACtB,SAAS;AACT,OAAO;AACP,MAAM,KAAK;AACX,KAAK;AACL,IAAI,KAAK,MAAM;AACf,MAAM,IAAIC,QAAa,CAAC,CAAC,CAAC,KAAKA,QAAa,CAAC,CAAC,CAAC,EAAE;AACjD,QAAQ,OAAO,KAAK;AACpB,OAAO;AACP,MAAM,KAAK,MAAM,GAAG,IAAI,CAAC,EAAE;AAC3B,QAAQ,IAAI,CAACC,WAAkB,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;AAC1E,UAAU,OAAO,KAAK;AACtB,SAAS;AACT,OAAO;AACP,MAAM,KAAK;AACX,IAAI,KAAK,KAAK;AACd,MAAM,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE;AACjC,QAAQ,OAAO,KAAK;AACpB,OAAO;AACP,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,QAAQ,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACvC,UAAU,OAAO,KAAK;AACtB,SAAS;AACT,OAAO;AACP,MAAM,KAAK;AACX,IAAI;AACJ,MAAM,OAAO,KAAK;AAClB,GAAG;AACH,EAAE,OAAO,IAAI;AACb,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,OAAO,GAAG,CAAC,KAAK,EAAE,OAAO,KAAK,OAAO,CAAC,QAAQ,CAAC,KAAK;;ACvJjE;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACO,MAAM,MAAM,GAAG,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,CAAC,OAAO;AACvE,EAAE,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAC;AAC1C;AACO,MAAM,SAAS,GAAG,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,QAAQ,KAAK,WAAW,IAAI,CAAC,OAAM;AACpG;AACqB,OAAO,SAAS,KAAK,WAAW;AACrD,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;AAClC,IAAI,MAAK;AACT;AACA;AACA;AACA;AACA,IAAI,OAAM;AAEV;AACA;AACA,MAAM,aAAa,GAAG,MAAM;AAC5B,EAAE,IAAI,MAAM,KAAK,SAAS,EAAE;AAC5B,IAAI,IAAI,MAAM,EAAE;AAChB,MAAM,MAAM,GAAGC,QAAU,GAAE;AAC3B,MAAM,MAAM,KAAK,GAAG,OAAO,CAAC,KAAI;AAChC,MAAM,IAAI,aAAa,GAAG,KAAI;AAC9B,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,EAAC;AAC7B,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC7B,UAAU,IAAI,aAAa,KAAK,IAAI,EAAE;AACtC,YAAY,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,EAAC;AACzC,WAAW;AACX,UAAU,aAAa,GAAG,KAAI;AAC9B,SAAS,MAAM;AACf,UAAU,IAAI,aAAa,KAAK,IAAI,EAAE;AACtC,YAAY,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,EAAC;AAC3C,YAAY,aAAa,GAAG,KAAI;AAChC,WAEW;AACX,SAAS;AACT,OAAO;AACP,MAAM,IAAI,aAAa,KAAK,IAAI,EAAE;AAClC,QAAQ,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,EAAE,EAAC;AACrC,OAAO;AACP;AACA,KAAK,MAAM,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;AAC7C,MAAM,MAAM,GAAGA,QAAU,EAAE,CAAC;AAC5B,MAAM,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK;AACnE,QAAQ,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;AAC7B,UAAU,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,EAAC;AAC5C,UAAU,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EAAEC,aAAoB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAC;AAClE,UAAU,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAEA,aAAoB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAC;AACjE,SAAS;AACT,OAAO,EAAC;AACR,KAAK,MAAM;AACX,MAAM,MAAM,GAAGD,QAAU,GAAE;AAC3B,KAAK;AACL,GAAG;AACH,EAAE,OAAO,MAAM;AACf,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,QAAQ,GAAG,CAAC,IAAI,KAAK,aAAa,EAAE,CAAC,GAAG,CAAC,IAAI,EAAC;AAU3D;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,GAAG,CAAC,IAAI;AAChC,EAAE,MAAM;AACR,MAAME,eAA0B,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;AACjE,MAAMA,eAA0B,CAACC,UAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC;AASlE;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,OAAO,GAAG,CAAC,IAAI;AAC5B,EAAE,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,KAAK,KAAI;AACrD;AACA;AAC0B,OAAO,CAAC,YAAY,EAAC;AAC/C;AACA;AACA,MAAM,UAAU,GAAG,MAAM;AACzB,EAAEC,OAAS,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,EAAC;AACxD;AACA;AAC6B,CAAC,QAAQ,CAAC,WAAW,CAAC;AACnD,GAAG,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,UAAU,CAAC;AACjD,EAAE,CAAC,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,UAAU;AAC5C,IAAI,WAAW,CAAC,WAAW,CAAC,KAAK,IAAI;AACrC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,QAAQ,CAAC,OAAO,CAAC;AACjD,EAAC;AACD;;ACjIA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,KAAK,GAAG,IAAI,CAAC,MAAK;AAiB/B;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;;ACtCzC;AAmBO,MAAM,IAAI,GAAG,GAAE;AACf,MAAM,IAAI,GAAG,IAAG;AAqChB,MAAM,KAAK,GAAG,GAAE;AAChB,MAAM,KAAK,GAAG;;AC1DrB;AACA;AACA;AACA;AACA;AAIA;AACO,MAAM,gBAAgB,GAAG,MAAM,CAAC;;ACTvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACO,MAAM,OAAO,CAAC;AACrB,EAAE,WAAW,CAAC,GAAG;AACjB,IAAI,IAAI,CAAC,IAAI,GAAG,EAAC;AACjB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,GAAG,EAAC;AACnC;AACA;AACA;AACA,IAAI,IAAI,CAAC,IAAI,GAAG,GAAE;AAClB,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,GAAG,MAAM,IAAI,OAAO,GAAE;AAUhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,MAAM,GAAG,OAAO,IAAI;AACjC,EAAE,IAAI,GAAG,GAAG,OAAO,CAAC,KAAI;AACxB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,IAAI,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAM;AACjC,GAAG;AACH,EAAE,OAAO,GAAG;AACZ,EAAC;AAUD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,YAAY,GAAG,OAAO,IAAI;AACvC,EAAE,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,EAAC;AAClD,EAAE,IAAI,MAAM,GAAG,EAAC;AAChB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAChD,IAAI,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,EAAC;AAC7B,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAC;AAC3B,IAAI,MAAM,IAAI,CAAC,CAAC,OAAM;AACtB,GAAG;AACH,EAAE,QAAQ,CAAC,GAAG,CAACC,mCAA0C,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,MAAM,EAAC;AACxG,EAAE,OAAO,QAAQ;AACjB,EAAC;AAiBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,KAAK,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;AACvC,EAAE,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,OAAM;AACvC,EAAE,IAAI,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;AAClC,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAC;AACnC,IAAI,OAAO,CAAC,IAAI,GAAG,IAAI,UAAU,CAAC,SAAS,GAAG,CAAC,EAAC;AAChD,IAAI,OAAO,CAAC,IAAI,GAAG,EAAC;AACpB,GAAG;AACH,EAAE,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,IAAG;AACpC,EAAC;AAkHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,YAAY,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;AAC9C,EAAE,OAAO,GAAG,GAAGC,KAAY,EAAE;AAC7B,IAAI,KAAK,CAAC,OAAO,EAAEC,IAAW,IAAID,KAAY,GAAG,GAAG,CAAC,EAAC;AACtD,IAAI,GAAG,GAAGE,KAAU,CAAC,GAAG,GAAG,GAAG,EAAC;AAC/B,GAAG;AACH,EAAE,KAAK,CAAC,OAAO,EAAEF,KAAY,GAAG,GAAG,EAAC;AACpC,EAAC;AA0BD;AACA;AACA;AACA;AACA,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,KAAK,EAAC;AACxC,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,GAAG,EAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,qBAAqB,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;AACvD,EAAE,IAAI,GAAG,CAAC,MAAM,GAAG,YAAY,EAAE;AACjC;AACA;AACA,IAAI,MAAM,OAAO,GAAGG,eAAsB,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,OAAO,IAAI,EAAC;AACnF,IAAI,YAAY,CAAC,OAAO,EAAE,OAAO,EAAC;AAClC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;AACtC,MAAM,KAAK,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC,CAAC,EAAC;AACnC,KAAK;AACL,GAAG,MAAM;AACT,IAAI,kBAAkB,CAAC,OAAO,EAAEC,UAAiB,CAAC,GAAG,CAAC,EAAC;AACvD,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,uBAAuB,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;AACzD,EAAE,MAAM,aAAa,GAAG,QAAQ,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAC;AACzD,EAAE,MAAM,GAAG,GAAG,aAAa,CAAC,OAAM;AAClC,EAAE,YAAY,CAAC,OAAO,EAAE,GAAG,EAAC;AAC5B,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAChC,IAAI,KAAK,CAAC,OAAO,yBAAyB,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC,GAAE;AACxE,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,cAAc,GAAG,CAACD,eAAsB,uBAAuB,CAACA,eAAsB,EAAE,UAAU,IAAI,qBAAqB,GAAG,wBAAuB;AAwDlK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,eAAe,GAAG,CAAC,OAAO,EAAE,UAAU,KAAK;AACxD,EAAE,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,OAAM;AACvC,EAAE,MAAM,IAAI,GAAG,OAAO,CAAC,KAAI;AAC3B,EAAE,MAAM,WAAW,GAAGE,GAAQ,CAAC,SAAS,GAAG,IAAI,EAAE,UAAU,CAAC,MAAM,EAAC;AACnE,EAAE,MAAM,YAAY,GAAG,UAAU,CAAC,MAAM,GAAG,YAAW;AACtD,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE,IAAI,EAAC;AAC7D,EAAE,OAAO,CAAC,IAAI,IAAI,YAAW;AAC7B,EAAE,IAAI,YAAY,GAAG,CAAC,EAAE;AACxB;AACA;AACA,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAC;AACnC;AACA,IAAI,OAAO,CAAC,IAAI,GAAG,IAAI,UAAU,CAACC,GAAQ,CAAC,SAAS,GAAG,CAAC,EAAE,YAAY,CAAC,EAAC;AACxE;AACA,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAC;AACtD,IAAI,OAAO,CAAC,IAAI,GAAG,aAAY;AAC/B,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,kBAAkB,GAAG,CAAC,OAAO,EAAE,UAAU,KAAK;AAC3D,EAAE,YAAY,CAAC,OAAO,EAAE,UAAU,CAAC,UAAU,EAAC;AAC9C,EAAE,eAAe,CAAC,OAAO,EAAE,UAAU,EAAC;AACtC;;ACrbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,MAAM,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC;;ACXtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA,MAAM,yBAAyB,GAAGC,MAAY,CAAC,yBAAyB,EAAC;AACzE,MAAM,sBAAsB,GAAGA,MAAY,CAAC,sBAAsB,EAAC;AACnE;AACA;AACA;AACA;AACO,MAAM,OAAO,CAAC;AACrB;AACA;AACA;AACA,EAAE,WAAW,CAAC,CAAC,UAAU,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,GAAG,WAAU;AACzB;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,GAAG,GAAG,EAAC;AAChB,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,GAAG,UAAU,IAAI,IAAI,OAAO,CAAC,UAAU,EAAC;AAuBlE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;AAChD,EAAE,MAAM,IAAI,GAAGR,mCAA0C,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,EAAC;AACxH,EAAE,OAAO,CAAC,GAAG,IAAI,IAAG;AACpB,EAAE,OAAO,IAAI;AACb,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,iBAAiB,GAAG,OAAO,IAAI,cAAc,CAAC,OAAO,EAAE,WAAW,CAAC,OAAO,CAAC,EAAC;AAiBzF;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,SAAS,GAAG,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAC;AAwF9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,GAAG,OAAO,IAAI;AACtC,EAAE,IAAI,GAAG,GAAG,EAAC;AACb,EAAE,IAAI,IAAI,GAAG,EAAC;AACd,EAAE,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,OAAM;AAChC,EAAE,OAAO,OAAO,CAAC,GAAG,GAAG,GAAG,EAAE;AAC5B,IAAI,MAAM,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAC;AACxC;AACA,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAGC,KAAY,IAAI,KAAI;AACzC,IAAI,IAAI,IAAI,IAAG;AACf,IAAI,IAAI,CAAC,GAAGC,IAAW,EAAE;AACzB,MAAM,OAAO,GAAG;AAChB,KAAK;AACL;AACA,IAAI,IAAI,GAAG,GAAGO,gBAAuB,EAAE;AACvC,MAAM,MAAM,sBAAsB;AAClC,KAAK;AACL;AACA,GAAG;AACH,EAAE,MAAM,yBAAyB;AACjC,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,UAAU,GAAG,OAAO,IAAI;AACrC,EAAE,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAC;AACpC,EAAE,IAAI,GAAG,GAAG,CAAC,GAAGC,MAAY;AAC5B,EAAE,IAAI,IAAI,GAAG,GAAE;AACf,EAAE,MAAM,IAAI,GAAG,CAAC,CAAC,GAAGC,IAAW,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAC;AAC7C,EAAE,IAAI,CAAC,CAAC,GAAGT,IAAW,MAAM,CAAC,EAAE;AAC/B;AACA,IAAI,OAAO,IAAI,GAAG,GAAG;AACrB,GAAG;AACH,EAAE,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,OAAM;AAChC,EAAE,OAAO,OAAO,CAAC,GAAG,GAAG,GAAG,EAAE;AAC5B,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAC;AAClC;AACA,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,GAAGD,KAAY,IAAI,KAAI;AACzC,IAAI,IAAI,IAAI,IAAG;AACf,IAAI,IAAI,CAAC,GAAGC,IAAW,EAAE;AACzB,MAAM,OAAO,IAAI,GAAG,GAAG;AACvB,KAAK;AACL;AACA,IAAI,IAAI,GAAG,GAAGO,gBAAuB,EAAE;AACvC,MAAM,MAAM,sBAAsB;AAClC,KAAK;AACL;AACA,GAAG;AACH,EAAE,MAAM,yBAAyB;AACjC,EAAC;AA6BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,sBAAsB,GAAG,OAAO,IAAI;AACjD,EAAE,IAAI,YAAY,GAAG,WAAW,CAAC,OAAO,EAAC;AACzC,EAAE,IAAI,YAAY,KAAK,CAAC,EAAE;AAC1B,IAAI,OAAO,EAAE;AACb,GAAG,MAAM;AACT,IAAI,IAAI,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,EAAC;AAChE,IAAI,IAAI,EAAE,YAAY,GAAG,GAAG,EAAE;AAC9B,MAAM,OAAO,YAAY,EAAE,EAAE;AAC7B,QAAQ,aAAa,IAAI,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,CAAC,EAAC;AACjE,OAAO;AACP,KAAK,MAAM;AACX,MAAM,OAAO,YAAY,GAAG,CAAC,EAAE;AAC/B,QAAQ,MAAM,OAAO,GAAG,YAAY,GAAG,KAAK,GAAG,YAAY,GAAG,MAAK;AACnE;AACA,QAAQ,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,GAAG,GAAG,OAAO,EAAC;AAC9E,QAAQ,OAAO,CAAC,GAAG,IAAI,QAAO;AAC9B;AACA,QAAQ,aAAa,IAAI,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,sBAAsB,KAAK,GAAE;AACrF,QAAQ,YAAY,IAAI,QAAO;AAC/B,OAAO;AACP,KAAK;AACL,IAAI,OAAO,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AACpD,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,oBAAoB,GAAG,OAAO;AAC3C,mBAAmB,CAACG,eAAsB,EAAE,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAC;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,GAAGA,eAAsB,GAAG,oBAAoB,GAAG;;AClY7E;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACO,MAAM,uBAAuB,GAAG,GAAG,IAAI,IAAI,UAAU,CAAC,GAAG,EAAC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,mCAAmC,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,KAAK,IAAI,UAAU,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,EAAC;AAC7H;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,+BAA+B,GAAG,MAAM,IAAI,IAAI,UAAU,CAAC,MAAM,EAAC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,GAAG,KAAK,IAAI;AACjC,EAAE,IAAI,CAAC,GAAG,GAAE;AACZ,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;AAC7C,IAAI,CAAC,IAAIC,YAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;AACtC,GAAG;AACH;AACA,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC;AAChB,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,YAAY,GAAG,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAC;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB,GAAG,CAAC,IAAI;AAC/B;AACA,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAC;AACnB,EAAE,MAAM,KAAK,GAAG,uBAAuB,CAAC,CAAC,CAAC,MAAM,EAAC;AACjD,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,IAAI,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,EAAC;AAC9B,GAAG;AACH,EAAE,OAAO,KAAK;AACd,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc,GAAG,CAAC,IAAI;AAC5B,EAAE,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,EAAC;AACtC,EAAE,OAAO,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,CAAC;AACnE,EAAC;AACD;AACA;AACO,MAAM,QAAQ,GAAGC,SAAa,GAAG,eAAe,GAAG,aAAY;AACtE;AACA;AACO,MAAM,UAAU,GAAGA,SAAa,GAAG,iBAAiB,GAAG;;ACjF9D;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,QAAQ,GAAG,IAAI,GAAG,GAAE;AAC1B;AACA;AACA,MAAM,oBAAoB,CAAC;AAC3B;AACA;AACA;AACA,EAAE,WAAW,CAAC,CAAC,IAAI,EAAE;AACrB,IAAI,IAAI,CAAC,IAAI,GAAG,KAAI;AACpB;AACA;AACA;AACA,IAAI,IAAI,CAAC,SAAS,GAAG,KAAI;AACzB;AACA;AACA;AACA,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAEC,UAAiB,CAAC,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE,EAAC;AACpI,IAAIC,QAAgB,CAAC,IAAI,CAAC,SAAS,EAAC;AACpC,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,CAAC,GAAG,EAAE;AACpB,IAAIlB,UAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAEmB,QAAe,CAACC,+BAAsC,CAAC,GAAG,CAAC,CAAC,EAAC;AACvG,GAAG;AACH;AACA,EAAE,KAAK,CAAC,GAAG;AACX,IAAIC,SAAiB,CAAC,IAAI,CAAC,SAAS,EAAC;AACrC,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,MAAM,EAAE,GAAG,OAAO,gBAAgB,KAAK,WAAW,GAAG,oBAAoB,GAAG,iBAAgB;AAC5F;AACA;AACA;AACA;AACA;AACA,MAAM,UAAU,GAAG,IAAI;AACvB,EAAEC,cAAkB,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM;AAC3C,IAAI,MAAM,IAAI,GAAGC,QAAU,GAAE;AAC7B,IAAI,MAAM,EAAE,GAAG,IAAI,EAAE,CAAC,IAAI,EAAC;AAC3B;AACA;AACA;AACA;AACA,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,kBAAkB,CAAC,EAAC;AAC5E,IAAI,OAAO;AACX,MAAM,EAAE,EAAE,IAAI;AACd,KAAK;AACL,GAAG,EAAC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,SAAS,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK;AACtC,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC;AAC9B,EAAE,OAAO,CAAC;AACV,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,GAAG,CAAC,IAAI,EAAE,CAAC,KAAK;AACxC,EAAE,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,EAAC;AAClC,EAAE,MAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC;AAC7C,EAAE,IAAI,YAAY,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;AAC/C,IAAI,OAAO,CAAC,EAAE,CAAC,KAAK,GAAE;AACtB,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAC;AACzB,GAAG;AACH,EAAE,OAAO,YAAY;AACrB,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,GAAG,IAAI,KAAK;AACtD,EAAE,MAAM,CAAC,GAAG,UAAU,CAAC,IAAI,EAAC;AAC5B,EAAE,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,EAAC;AACxB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,EAAC;AAC1C;;ACjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,GAAG,MAAM;AACjC,EAAE,IAAI,KAAK,GAAG,KAAI;AAClB,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK;AACnB,IAAI,IAAI,KAAK,EAAE;AACf,MAAM,KAAK,GAAG,MAAK;AACnB,MAAM,IAAI;AACV,QAAQ,CAAC,GAAE;AACX,OAAO,SAAS;AAChB,QAAQ,KAAK,GAAG,KAAI;AACpB,OAAO;AACP,KAAK,MAAM,IAAI,CAAC,KAAK,SAAS,EAAE;AAChC,MAAM,CAAC,GAAE;AACT,KAAK;AACL,GAAG;AACH;;AC1CA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,GAAG,IAAI,CAAC;;ACrBhC;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,UAAU,CAAC;AACxB,EAAE,WAAW,CAAC,GAAG;AACjB;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,UAAU,GAAG1B,QAAU,GAAE;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;AACf,IAAIyB,cAAkB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAEC,QAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;AAChE,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;AACjB;AACA;AACA;AACA,IAAI,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,KAAK;AAC5B,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,EAAC;AACxB,MAAM,CAAC,CAAC,GAAG,IAAI,EAAC;AAChB,MAAK;AACL,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,EAAC;AACrB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE;AAChB,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,EAAC;AAC/C,IAAI,IAAI,SAAS,KAAK,SAAS,EAAE;AACjC,MAAM,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC;AACzB,MAAM,IAAI,SAAS,CAAC,IAAI,KAAK,CAAC,EAAE;AAChC,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,EAAC;AACpC,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE;AACpB;AACA,IAAI,OAAOC,IAAU,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI3B,QAAU,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;AACpG,GAAG;AACH;AACA,EAAE,OAAO,CAAC,GAAG;AACb,IAAI,IAAI,CAAC,UAAU,GAAGA,QAAU,GAAE;AAClC,GAAG;AACH;;AC9EA;AACA;AACA;AASA;AACO,MAAM,eAAe,GAAG,MAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,SAAS,SAAS,UAAU,CAAC;AAC1C;AACA;AACA;AACA,EAAE,WAAW,CAAC,CAAC,GAAG,EAAE;AACpB,IAAI,KAAK,GAAE;AACX,IAAI,IAAI,CAAC,GAAG,GAAG,IAAG;AAClB;AACA;AACA;AACA,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,SAAQ;AAChC;AACA;AACA;AACA;AACA,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,GAAE;AAC3B;AACA;AACA;AACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,GAAE;AACzB,IAAI,IAAI,CAAC,cAAc,uBAAuB,WAAW,CAAC,MAAM;AAChE,MAAM,MAAM,GAAG,GAAG4B,WAAgB,GAAE;AACpC,MAAM,IAAI,IAAI,CAAC,aAAa,EAAE,KAAK,IAAI,KAAK,eAAe,GAAG,CAAC,IAAI,GAAG,uCAAuC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,CAAC,EAAE;AAC1J;AACA,QAAQ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,EAAC;AAChD,OAAO;AACP;AACA;AACA;AACA,MAAM,MAAM,MAAM,GAAG,GAAE;AACvB,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,QAAQ,KAAK;AAC5C,QAAQ,IAAI,QAAQ,KAAK,IAAI,CAAC,QAAQ,IAAI,eAAe,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AAClH,UAAU,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAC;AAC/B,SAAS;AACT,OAAO,EAAC;AACR,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7B,QAAQ,qBAAqB,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAC;AACtD,OAAO;AACP,KAAK,EAAEpB,KAAU,CAAC,eAAe,GAAG,EAAE,CAAC,CAAC,EAAC;AACzC,IAAI,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,MAAM;AAC5B,MAAM,IAAI,CAAC,OAAO,GAAE;AACpB,KAAK,EAAC;AACN,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,EAAC;AAC1B,GAAG;AACH;AACA,EAAE,OAAO,CAAC,GAAG;AACb,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,EAAC;AAChC,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,EAAC;AAC5B,IAAI,KAAK,CAAC,OAAO,GAAE;AACnB,IAAI,aAAa,CAAC,IAAI,CAAC,cAAc,EAAC;AACtC,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,aAAa,CAAC,GAAG;AACnB,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI;AACjD,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,aAAa,CAAC,CAAC,KAAK,EAAE;AACxB,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAQ;AAClC,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAC;AACjD,IAAI,MAAM,KAAK,GAAG,aAAa,KAAK,SAAS,GAAG,CAAC,GAAG,aAAa,CAAC,KAAK,GAAG,EAAC;AAC3E,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAC;AAC/C,IAAI,IAAI,KAAK,KAAK,IAAI,EAAE;AACxB,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAC;AAClC,KAAK,MAAM;AACX,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAC;AACtC,KAAK;AACL,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;AAC5B,MAAM,KAAK;AACX,MAAM,WAAW,EAAEoB,WAAgB,EAAE;AACrC,KAAK,EAAC;AACN,IAAI,MAAM,KAAK,GAAG,GAAE;AACpB,IAAI,MAAM,OAAO,GAAG,GAAE;AACtB,IAAI,MAAM,eAAe,GAAG,GAAE;AAC9B,IAAI,MAAM,OAAO,GAAG,GAAE;AACtB,IAAI,IAAI,KAAK,KAAK,IAAI,EAAE;AACxB,MAAM,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAC;AAC5B,KAAK,MAAM,IAAI,SAAS,IAAI,IAAI,EAAE;AAClC,MAAM,IAAI,KAAK,IAAI,IAAI,EAAE;AACzB,QAAQ,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAC;AAC5B,OAAO;AACP,KAAK,MAAM;AACX,MAAM,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAC;AAC5B,MAAM,IAAI,CAACC,YAAc,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE;AAC7C,QAAQ,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAC;AACtC,OAAO;AACP,KAAK;AACL,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AAC9E,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,EAAC;AAClF,KAAK;AACL,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,OAAO,CAAC,EAAC;AAC/D,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,kBAAkB,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE;AACpC,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,GAAE;AACtC,IAAI,IAAI,KAAK,KAAK,IAAI,EAAE;AACxB,MAAM,IAAI,CAAC,aAAa,CAAC;AACzB,QAAQ,GAAG,KAAK;AAChB,QAAQ,CAAC,KAAK,GAAG,KAAK;AACtB,OAAO,EAAC;AACR,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE,SAAS,CAAC,GAAG;AACf,IAAI,OAAO,IAAI,CAAC,MAAM;AACtB,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,qBAAqB,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,MAAM,KAAK;AACrE,EAAE,MAAM,OAAO,GAAG,GAAE;AACpB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,EAAC;AAC/B,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AACxC,MAAM,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAC;AACvC,MAAM,IAAI,QAAQ,KAAK,SAAS,CAAC,QAAQ,EAAE;AAC3C,QAAQ,MAAM,OAAO,mCAAmC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAC;AACrF,QAAQ,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;AACrC,UAAU,KAAK,EAAE,OAAO,CAAC,KAAK,GAAG,CAAC;AAClC,UAAU,WAAW,EAAED,WAAgB,EAAE;AACzC,SAAS,EAAC;AACV,OAAO;AACP,MAAM,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAC;AAC5B,KAAK;AACL,GAAG;AACH,EAAE,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AAC1B,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,MAAM,CAAC,EAAC;AAC3E,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,MAAM,CAAC,EAAC;AAC3E,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,qBAAqB,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,MAAM,GAAG,SAAS,CAAC,MAAM,KAAK;AACxF,EAAE,MAAM,GAAG,GAAG,OAAO,CAAC,OAAM;AAC5B,EAAE,MAAM,OAAO,GAAGE,aAAsB,GAAE;AAC1C,EAAEC,YAAqB,CAAC,OAAO,EAAE,GAAG,EAAC;AACrC,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAChC,IAAI,MAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,EAAC;AAC/B,IAAI,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,KAAI;AAC9C,IAAI,MAAM,KAAK,kCAAkC,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,MAAK;AACrF,IAAIA,YAAqB,CAAC,OAAO,EAAE,QAAQ,EAAC;AAC5C,IAAIA,YAAqB,CAAC,OAAO,EAAE,KAAK,EAAC;AACzC,IAAIC,cAAuB,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC;AAC3D,GAAG;AACH,EAAE,OAAOC,YAAqB,CAAC,OAAO,CAAC;AACvC,EAAC;AA4BD;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,oBAAoB,GAAG,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,KAAK;AACnE,EAAE,MAAM,OAAO,GAAGC,aAAsB,CAAC,MAAM,EAAC;AAChD,EAAE,MAAM,SAAS,GAAGN,WAAgB,GAAE;AACtC,EAAE,MAAM,KAAK,GAAG,GAAE;AAClB,EAAE,MAAM,OAAO,GAAG,GAAE;AACpB,EAAE,MAAM,eAAe,GAAG,GAAE;AAC5B,EAAE,MAAM,OAAO,GAAG,GAAE;AACpB,EAAE,MAAM,GAAG,GAAGO,WAAoB,CAAC,OAAO,EAAC;AAC3C,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAChC,IAAI,MAAM,QAAQ,GAAGA,WAAoB,CAAC,OAAO,EAAC;AAClD,IAAI,IAAI,KAAK,GAAGA,WAAoB,CAAC,OAAO,EAAC;AAC7C,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAACC,aAAsB,CAAC,OAAO,CAAC,EAAC;AAC7D,IAAI,MAAM,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAC;AACnD,IAAI,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAC;AACpD,IAAI,MAAM,SAAS,GAAG,UAAU,KAAK,SAAS,GAAG,CAAC,GAAG,UAAU,CAAC,MAAK;AACrE,IAAI,IAAI,SAAS,GAAG,KAAK,KAAK,SAAS,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE;AACxG,MAAM,IAAI,KAAK,KAAK,IAAI,EAAE;AAC1B;AACA,QAAQ,IAAI,QAAQ,KAAK,SAAS,CAAC,QAAQ,IAAI,SAAS,CAAC,aAAa,EAAE,IAAI,IAAI,EAAE;AAClF;AACA;AACA,UAAU,KAAK,GAAE;AACjB,SAAS,MAAM;AACf,UAAU,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAC;AAC3C,SAAS;AACT,OAAO,MAAM;AACb,QAAQ,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAC;AAC7C,OAAO;AACP,MAAM,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE;AACnC,QAAQ,KAAK;AACb,QAAQ,WAAW,EAAE,SAAS;AAC9B,OAAO,EAAC;AACR,MAAM,IAAI,UAAU,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;AACtD,QAAQ,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAC;AAC5B,OAAO,MAAM,IAAI,UAAU,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;AAC7D,QAAQ,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAC;AAC9B,OAAO,MAAM,IAAI,KAAK,KAAK,IAAI,EAAE;AACjC,QAAQ,IAAI,CAACP,YAAc,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;AAC/C,UAAU,eAAe,CAAC,IAAI,CAAC,QAAQ,EAAC;AACxC,SAAS;AACT,QAAQ,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAC;AAC9B,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AAC5E,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC9B,MAAM,KAAK,EAAE,OAAO,EAAE,eAAe,EAAE,OAAO;AAC9C,KAAK,EAAE,MAAM,CAAC,EAAC;AACf,GAAG;AACH,EAAE,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACpE,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC9B,MAAM,KAAK,EAAE,OAAO,EAAE,OAAO;AAC7B,KAAK,EAAE,MAAM,CAAC,EAAC;AACf,GAAG;AACH;;ACtSc,MAAO,YAAY,CAAA;AAAjC,IAAA,WAAA,GAAA;QAES,IAAS,CAAA,SAAA,GAAkC,EAAE,CAAA;KAuCrD;IArCQ,EAAE,CAAC,KAAa,EAAE,EAAY,EAAA;AACnC,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;AAC1B,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,CAAA;AAC3B,SAAA;QAED,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;AAE9B,QAAA,OAAO,IAAI,CAAA;KACZ;AAES,IAAA,IAAI,CAAC,KAAa,EAAE,GAAG,IAAS,EAAA;QACxC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;AAEvC,QAAA,IAAI,SAAS,EAAE;AACb,YAAA,SAAS,CAAC,OAAO,CAAC,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;AAC1D,SAAA;AAED,QAAA,OAAO,IAAI,CAAA;KACZ;IAEM,GAAG,CAAC,KAAa,EAAE,EAAa,EAAA;QACrC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;AAEvC,QAAA,IAAI,SAAS,EAAE;AACb,YAAA,IAAI,EAAE,EAAE;AACN,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,QAAQ,IAAI,QAAQ,KAAK,EAAE,CAAC,CAAA;AACtE,aAAA;AAAM,iBAAA;AACL,gBAAA,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;AAC7B,aAAA;AACF,SAAA;AAED,QAAA,OAAO,IAAI,CAAA;KACZ;IAED,kBAAkB,GAAA;AAChB,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAA;KACpB;AACF;;ACzCD;AACA;AACA;AACA;AACA;AA0BA;AACA;AACA;AACA;AACA;AACO,MAAM,iBAAiB,GAAG,MAAM;AACvC,EAAEQ,GAAU,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,EAAE,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG;;ACvBxFC,6BAQX;AARD,CAAA,UAAY,WAAW,EAAA;AACrB,IAAA,WAAA,CAAA,WAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAQ,CAAA;AACR,IAAA,WAAA,CAAA,WAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAa,CAAA;AACb,IAAA,WAAA,CAAA,WAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAQ,CAAA;AACR,IAAA,WAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,gBAAkB,CAAA;AAClB,IAAA,WAAA,CAAA,WAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAa,CAAA;AACb,IAAA,WAAA,CAAA,WAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAS,CAAA;AACT,IAAA,WAAA,CAAA,WAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAc,CAAA;AAChB,CAAC,EARWA,mBAAW,KAAXA,mBAAW,GAQtB,EAAA,CAAA,CAAA,CAAA;AAEWC,iCAIX;AAJD,CAAA,UAAY,eAAe,EAAA;AACzB,IAAA,eAAA,CAAA,YAAA,CAAA,GAAA,YAAyB,CAAA;AACzB,IAAA,eAAA,CAAA,WAAA,CAAA,GAAA,WAAuB,CAAA;AACvB,IAAA,eAAA,CAAA,cAAA,CAAA,GAAA,cAA6B,CAAA;AAC/B,CAAC,EAJWA,uBAAe,KAAfA,uBAAe,GAI1B,EAAA,CAAA,CAAA;;ACkEK,MAAO,2BAA4B,SAAQ,YAAY,CAAA;AAmE3D,IAAA,WAAA,CAAY,aAAuD,EAAA;AACjE,QAAA,KAAK,EAAE,CAAA;QAnED,IAAY,CAAA,YAAA,GAAU,EAAE,CAAA;AAEzB,QAAA,IAAA,CAAA,aAAa,GAAqD;AACvE,YAAA,GAAG,EAAE,EAAE;;AAEP,YAAA,QAAQ,EAAE,SAAS;;AAEnB,YAAA,SAAS,EAAE,SAAS;AACpB,YAAA,iBAAiB,EAAE,SAAS;AAC5B,YAAA,UAAU,EAAE,EAAE;AACd,YAAA,OAAO,EAAE,IAAI;AACb,YAAA,SAAS,EAAE,IAAI;AACf,YAAA,iBAAiB,EAAE,KAAK;;AAExB,YAAA,uBAAuB,EAAE,KAAK;;AAE9B,YAAA,KAAK,EAAE,IAAI;;AAEX,YAAA,YAAY,EAAE,CAAC;;AAEf,YAAA,MAAM,EAAE,CAAC;;AAET,YAAA,WAAW,EAAE,CAAC;;AAEd,YAAA,QAAQ,EAAE,IAAI;;AAEd,YAAA,QAAQ,EAAE,KAAK;;AAEf,YAAA,MAAM,EAAE,IAAI;;AAEZ,YAAA,OAAO,EAAE,CAAC;AACV,YAAA,MAAM,EAAE,MAAM,IAAI;AAClB,YAAA,SAAS,EAAE,MAAM,IAAI;AACrB,YAAA,SAAS,EAAE,MAAM,IAAI;AACrB,YAAA,iBAAiB,EAAE,MAAM,IAAI;AAC7B,YAAA,QAAQ,EAAE,MAAM,IAAI;AACpB,YAAA,YAAY,EAAE,MAAM,IAAI;AACxB,YAAA,OAAO,EAAE,MAAM,IAAI;AACnB,YAAA,SAAS,EAAE,MAAM,IAAI;AACrB,YAAA,iBAAiB,EAAE,MAAM,IAAI;AAC7B,YAAA,iBAAiB,EAAE,MAAM,IAAI;AAC7B,YAAA,KAAK,EAAE,KAAK;SACb,CAAA;QAED,IAA4B,CAAA,4BAAA,GAAG,KAAK,CAAA;QAEpC,IAAS,CAAA,SAAA,GAAqB,IAAI,CAAA;QAElC,IAAa,CAAA,aAAA,GAAG,IAAI,CAAA;AAEpB,QAAA,IAAA,CAAA,MAAM,GAAGA,uBAAe,CAAC,YAAY,CAAA;QAErC,IAAmB,CAAA,mBAAA,GAAG,CAAC,CAAA;AAEvB,QAAA,IAAA,CAAA,GAAG,GAAGC,WAAiB,EAAE,CAAA;AAEzB,QAAA,IAAA,CAAA,SAAS,GAAQ;AACf,YAAA,SAAS,EAAE,IAAI;AACf,YAAA,iBAAiB,EAAE,IAAI;SACxB,CAAA;QAED,IAAiB,CAAA,iBAAA,GAGN,IAAI,CAAA;QA0Cf,IAAqB,CAAA,qBAAA,GAAuB,SAAS,CAAA;QAErD,IAAuB,CAAA,uBAAA,GAAoC,SAAS,CAAA;QA6BpE,IAAY,CAAA,YAAA,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AArEpC,QAAA,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAA;AAEpC,QAAA,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,aAAa,CAAC,iBAAiB,GAAG,aAAa,CAAC,iBAAiB,GAAG,SAAS,CAAA;QAEpH,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;AAC1C,QAAA,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QACvC,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAA;QAChD,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAA;QAChD,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAA;QAChE,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAA;AAC9C,QAAA,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QAC3C,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAA;QACtD,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA;QAC5C,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAA;QAChD,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAA;QAChE,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAA;AAEhE,QAAA,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AACzC,QAAA,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QAE7C,IAAI,CAAC,sBAAsB,EAAE,CAAA;QAE7B,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,WAAW,CAC5C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAC/B,IAAI,CAAC,aAAa,CAAC,uBAAuB,GAAG,EAAE,CAChD,CAAA;AAED,QAAA,IAAI,OAAO,aAAa,CAAC,OAAO,KAAK,WAAW,EAAE;AAChD,YAAA,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,OAAO,CAAA;AAC3C,SAAA;AAED,QAAA,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,OAAM;AACP,SAAA;QAED,IAAI,CAAC,OAAO,EAAE,CAAA;KACf;IAMD,MAAM,MAAM,CAAC,KAAY,EAAA;AACvB,QAAA,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAA;KACnC;IAED,MAAM,QAAQ,CAAC,IAAwB,EAAA;AACrC,QAAA,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAA;KACpC;AAED,IAAA,MAAM,CAAC,QAA4B,EAAA;QACjC,IAAI,IAAI,CAAC,qBAAqB,EAAE;AAC9B,YAAA,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAA;AAC5C,SAAA;QAED,IAAI,IAAI,CAAC,uBAAuB,EAAE;AAChC,YAAA,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAA;AAChD,SAAA;KACF;AAED,IAAA,MAAM,CAAC,QAA4B,EAAA;;KAGlC;IAEM,gBAAgB,CAAC,gBAAmE,EAAE,EAAA;AAC3F,QAAA,IAAI,CAAC,aAAa,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,aAAa,EAAE,CAAA;KACjE;AAMD,IAAA,MAAM,OAAO,GAAA;AACX,QAAA,IAAI,IAAI,CAAC,MAAM,KAAKD,uBAAe,CAAC,SAAS,EAAE;YAC7C,OAAM;AACP,SAAA;;QAGD,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAA;AAC3B,YAAA,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAA;AACtC,SAAA;AAED,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAA;QAEzB,MAAM,cAAc,GAAG,MAAK;YAC1B,IAAI,aAAa,GAAG,KAAK,CAAA;AAEzB,YAAA,MAAM,YAAY,GAAGE,aAAK,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACpE,gBAAA,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK;AAC/B,gBAAA,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY;AAC7C,gBAAA,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM;AACjC,gBAAA,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW;AAC3C,gBAAA,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;AACrC,gBAAA,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;AACrC,gBAAA,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM;AACjC,gBAAA,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO;gBACnC,aAAa,EAAE,OAAO,IAAG;AACvB,oBAAA,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,aAAa,EAAE;wBACxC,OAAO,CAAC,KAAK,EAAE,CAAA;AAChB,qBAAA;iBACF;AACF,aAAA,CAAC,CAAC,KAAK,CAAC,CAAC,KAAU,KAAI;;;AAGtB,gBAAA,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,iBAAiB,EAAE;AAC7C,oBAAA,MAAM,KAAK,CAAA;AACZ,iBAAA;AACH,aAAC,CAAC,CAAA;YAEF,OAAO;gBACL,YAAY;gBACZ,UAAU,EAAE,MAAK;oBACf,aAAa,GAAG,IAAI,CAAA;iBACrB;aACF,CAAA;AACH,SAAC,CAAA;QAED,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,cAAc,EAAE,CAAA;AACrD,QAAA,IAAI,CAAC,oBAAoB,GAAG,UAAU,CAAA;AAEtC,QAAA,OAAO,YAAY,CAAA;KACpB;IAED,yBAAyB,GAAA;QACvB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;YACrC,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,gBAAA,IAAI,CAAC,YAAY,GAAG,EAAE,CAAA;AACtB,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAA;AACtB,gBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;AACtB,aAAA;;AAGD,YAAA,MAAM,EAAE,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AAC7D,YAAA,EAAE,CAAC,UAAU,GAAG,aAAa,CAAA;AAC7B,YAAA,EAAE,CAAC,SAAS,GAAG,CAAC,OAAY,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAA;YAC9D,EAAE,CAAC,OAAO,GAAG,CAAC,OAAY,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAA;AACrE,YAAA,EAAE,CAAC,MAAM,GAAG,CAAC,OAAY,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;AACxD,YAAA,EAAE,CAAC,OAAO,GAAG,CAAC,GAAQ,KAAI;gBACxB,MAAM,CAAC,GAAG,CAAC,CAAA;AACb,aAAC,CAAA;AACD,YAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAA;;AAGnB,YAAA,IAAI,CAAC,MAAM,GAAGF,uBAAe,CAAC,UAAU,CAAA;AACxC,YAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAEA,uBAAe,CAAC,UAAU,EAAE,CAAC,CAAA;;YAG3D,IAAI,CAAC,iBAAiB,GAAG;gBACvB,OAAO;gBACP,MAAM;aACP,CAAA;AACH,SAAC,CAAC,CAAA;KACH;AAED,IAAA,SAAS,CAAC,KAAmB,EAAA;QAC3B,IAAI,CAAC,wBAAwB,EAAE,CAAA;KAChC;IAED,wBAAwB,GAAA;QACtB,IAAI,IAAI,CAAC,iBAAiB,EAAE;AAC1B,YAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAA;AAChC,YAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAA;AAE7B,YAAA,IAAI,CAAC,MAAM,GAAGA,uBAAe,CAAC,SAAS,CAAA;AACvC,YAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAEA,uBAAe,CAAC,SAAS,EAAE,CAAC,CAAA;AAC1D,YAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;AACpB,YAAA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAA;AACxD,YAAA,IAAI,CAAC,YAAY,GAAG,EAAE,CAAA;AACvB,SAAA;KACF;IAED,qBAAqB,GAAA;AACnB,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAA;KAC9B;IAED,uBAAuB,GAAA;;AACrB,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,iBAAiB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,EAAE,CAAA;AAChC,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAA;KAC9B;IAED,eAAe,GAAA;;;AAEb,QAAA,IAAI,IAAI,CAAC,MAAM,KAAKA,uBAAe,CAAC,SAAS,EAAE;YAC7C,OAAM;AACP,SAAA;;AAGD,QAAA,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAC7B,OAAM;AACP,SAAA;;AAGD,QAAA,IAAI,IAAI,CAAC,aAAa,CAAC,uBAAuB,IAAIX,WAAgB,EAAE,GAAG,IAAI,CAAC,mBAAmB,EAAE;YAC/F,OAAM;AACP,SAAA;;;AAID,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,EAAE,CAAA;AACvB,QAAA,IAAI,CAAC,YAAY,GAAG,EAAE,CAAA;KACvB;IAED,sBAAsB,GAAA;AACpB,QAAA,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YACjC,OAAM;AACP,SAAA;QAED,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAA;KACrD;;AAGD,IAAA,IAAI,SAAS,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;YACxE,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;AAC1E,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAA;KAC9B;AAED,IAAA,IAAI,GAAG,GAAA;AACL,QAAA,MAAM,aAAa,GAAGc,iBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;QAE1E,OAAO,CAAA,EAAG,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,MAAM,KAAK,CAAC,GAAG,EAAE,GAAG,CAAI,CAAA,EAAA,aAAa,CAAE,CAAA,CAAA,CAAE,CAAA;KACnF;IAED,UAAU,GAAA;AACR,QAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAA;AAE1B,QAAA,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,EAAE;YAC3B,OAAM;AACP,SAAA;QAED,IAAI;AACF,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAA;AACtB,YAAA,IAAI,CAAC,YAAY,GAAG,EAAE,CAAA;AACvB,SAAA;QAAC,MAAM;;AAEP,SAAA;KACF;AAED,IAAA,IAAI,CAAC,OAAY,EAAA;;QACf,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,MAAKC,oBAAa,CAAC,IAAI,EAAE;AACrD,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAC7B,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAChC,SAAA;KACF;IAED,OAAO,CAAC,EAAE,KAAK,EAAqB,EAAA;AAClC,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;AAErB,QAAA,IAAI,IAAI,CAAC,MAAM,KAAKJ,uBAAe,CAAC,SAAS,EAAE;AAC7C,YAAA,IAAI,CAAC,MAAM,GAAGA,uBAAe,CAAC,YAAY,CAAA;AAC1C,YAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAEA,uBAAe,CAAC,YAAY,EAAE,CAAC,CAAA;YAC7D,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,CAAC,CAAA;AACnC,SAAA;AAED,QAAA,IAAI,KAAK,CAAC,IAAI,KAAKK,mBAAY,CAAC,IAAI,EAAE;AACpC,YAAA,IAAI,KAAK,CAAC,MAAM,KAAKA,mBAAY,CAAC,MAAM,EAAE;AACxC,gBAAA,OAAO,CAAC,IAAI,CAAC,oKAAoK,CAAC,CAAA;AACnL,aAAA;AAAM,iBAAA;gBACL,OAAO,CAAC,IAAI,CAAC,CAAA,iEAAA,EAAoE,KAAK,CAAC,MAAM,CAAE,CAAA,CAAC,CAAA;AACjG,aAAA;AAED,YAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAA;AAC3B,SAAA;AAED,QAAA,IAAI,KAAK,CAAC,IAAI,KAAKC,gBAAS,CAAC,IAAI,EAAE;AACjC,YAAA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;AAC7B,gBAAA,OAAO,CAAC,IAAI,CAAC,iHAAiH,CAAC,CAAA;AAC/H,gBAAA,OAAM;AACP,aAAA;AACF,SAAA;AAED,QAAA,IAAI,KAAK,CAAC,IAAI,KAAKC,oBAAa,CAAC,IAAI,EAAE;YACrC,OAAO,CAAC,IAAI,CAAC,CAAA,kEAAA,EAAqE,KAAK,CAAC,MAAM,CAAE,CAAA,CAAC,CAAA;AACjG,YAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAA;AAC3B,SAAA;QAED,IAAI,IAAI,CAAC,iBAAiB,EAAE;;YAE1B,IAAI,CAAC,uBAAuB,EAAE,CAAA;AAC/B,SAAA;aAAM,IAAI,IAAI,CAAC,aAAa,EAAE;;YAE7B,IAAI,CAAC,OAAO,EAAE,CAAA;AACf,SAAA;;QAGD,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,OAAM;AACP,SAAA;;AAGD,QAAA,IAAI,IAAI,CAAC,MAAM,KAAKP,uBAAe,CAAC,YAAY,EAAE;YAChD,OAAM;AACP,SAAA;;AAGD,QAAA,IAAI,CAAC,MAAM,GAAGA,uBAAe,CAAC,YAAY,CAAA;AAC1C,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAEA,uBAAe,CAAC,YAAY,EAAE,CAAC,CAAA;QAC7D,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,KAAK,EAAE,CAAC,CAAA;KACnC;IAED,OAAO,GAAA;AACL,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;AAEpB,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;AAC5B,YAAA,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;AACxC,SAAA;AAED,QAAA,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAA;;;;QAK/C,IAAI,CAAC,qBAAqB,EAAE,CAAA;QAE5B,IAAI,CAAC,UAAU,EAAE,CAAA;QAEjB,IAAI,CAAC,kBAAkB,EAAE,CAAA;AAEzB,QAAA,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YACjC,OAAM;AACP,SAAA;QAED,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAA;KACxD;AAEF;;MC3dY,eAAe,CAAA;AAQ1B,IAAA,WAAA,CAAY,IAAS,EAAA;AACnB,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;AAChB,QAAA,IAAI,CAAC,OAAO,GAAG,aAAa,EAAE,CAAA;AAC9B,QAAA,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;KACxD;IAED,WAAW,GAAA;AACT,QAAA,OAAO,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KACjC;IAED,aAAa,GAAA;AACX,QAAA,OAAO,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KACnC;IAED,iBAAiB,GAAA;AACf,QAAA,OAAO,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KACvC;AAED,IAAA,YAAY,CAAC,IAAiB,EAAA;QAC5B,OAAO,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;KACxC;AAED,IAAA,cAAc,CAAC,MAAc,EAAA;QAC3B,OAAO,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA;KAC5C;AAED,IAAA,kBAAkB,CAAC,IAAgB,EAAA;QACjC,OAAO,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;KAC9C;IAED,MAAM,GAAA;AACJ,QAAA,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KAC5B;AACF;;AC1DD;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,mBAAmB,GAAG,EAAC;AAC7B,MAAM,mBAAmB,GAAG,EAAC;AAC7B,MAAM,gBAAgB,GAAG,EAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK;AAChD,EAAER,YAAqB,CAAC,OAAO,EAAE,mBAAmB,EAAC;AACrD,EAAE,MAAM,EAAE,GAAGgB,YAAC,CAAC,iBAAiB,CAAC,GAAG,EAAC;AACrC,EAAEC,kBAA2B,CAAC,OAAO,EAAE,EAAE,EAAC;AAC1C,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,cAAc,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,kBAAkB,KAAK;AACpE,EAAEjB,YAAqB,CAAC,OAAO,EAAE,mBAAmB,EAAC;AACrD,EAAEiB,kBAA2B,CAAC,OAAO,EAAED,YAAC,CAAC,mBAAmB,CAAC,GAAG,EAAE,kBAAkB,CAAC,EAAC;AACtF,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG;AACnD,EAAE,cAAc,CAAC,OAAO,EAAE,GAAG,EAAEE,iBAA0B,CAAC,OAAO,CAAC,EAAC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,aAAa,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,iBAAiB,KAAK;AAClE,EAAE,IAAI;AACN,IAAIF,YAAC,CAAC,WAAW,CAAC,GAAG,EAAEE,iBAA0B,CAAC,OAAO,CAAC,EAAE,iBAAiB,EAAC;AAC9E,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB;AACA,IAAI,OAAO,CAAC,KAAK,CAAC,0CAA0C,EAAE,KAAK,EAAC;AACpE,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACO,MAAM,WAAW,GAAG,CAAC,OAAO,EAAE,MAAM,KAAK;AAChD,EAAElB,YAAqB,CAAC,OAAO,EAAE,gBAAgB,EAAC;AAClD,EAAEiB,kBAA2B,CAAC,OAAO,EAAE,MAAM,EAAC;AAC9C,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,UAAU,GAAG,cAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,eAAe,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,iBAAiB,KAAK;AAC7E,EAAE,MAAM,WAAW,GAAGb,WAAoB,CAAC,OAAO,EAAC;AACnD,EAAE,QAAQ,WAAW;AACrB,IAAI,KAAK,mBAAmB;AAC5B,MAAM,aAAa,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,EAAC;AAC1C,MAAM,KAAK;AACX,IAAI,KAAK,mBAAmB;AAC5B,MAAM,aAAa,CAAC,OAAO,EAAE,GAAG,EAAE,iBAAiB,EAAC;AACpD,MAAM,KAAK;AACX,IAAI,KAAK,gBAAgB;AACzB,MAAM,UAAU,CAAC,OAAO,EAAE,GAAG,EAAE,iBAAiB,EAAC;AACjD,MAAM,KAAK;AACX,IAAI;AACJ,MAAM,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC;AAC7C,GAAG;AACH,EAAE,OAAO,WAAW;AACpB;;MC9Ha,eAAe,CAAA;AAK1B,IAAA,WAAA,GAAA;AACE,QAAA,IAAI,CAAC,OAAO,GAAG,aAAa,EAAE,CAAA;KAC/B;AAED,IAAA,GAAG,CAAC,IAAuC,EAAA;QACzC,OAAO,IAAI,CAAC,OAAO,CAAA;KACpB;IAED,YAAY,GAAA;AACV,QAAA,OAAO,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KAClC;AACF;;MCVY,eAAe,CAAA;AAM1B,IAAA,WAAA,CAAY,OAAwB,EAAA;QAFpC,IAAW,CAAA,WAAA,GAAG,KAAK,CAAA;AAGjB,QAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;KACvB;AAEM,IAAA,cAAc,CAAC,KAAc,EAAA;AAClC,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAA;AAExB,QAAA,OAAO,IAAI,CAAA;KACZ;IAEM,KAAK,CAAC,QAA4B,EAAE,UAAmB,EAAA;AAC5D,QAAA,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;AACxB,QAAA,MAAM,IAAI,GAAG,OAAO,CAAC,WAAW,EAAE,CAAA;AAElC,QAAA,MAAM,kBAAkB,GAAG,OAAO,CAAC,MAAM,EAAE,CAAA;AAE3C,QAAA,QAAQ,IAAI;YACV,KAAKG,mBAAW,CAAC,IAAI;AACnB,gBAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAA;gBAC3C,MAAK;YAEP,KAAKA,mBAAW,CAAC,SAAS;AACxB,gBAAA,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAA;gBACpC,MAAK;YAEP,KAAKA,mBAAW,CAAC,IAAI;AACnB,gBAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAA;gBAC/B,MAAK;YAEP,KAAKA,mBAAW,CAAC,cAAc;AAC7B,gBAAA,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAA;gBACzC,MAAK;YAEP,KAAKA,mBAAW,CAAC,SAAS;gBACxB,QAAQ,CAAC,gBAAgB,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAA;gBACzD,MAAK;YAEP,KAAKA,mBAAW,CAAC,UAAU;AACzB,gBAAA,IAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAA;gBACxE,MAAK;AACP,YAAA;AACE,gBAAA,MAAM,IAAI,KAAK,CAAC,wCAAwC,IAAI,CAAA,CAAE,CAAC,CAAA;AAClE,SAAA;;QAGD,IAAI,OAAO,CAAC,MAAM,EAAE,GAAG,kBAAkB,GAAG,CAAC,EAAE;YAC7C,IAAI,IAAI,CAAC,WAAW,EAAE;;;AAGpB,gBAAA,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAA;AAClE,aAAA;AAAM,iBAAA;;;AAGL,gBAAA,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAA;AAC7D,aAAA;AACF,SAAA;KACF;IAEO,gBAAgB,CAAC,QAA4B,EAAE,UAAmB,EAAA;AACxE,QAAA,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;AAExB,QAAA,OAAO,CAAC,YAAY,CAACA,mBAAW,CAAC,IAAI,CAAC,CAAA;;AAGtC,QAAA,MAAM,eAAe,GAAG,eAAe,CACrC,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,OAAO,EACf,QAAQ,CAAC,QAAQ,EACjB,QAAQ,CACT,CAAA;;AAGD,QAAA,IAAI,UAAU,IAAI,eAAe,KAAK,mBAAmB,EAAE;AACzD,YAAA,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAA;AACvB,SAAA;KACF;IAED,sBAAsB,CAAC,QAA4B,EAAE,OAAgB,EAAA;AACnE,QAAA,IAAI,OAAO,EAAE;YACX,QAAQ,CAAC,wBAAwB,EAAE,CAAA;AACpC,SAAA;KACF;AAEO,IAAA,qBAAqB,CAAC,QAA4B,EAAA;AACxD,QAAA,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;AAExB,QAAAY,oBAAsC,CACpC,QAAQ,CAAC,SAAS,EAClB,OAAO,CAAC,iBAAiB,EAAE,EAC3B,QAAQ,CACT,CAAA;KACF;AAEO,IAAA,gBAAgB,CAAC,QAA4B,EAAA;AACnD,QAAA,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;QAExBC,sBAAe,CACb,OAAO,CAAC,OAAO,EACf,QAAQ,CAAC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC/C,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAC7C,CAAA;KACF;AAEO,IAAA,0BAA0B,CAAC,QAA4B,EAAA;AAC7D,QAAA,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAA;AAExB,QAAA,OAAO,CAAC,YAAY,CAACb,mBAAW,CAAC,SAAS,CAAC,CAAA;QAC3C,OAAO,CAAC,kBAAkB,CACxBc,qBAAuC,CACrC,QAAQ,CAAC,SAAS,EAClB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC,CAClD,CACF,CAAA;KACF;AACF;;MC7HY,aAAa,CAAA;IAMxB,WAAY,CAAA,OAAqC,EAAE,IAAA,GAAY,EAAE,EAAA;AAC/D,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,EAAE,CAAA;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;KACtC;IAED,MAAM,GAAA;AACJ,QAAA,OAAO,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KAClC;AAED,IAAA,IAAI,CAAC,SAAc,EAAA;AACjB,QAAA,SAAS,KAAT,IAAA,IAAA,SAAS,KAAT,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;KAC/B;AAED,IAAA,SAAS,CAAC,OAAe,EAAA;QACvBC,OAAU,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;KACnC;AACF;;ACrBK,MAAO,qBAAsB,SAAQ,eAAe,CAAA;AAA1D,IAAA,WAAA,GAAA;;AACE,QAAA,IAAA,CAAA,IAAI,GAAGf,mBAAW,CAAC,IAAI,CAAA;QAEvB,IAAW,CAAA,WAAA,GAAG,gBAAgB,CAAA;KAa/B;AAXC,IAAA,GAAG,CAAC,IAAuC,EAAA;AACzC,QAAA,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,EAAE;AACrC,YAAA,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAA;AAC/E,SAAA;QAED,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAa,CAAC,CAAA;QAChD,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;QACrCgB,0BAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;QAE7C,OAAO,IAAI,CAAC,OAAO,CAAA;KACpB;AACF;;AChBK,MAAO,gBAAiB,SAAQ,eAAe,CAAA;AAArD,IAAA,WAAA,GAAA;;AACE,QAAA,IAAA,CAAA,IAAI,GAAGhB,mBAAW,CAAC,SAAS,CAAA;QAE5B,IAAW,CAAA,WAAA,GAAG,yBAAyB,CAAA;KAyBxC;AAvBC,IAAA,GAAG,CAAC,IAAuC,EAAA;AACzC,QAAA,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,WAAW,EAAE;AACzC,YAAA,MAAM,IAAI,KAAK,CAAC,yDAAyD,CAAC,CAAA;AAC3E,SAAA;AAED,QAAA,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,WAAW,EAAE;AACvC,YAAA,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAA;AACzE,SAAA;QAEDN,cAAuB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAa,CAAC,CAAA;QACzDD,YAAqB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;AAE9C,QAAA,IAAI,eAAe,CAAA;AACnB,QAAA,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;YAC7B,eAAe,GAAG,qBAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;AACtE,SAAA;AAAM,aAAA;AACL,YAAA,eAAe,GAAG,qBAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;AACnF,SAAA;QAEDiB,kBAA2B,CAAC,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,CAAA;QAE1D,OAAO,IAAI,CAAC,OAAO,CAAA;KACpB;AACF;;AC7BK,MAAO,YAAa,SAAQ,eAAe,CAAA;AAAjD,IAAA,WAAA,GAAA;;AACE,QAAA,IAAA,CAAA,IAAI,GAAGV,mBAAW,CAAC,KAAK,CAAA;QAExB,IAAW,CAAA,WAAA,GAAG,wCAAwC,CAAA;KAQvD;AANC,IAAA,GAAG,CAAC,IAAuC,EAAA;QACzCN,cAAuB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAa,CAAC,CAAA;QACzDD,YAAqB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;QAE9C,OAAO,IAAI,CAAC,OAAO,CAAA;KACpB;AACF;;ACXK,MAAO,qBAAsB,SAAQ,eAAe,CAAA;AAA1D,IAAA,WAAA,GAAA;;AACE,QAAA,IAAA,CAAA,IAAI,GAAGO,mBAAW,CAAC,cAAc,CAAA;QAEjC,IAAW,CAAA,WAAA,GAAG,0BAA0B,CAAA;KAYzC;AAVC,IAAA,GAAG,CAAC,IAAuC,EAAA;QAEzC,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAA;QACxE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QAE9BN,cAAuB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAa,CAAC,CAAA;QACzDD,YAAqB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;QAE9C,OAAO,IAAI,CAAC,OAAO,CAAA;KACpB;AACF;;ACfK,MAAO,gBAAiB,SAAQ,eAAe,CAAA;AAArD,IAAA,WAAA,GAAA;;AACE,QAAA,IAAA,CAAA,IAAI,GAAGO,mBAAW,CAAC,SAAS,CAAA;QAE5B,IAAW,CAAA,WAAA,GAAG,qBAAqB,CAAA;KASpC;AAPC,IAAA,GAAG,CAAC,IAAuC,EAAA;;QACzC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAa,CAAC,CAAA;QAChD,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;AACrC,QAAA,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,EAAE,CAAC,CAAA;QAEhD,OAAO,IAAI,CAAC,OAAO,CAAA;KACpB;AACF;;ACXK,MAAO,kBAAmB,SAAQ,eAAe,CAAA;AAAvD,IAAA,WAAA,GAAA;;AACE,QAAA,IAAA,CAAA,IAAI,GAAGA,mBAAW,CAAC,IAAI,CAAA;QAEvB,IAAW,CAAA,WAAA,GAAG,iBAAiB,CAAA;KAahC;AAXC,IAAA,GAAG,CAAC,IAAuC,EAAA;AACzC,QAAA,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,WAAW,EAAE;AACxC,YAAA,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAA;AAC9E,SAAA;QAEDN,cAAuB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAa,CAAC,CAAA;QACzDD,YAAqB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;QAC9CwB,cAA2B,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExD,OAAO,IAAI,CAAC,OAAO,CAAA;KACpB;AACF;;AChBK,MAAO,kBAAmB,SAAQ,eAAe,CAAA;AAAvD,IAAA,WAAA,GAAA;;AACE,QAAA,IAAA,CAAA,IAAI,GAAGjB,mBAAW,CAAC,IAAI,CAAA;QAEvB,IAAW,CAAA,WAAA,GAAG,kBAAkB,CAAA;KAajC;AAXC,IAAA,GAAG,CAAC,IAAuC,EAAA;AACzC,QAAA,IAAI,OAAO,IAAI,CAAC,QAAQ,KAAK,WAAW,EAAE;AACxC,YAAA,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAA;AAC9E,SAAA;QAEDN,cAAuB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAa,CAAC,CAAA;QACzDD,YAAqB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;QAC9CyB,cAA2B,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;QAExD,OAAO,IAAI,CAAC,OAAO,CAAA;KACpB;AACF;;AChBK,MAAO,aAAc,SAAQ,eAAe,CAAA;AAAlD,IAAA,WAAA,GAAA;;AACE,QAAA,IAAA,CAAA,IAAI,GAAGlB,mBAAW,CAAC,IAAI,CAAA;QAEvB,IAAW,CAAA,WAAA,GAAG,mBAAmB,CAAA;KAUlC;AARC,IAAA,GAAG,CAAC,IAAuC,EAAA;QACzC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,YAAa,CAAC,CAAA;QAChD,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;QAErC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QAEtC,OAAO,IAAI,CAAC,OAAO,CAAA;KACpB;AACF;;ACkFK,MAAO,kBAAmB,SAAQ,YAAY,CAAA;AAgDlD,IAAA,WAAA,CAAY,aAA8C,EAAA;AACxD,QAAA,KAAK,EAAE,CAAA;AAhDF,QAAA,IAAA,CAAA,aAAa,GAA4C;AAC9D,YAAA,IAAI,EAAE,EAAE;;AAER,YAAA,QAAQ,EAAE,SAAS;;AAEnB,YAAA,SAAS,EAAE,SAAS;AACpB,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,UAAU,EAAE,EAAE;AACd,YAAA,SAAS,EAAE,IAAI;AACf,YAAA,iBAAiB,EAAE,KAAK;AACxB,YAAA,eAAe,EAAE,MAAM,IAAI;AAC3B,YAAA,sBAAsB,EAAE,MAAM,IAAI;AAClC,YAAA,MAAM,EAAE,MAAM,IAAI;AAClB,YAAA,SAAS,EAAE,MAAM,IAAI;AACrB,YAAA,SAAS,EAAE,MAAM,IAAI;AACrB,YAAA,iBAAiB,EAAE,MAAM,IAAI;AAC7B,YAAA,QAAQ,EAAE,MAAM,IAAI;AACpB,YAAA,QAAQ,EAAE,MAAM,IAAI;AACpB,YAAA,YAAY,EAAE,MAAM,IAAI;AACxB,YAAA,OAAO,EAAE,MAAM,IAAI;AACnB,YAAA,SAAS,EAAE,MAAM,IAAI;AACrB,YAAA,iBAAiB,EAAE,MAAM,IAAI;AAC7B,YAAA,iBAAiB,EAAE,MAAM,IAAI;AAC7B,YAAA,WAAW,EAAE,MAAM,IAAI;AACvB,YAAA,KAAK,EAAE,KAAK;SACb,CAAA;QAED,IAA4B,CAAA,4BAAA,GAAG,KAAK,CAAA;QAEpC,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAA;QAEhB,IAAe,CAAA,eAAA,GAAG,CAAC,CAAA;AAEnB,QAAA,IAAA,CAAA,MAAM,GAAGC,uBAAe,CAAC,YAAY,CAAA;QAErC,IAAe,CAAA,eAAA,GAAG,KAAK,CAAA;QAEvB,IAAe,CAAA,eAAA,GAAuB,SAAS,CAAA;AAE/C,QAAA,IAAA,CAAA,GAAG,GAAGC,WAAiB,EAAE,CAAA;AAEzB,QAAA,IAAA,CAAA,SAAS,GAAQ;AACf,YAAA,SAAS,EAAE,IAAI;SAChB,CAAA;QAED,IAAW,CAAA,WAAA,GAAG,IAAI,CAAA;QAgHlB,IAAiB,CAAA,iBAAA,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAkMhD,IAA+B,CAAA,+BAAA,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AA9S1E,QAAA,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAA;QAEpC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,GAAG,aAAa,CAAC,QAAQ,GAAG,IAAIO,YAAC,CAAC,GAAG,EAAE,CAAA;QAC3F,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;QAE/G,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAA;QAC1C,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAA;QAChD,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAA;QAChE,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAA;QAC9C,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAA;QAChD,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAA;QAChE,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAA;QAChE,IAAI,CAAC,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAA;QAEpD,IAAI,CAAC,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAA;QAC5D,IAAI,CAAC,EAAE,CAAC,sBAAsB,EAAE,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAA;AAE1E,QAAA,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAA;QAChF,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,CAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAA;AAEzF,QAAA,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QACvE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAA;AAEnF,QAAA,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AAE7E,QAAA,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AACzE,QAAA,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA;QAC5E,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;AAErF,QAAA,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AAE3E,QAAA,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAA;QACtF,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,CAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAA;AAE/F,QAAA,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAA;QAChF,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,CAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAA;QAEzF,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,MAAK;AAC/B,YAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAEU,6BAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAA;AAC9F,SAAC,CAAC,CAAA;QAEF,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,MAAK;AAC/B,YAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAEA,6BAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAA;AAC9F,SAAC,CAAC,CAAA;AAEF,QAAA,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;AACjE,QAAA,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QACnE,IAAI,CAAC,sBAAsB,EAAE,CAAA;AAE7B,QAAA,IAAI,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE;YACxC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,WAAW,CACpC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EACzB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CACrC,CAAA;AACF,SAAA;QAED,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;KAClD;IAEM,QAAQ,CAAC,EAAE,MAAM,EAAuB,EAAA;AAC7C,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QAEpB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,CAAA;QACvC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,CAAC,CAAA;KAChC;IAEM,gBAAgB,CAAC,gBAA0D,EAAE,EAAA;QAClF,IAAI,CAAC,aAAa,CAAC,iBAAiB,IAAK,aAAkE,CAAC,GAAG,EAAE;YAC/G,MAAM,uBAAuB,GAAG,aAAiE,CAAA;AAEjG,YAAA,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,IAAI,2BAA2B,CAAC;gBACrE,GAAG,EAAE,uBAAuB,CAAC,GAAG;gBAChC,UAAU,EAAE,uBAAuB,CAAC,UAAU;AAC/C,aAAA,CAAC,CAAA;AACH,SAAA;AAED,QAAA,IAAI,CAAC,aAAa,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,aAAa,EAAE,CAAA;KACjE;AAED,IAAA,IAAI,QAAQ,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAA;KACnC;AAED,IAAA,IAAI,SAAS,GAAA;AACX,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,SAAS,CAAA;KACpC;AAED,IAAA,IAAI,kBAAkB,GAAA;AACpB,QAAA,OAAO,IAAI,CAAC,eAAe,GAAG,CAAC,CAAA;KAChC;IAED,wBAAwB,GAAA;AACtB,QAAA,IAAI,CAAC,eAAe,IAAI,CAAC,CAAA;QACzB,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAA;KACnD;IAED,wBAAwB,GAAA;AACtB,QAAA,IAAI,CAAC,eAAe,IAAI,CAAC,CAAA;AACzB,QAAA,IAAI,IAAI,CAAC,eAAe,KAAK,CAAC,EAAE;AAC9B,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;AACnB,SAAA;QACD,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAA;KACnD;IAED,SAAS,GAAA;QACP,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAA;KAClG;IAID,YAAY,GAAA;AACV,QAAA,qBAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,eAAe,CAAC,CAAA;KACjF;IAED,sBAAsB,GAAA;AACpB,QAAA,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YACjC,OAAM;AACP,SAAA;QAED,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAA;KAChE;AAED,IAAA,aAAa,CAAC,OAAe,EAAA;AAC3B,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAA;KAChF;IAED,qBAAqB,CAAC,MAAkB,EAAE,MAAW,EAAA;QACnD,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,OAAM;AACP,SAAA;QAED,IAAI,CAAC,wBAAwB,EAAE,CAAA;AAC/B,QAAA,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CAAA;KAClF;IAED,sBAAsB,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAO,EAAE,MAAW,EAAA;AAClE,QAAA,MAAM,cAAc,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;AAE5D,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B,SAAS,EAAE,IAAI,CAAC,SAAS;AACzB,YAAA,OAAO,EAAE,cAAc;AACvB,YAAA,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;SACtC,EAAE,IAAI,CAAC,CAAA;KACT;AAED,IAAA,IAAI,MAAM,GAAA;QACR,OAAO,IAAI,CAAC,QAAQ,CAAA;KACrB;IAED,IAAI,MAAM,CAAC,KAAK,EAAA;AACd,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;YAC3B,OAAM;AACP,SAAA;AAED,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;QACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,CAAC,CAAA;QAC9B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,CAAA;KAC7B;AAED,IAAA,gBAAgB,CAAC,OAAe,EAAA;QAC9B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,OAAO,EAAE,CAAC,CAAA;KACpC;AAED,IAAA,IAAI,wBAAwB,GAAA;AAC1B,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,eAAe,CAAA;KAC3D;;AAGD,IAAA,MAAM,OAAO,GAAA;QACX,OAAO,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAA;KACtD;IAED,UAAU,GAAA;QACR,IAAI,CAAC,0BAA0B,EAAE,CAAA;QACjC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;KAClD;IAED,MAAM,MAAM,CAAC,KAAY,EAAA;AACvB,QAAA,IAAI,CAAC,eAAe,GAAG,KAAK,CAAA;QAE5B,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,CAAA;QAE5B,IAAI,IAAI,CAAC,wBAAwB,EAAE;AACjC,YAAA,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;AAC/B,gBAAA,KAAK,EAAE,MAAM,IAAI,CAAC,QAAQ,EAAE;AAC5B,gBAAA,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;AACtC,aAAA,CAAC,CAAA;AACH,SAAA;QAED,IAAI,CAAC,SAAS,EAAE,CAAA;KACjB;AAED,IAAA,MAAM,QAAQ,GAAA;QACZ,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,KAAK,UAAU,EAAE;YAClD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAA;AAC9C,YAAA,OAAO,KAAK,CAAA;AACb,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAA;KAChC;IAED,SAAS,GAAA;QACP,IAAI,CAAC,wBAAwB,EAAE,CAAA;QAC/B,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAA;QAEjG,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,KAAK,IAAI,EAAE;AAC3C,YAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBAC1B,SAAS,EAAE,IAAI,CAAC,SAAS;AACzB,gBAAA,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;AACjC,gBAAA,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;AACtC,aAAA,CAAC,CAAA;AACH,SAAA;KACF;AAED,IAAA,IAAI,CAAC,OAAqC,EAAE,IAAS,EAAE,SAAS,GAAG,KAAK,EAAA;AACtE,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAM;AACP,SAAA;AAED,QAAA,IAAI,SAAS,EAAE;AACb,YAAA,IAAI,CAAC,GAAG,CAAC,MAAK,EAAG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA,EAAE,CAAC,CAAA;AAClD,SAAA;QAED,MAAM,aAAa,GAAG,IAAI,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;AAEtD,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,OAAO,EAAE,aAAa,CAAC,OAAO,EAAE,CAAC,CAAA;QAChE,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAA;KACzD;AAED,IAAA,SAAS,CAAC,KAAmB,EAAA;QAC3B,MAAM,OAAO,GAAG,IAAI,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;AAE/C,QAAA,MAAM,YAAY,GAAG,OAAO,CAAC,aAAa,EAAE,CAAA;AAE5C,QAAA,IAAI,YAAY,KAAK,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE;AAC5C,YAAA,OAAM;AACP,SAAA;AAED,QAAA,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC,CAAA;AAEpC,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;QAEzE,IAAI,eAAe,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;KAC/C;AAED,IAAA,OAAO,CAAC,KAAiB,EAAA;AACvB,QAAA,IAAI,CAAC,eAAe,GAAG,KAAK,CAAA;AAC5B,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;;AAGnB,QAAA,qBAAqB,CACnB,IAAI,CAAC,SAAS,EACd,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EACjG,IAAI,CACL,CAAA;KACF;IAED,OAAO,GAAA;AACL,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;AAEpB,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;AAC5B,YAAA,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;AACxC,SAAA;AAED,QAAA,qBAAqB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,kBAAkB,CAAC,CAAA;QAEnF,IAAI,CAAC,UAAU,EAAE,CAAA;QAEjB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAA;QACzD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAA;QAEvD,IAAI,CAAC,kBAAkB,EAAE,CAAA;AAEzB,QAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAA;AAClE,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAA;AAExB,QAAA,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YACjC,OAAM;AACP,SAAA;QAED,MAAM,CAAC,mBAAmB,CAAC,cAAc,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAA;KACnE;AAED,IAAA,uBAAuB,CAAC,MAAc,EAAA;QACpC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,EAAE,MAAM,EAAE,CAAC,CAAA;AAC7C,QAAA,IAAI,CAAC,eAAe,GAAG,KAAK,CAAA;QAC5B,IAAI,CAAC,UAAU,EAAE,CAAA;AACjB,QAAA,IAAI,CAAC,MAAM,GAAGlB,uBAAe,CAAC,YAAY,CAAA;KAC3C;AAED,IAAA,oBAAoB,CAAC,KAAa,EAAA;AAChC,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAA;AAC3B,QAAA,IAAI,CAAC,eAAe,GAAG,KAAK,CAAA;AAE5B,QAAA,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;QAC1B,IAAI,CAAC,SAAS,EAAE,CAAA;KACjB;AAED,IAAA,IAAI,gBAAgB,GAAA;AAClB,QAAA,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAA;KACpC;AAID,IAAA,0BAA0B,CAAC,IAAiB,EAAA;AAC1C,QAAA,IAAI,CAAC,GAAG,CAAC,MAAK;AACZ,YAAA,MAAM,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAA;AAEzC,YAAA,MAAM,YAAY,GAAG,OAAO,CAAC,aAAa,EAAE,CAAA;AAE5C,YAAA,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC,CAAA;YAEpC,IAAI,eAAe,CAAC,OAAO,CAAC;iBACzB,cAAc,CAAC,IAAI,CAAC;AACpB,iBAAA,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;AACvB,SAAC,CAAC,CAAA;KACH;IAED,2BAA2B,GAAA;AACzB,QAAA,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE;YACtCmB,SAAY,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,+BAA+B,CAAC,CAAA;AACzE,YAAA,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAA;AACzC,SAAA;AAED,QAAA,IAAI,CAAC,GAAG,CAAC,MAAK;AACZ,YAAA,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;AAC/D,YAAA,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;AAC/D,YAAA,IAAI,CAAC,SAAS,CAAC,qBAAqB,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;AAClE,YAAA,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;AAC7H,SAAC,CAAC,CAAA;KACH;IAED,0BAA0B,GAAA;;AAExB,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B,SAAS,EAAE,IAAI,CAAC,SAAS;AACzB,YAAA,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACjC,MAAM,EAAE,IAAI,GAAG,EAAE;AACjB,YAAA,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI;SACtC,EAAE,IAAI,CAAC,CAAA;QAER,IAAI,IAAI,CAAC,4BAA4B,EAAE;YACrCC,WAAc,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,+BAA+B,CAAC,CAAA;AAC3E,YAAA,IAAI,CAAC,4BAA4B,GAAG,KAAK,CAAA;AAC1C,SAAA;KACF;IAED,SAAS,CAAC,OAAqC,EAAE,IAAU,EAAA;AACzD,QAAA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;YACjC,OAAM;AACP,SAAA;AAED,QAAA,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE;YACtC,OAAM;AACP,SAAA;AAED,QAAA,IAAI,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAA;KAClE;IAED,iBAAiB,CAAC,GAAW,EAAE,KAAU,EAAA;QACvC,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;KAC9C;AACF;;AChfK,MAAO,6BAA8B,SAAQ,2BAA2B,CAAA;AAC5E,IAAA,WAAA,CAAY,aAAyD,EAAA;AACnE,QAAA,KAAK,CAAC,EAAE,GAAG,aAAyD,EAAE,GAAG,EAAE,CAAS,MAAA,EAAA,aAAa,CAAC,KAAK,CAAsB,oBAAA,CAAA,EAAE,CAAC,CAAA;KACjI;AACF;;ACDK,MAAO,oBAAqB,SAAQ,kBAAkB,CAAA;AAC1D,IAAA,WAAA,CAAY,aAAgD,EAAA;AAC1D,QAAA,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE;AACpC,YAAA,aAAa,CAAC,iBAAiB,GAAG,IAAI,6BAA6B,CAAC,EAAE,KAAK,EAAE,aAAa,CAAC,KAAK,EAAE,CAAC,CAAA;AACpG,SAAA;AAED,QAAA,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;AACxB,YAAA,aAAa,CAAC,KAAK,GAAG,SAAS,CAAA;AAChC,SAAA;QAED,KAAK,CAAC,aAAgD,CAAC,CAAA;KACxD;AACF;;;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.esm.js b/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.esm.js
index e0b6d8d..0e4dfc7 100644
--- a/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.esm.js
+++ b/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.esm.js
@@ -1,5 +1,5 @@
+import { WsReadyStates, Unauthorized, Forbidden, MessageTooBig, readAuthMessage, writeAuthentication, awarenessStatesToArray } from '@hocuspocus/common';
 import * as Y from 'yjs';
-import { readAuthMessage, writeAuthentication, WsReadyStates, Unauthorized, Forbidden, MessageTooBig, awarenessStatesToArray } from '@hocuspocus/common';
 import { retry } from '@lifeomic/attempt';
 
 /**
@@ -50,6 +50,22 @@ const setIfUndefined = (map, key, createT) => {
 
 const create$1 = () => new Set();
 
+/**
+ * Utility module to work with Arrays.
+ *
+ * @module array
+ */
+
+/**
+ * Transforms something array-like to an actual Array.
+ *
+ * @function
+ * @template T
+ * @param {ArrayLike<T>|Iterable<T>} arraylike
+ * @return {T}
+ */
+const from = Array.from;
+
 /**
  * Utility module to work with strings.
  *
@@ -212,22 +228,6 @@ const onChange = eventHandler => usePolyfill || addEventListener('storage', /**
 /* c8 ignore next */
 const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler));
 
-/**
- * Utility module to work with Arrays.
- *
- * @module array
- */
-
-/**
- * Transforms something array-like to an actual Array.
- *
- * @function
- * @template T
- * @param {ArrayLike<T>|Iterable<T>} arraylike
- * @return {T}
- */
-const from = Array.from;
-
 /**
  * Utility functions for working with EcmaScript objects.
  *
@@ -375,7 +375,6 @@ const equalityDeep = (a, b) => {
  */
 // @ts-ignore
 const isOneOf = (value, options) => options.includes(value);
-/* c8 ignore stop */
 
 /**
  * Isomorphic module to work access the environment (query params, env variables).
@@ -507,7 +506,9 @@ const min = (a, b) => a < b ? a : b;
 const max = (a, b) => a > b ? a : b;
 
 /* eslint-env browser */
+const BIT7 = 64;
 const BIT8 = 128;
+const BITS6 = 63;
 const BITS7 = 127;
 
 /**
@@ -865,6 +866,44 @@ const readVarUint = decoder => {
   throw errorUnexpectedEndOfArray
 };
 
+/**
+ * Read signed integer (32bit) with variable length.
+ * 1/8th of the storage is used as encoding overhead.
+ *  * numbers < 2^7 is stored in one bytlength
+ *  * numbers < 2^14 is stored in two bylength
+ * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.
+ *
+ * @function
+ * @param {Decoder} decoder
+ * @return {number} An unsigned integer.length
+ */
+const readVarInt = decoder => {
+  let r = decoder.arr[decoder.pos++];
+  let num = r & BITS6;
+  let mult = 64;
+  const sign = (r & BIT7) > 0 ? -1 : 1;
+  if ((r & BIT8) === 0) {
+    // don't continue reading
+    return sign * num
+  }
+  const len = decoder.arr.length;
+  while (decoder.pos < len) {
+    r = decoder.arr[decoder.pos++];
+    // num = num | ((r & binary.BITS7) << len)
+    num = num + (r & BITS7) * mult;
+    mult *= 128;
+    if (r < BIT8) {
+      return sign * num
+    }
+    /* c8 ignore start */
+    if (num > MAX_SAFE_INTEGER) {
+      throw errorIntegerOutOfRange
+    }
+    /* c8 ignore stop */
+  }
+  throw errorUnexpectedEndOfArray
+};
+
 /**
  * We don't test this function anymore as we use native decoding/encoding by default now.
  * Better not modify this anymore..
@@ -1112,6 +1151,50 @@ const publish = (room, data, origin = null) => {
   c.subs.forEach(sub => sub(data, origin));
 };
 
+/**
+ * Mutual exclude for JavaScript.
+ *
+ * @module mutex
+ */
+
+/**
+ * @callback mutex
+ * @param {function():void} cb Only executed when this mutex is not in the current stack
+ * @param {function():void} [elseCb] Executed when this mutex is in the current stack
+ */
+
+/**
+ * Creates a mutual exclude function with the following property:
+ *
+ * ```js
+ * const mutex = createMutex()
+ * mutex(() => {
+ *   // This function is immediately executed
+ *   mutex(() => {
+ *     // This function is not executed, as the mutex is already active.
+ *   })
+ * })
+ * ```
+ *
+ * @return {mutex} A mutual exclude function
+ * @public
+ */
+const createMutex = () => {
+  let token = true;
+  return (f, g) => {
+    if (token) {
+      token = false;
+      try {
+        f();
+      } finally {
+        token = true;
+      }
+    } else if (g !== undefined) {
+      g();
+    }
+  }
+};
+
 /**
  * Utility module to work with time.
  *
@@ -1462,50 +1545,6 @@ const applyAwarenessUpdate = (awareness, update, origin) => {
   }
 };
 
-/**
- * Mutual exclude for JavaScript.
- *
- * @module mutex
- */
-
-/**
- * @callback mutex
- * @param {function():void} cb Only executed when this mutex is not in the current stack
- * @param {function():void} [elseCb] Executed when this mutex is in the current stack
- */
-
-/**
- * Creates a mutual exclude function with the following property:
- *
- * ```js
- * const mutex = createMutex()
- * mutex(() => {
- *   // This function is immediately executed
- *   mutex(() => {
- *     // This function is not executed, as the mutex is already active.
- *   })
- * })
- * ```
- *
- * @return {mutex} A mutual exclude function
- * @public
- */
-const createMutex = () => {
-  let token = true;
-  return (f, g) => {
-    if (token) {
-      token = false;
-      try {
-        f();
-      } finally {
-        token = true;
-      }
-    } else if (g !== undefined) {
-      g();
-    }
-  }
-};
-
 class EventEmitter {
     constructor() {
         this.callbacks = {};
@@ -1541,712 +1580,690 @@ class EventEmitter {
     }
 }
 
-class IncomingMessage {
-    constructor(data) {
-        this.data = data;
-        this.encoder = createEncoder();
-        this.decoder = createDecoder(new Uint8Array(this.data));
-    }
-    readVarUint() {
-        return readVarUint(this.decoder);
-    }
-    readVarString() {
-        return readVarString(this.decoder);
-    }
-    readVarUint8Array() {
-        return readVarUint8Array(this.decoder);
-    }
-    writeVarUint(type) {
-        return writeVarUint(this.encoder, type);
-    }
-    writeVarString(string) {
-        return writeVarString(this.encoder, string);
-    }
-    writeVarUint8Array(data) {
-        return writeVarUint8Array(this.encoder, data);
-    }
-    length() {
-        return length(this.encoder);
-    }
-}
-
-/**
- * @module sync-protocol
- */
-
-/**
- * @typedef {Map<number, number>} StateMap
- */
-
-/**
- * Core Yjs defines two message types:
- * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.
- * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it
- *   received all information from the remote client.
- *
- * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection
- * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both
- * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.
- *
- * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.
- * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies
- * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the
- * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can
- * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.
- * Therefore it is necesarry that the client initiates the sync.
- *
- * Construction of a message:
- * [messageType : varUint, message definition..]
- *
- * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!
- *
- * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)
- */
-
-const messageYjsSyncStep1 = 0;
-const messageYjsSyncStep2 = 1;
-const messageYjsUpdate = 2;
-
 /**
- * Create a sync step 1 message based on the state of the current shared document.
+ * Utility module to work with urls.
  *
- * @param {encoding.Encoder} encoder
- * @param {Y.Doc} doc
+ * @module url
  */
-const writeSyncStep1 = (encoder, doc) => {
-  writeVarUint(encoder, messageYjsSyncStep1);
-  const sv = Y.encodeStateVector(doc);
-  writeVarUint8Array(encoder, sv);
-};
 
 /**
- * @param {encoding.Encoder} encoder
- * @param {Y.Doc} doc
- * @param {Uint8Array} [encodedStateVector]
+ * @param {Object<string,string>} params
+ * @return {string}
  */
-const writeSyncStep2 = (encoder, doc, encodedStateVector) => {
-  writeVarUint(encoder, messageYjsSyncStep2);
-  writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector));
-};
+const encodeQueryParams = params =>
+  map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&');
 
-/**
- * Read SyncStep1 message and reply with SyncStep2.
- *
- * @param {decoding.Decoder} decoder The reply to the received message
- * @param {encoding.Encoder} encoder The received message
- * @param {Y.Doc} doc
- */
-const readSyncStep1 = (decoder, encoder, doc) =>
-  writeSyncStep2(encoder, doc, readVarUint8Array(decoder));
+var MessageType;
+(function (MessageType) {
+    MessageType[MessageType["Sync"] = 0] = "Sync";
+    MessageType[MessageType["Awareness"] = 1] = "Awareness";
+    MessageType[MessageType["Auth"] = 2] = "Auth";
+    MessageType[MessageType["QueryAwareness"] = 3] = "QueryAwareness";
+    MessageType[MessageType["Stateless"] = 5] = "Stateless";
+    MessageType[MessageType["CLOSE"] = 7] = "CLOSE";
+    MessageType[MessageType["SyncStatus"] = 8] = "SyncStatus";
+})(MessageType || (MessageType = {}));
+var WebSocketStatus;
+(function (WebSocketStatus) {
+    WebSocketStatus["Connecting"] = "connecting";
+    WebSocketStatus["Connected"] = "connected";
+    WebSocketStatus["Disconnected"] = "disconnected";
+})(WebSocketStatus || (WebSocketStatus = {}));
 
-/**
- * Read and apply Structs and then DeleteStore to a y instance.
- *
- * @param {decoding.Decoder} decoder
- * @param {Y.Doc} doc
- * @param {any} transactionOrigin
- */
-const readSyncStep2 = (decoder, doc, transactionOrigin) => {
-  try {
-    Y.applyUpdate(doc, readVarUint8Array(decoder), transactionOrigin);
-  } catch (error) {
-    // This catches errors that are thrown by event handlers
-    console.error('Caught error while handling a Yjs update', error);
-  }
-};
-
-/**
- * @param {encoding.Encoder} encoder
- * @param {Uint8Array} update
- */
-const writeUpdate = (encoder, update) => {
-  writeVarUint(encoder, messageYjsUpdate);
-  writeVarUint8Array(encoder, update);
-};
-
-/**
- * Read and apply Structs and then DeleteStore to a y instance.
- *
- * @param {decoding.Decoder} decoder
- * @param {Y.Doc} doc
- * @param {any} transactionOrigin
- */
-const readUpdate = readSyncStep2;
-
-/**
- * @param {decoding.Decoder} decoder A message received from another client
- * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.
- * @param {Y.Doc} doc
- * @param {any} transactionOrigin
- */
-const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {
-  const messageType = readVarUint(decoder);
-  switch (messageType) {
-    case messageYjsSyncStep1:
-      readSyncStep1(decoder, encoder, doc);
-      break
-    case messageYjsSyncStep2:
-      readSyncStep2(decoder, doc, transactionOrigin);
-      break
-    case messageYjsUpdate:
-      readUpdate(decoder, doc, transactionOrigin);
-      break
-    default:
-      throw new Error('Unknown message type')
-  }
-  return messageType
-};
-
-var MessageType;
-(function (MessageType) {
-    MessageType[MessageType["Sync"] = 0] = "Sync";
-    MessageType[MessageType["Awareness"] = 1] = "Awareness";
-    MessageType[MessageType["Auth"] = 2] = "Auth";
-    MessageType[MessageType["QueryAwareness"] = 3] = "QueryAwareness";
-    MessageType[MessageType["Stateless"] = 5] = "Stateless";
-    MessageType[MessageType["CLOSE"] = 7] = "CLOSE";
-})(MessageType || (MessageType = {}));
-var WebSocketStatus;
-(function (WebSocketStatus) {
-    WebSocketStatus["Connecting"] = "connecting";
-    WebSocketStatus["Connected"] = "connected";
-    WebSocketStatus["Disconnected"] = "disconnected";
-})(WebSocketStatus || (WebSocketStatus = {}));
-
-class OutgoingMessage {
-    constructor() {
-        this.encoder = createEncoder();
+class HocuspocusProviderWebsocket extends EventEmitter {
+    constructor(configuration) {
+        super();
+        this.messageQueue = [];
+        this.configuration = {
+            url: '',
+            // @ts-ignore
+            document: undefined,
+            // @ts-ignore
+            awareness: undefined,
+            WebSocketPolyfill: undefined,
+            parameters: {},
+            connect: true,
+            broadcast: true,
+            forceSyncInterval: false,
+            // TODO: this should depend on awareness.outdatedTime
+            messageReconnectTimeout: 30000,
+            // 1 second
+            delay: 1000,
+            // instant
+            initialDelay: 0,
+            // double the delay each time
+            factor: 2,
+            // unlimited retries
+            maxAttempts: 0,
+            // wait at least 1 second
+            minDelay: 1000,
+            // at least every 30 seconds
+            maxDelay: 30000,
+            // randomize
+            jitter: true,
+            // retry forever
+            timeout: 0,
+            onOpen: () => null,
+            onConnect: () => null,
+            onMessage: () => null,
+            onOutgoingMessage: () => null,
+            onStatus: () => null,
+            onDisconnect: () => null,
+            onClose: () => null,
+            onDestroy: () => null,
+            onAwarenessUpdate: () => null,
+            onAwarenessChange: () => null,
+            quiet: false,
+        };
+        this.subscribedToBroadcastChannel = false;
+        this.webSocket = null;
+        this.shouldConnect = true;
+        this.status = WebSocketStatus.Disconnected;
+        this.lastMessageReceived = 0;
+        this.mux = createMutex();
+        this.intervals = {
+            forceSync: null,
+            connectionChecker: null,
+        };
+        this.connectionAttempt = null;
+        this.receivedOnOpenPayload = undefined;
+        this.receivedOnStatusPayload = undefined;
+        this.boundConnect = this.connect.bind(this);
+        this.setConfiguration(configuration);
+        this.configuration.WebSocketPolyfill = configuration.WebSocketPolyfill ? configuration.WebSocketPolyfill : WebSocket;
+        this.on('open', this.configuration.onOpen);
+        this.on('open', this.onOpen.bind(this));
+        this.on('connect', this.configuration.onConnect);
+        this.on('message', this.configuration.onMessage);
+        this.on('outgoingMessage', this.configuration.onOutgoingMessage);
+        this.on('status', this.configuration.onStatus);
+        this.on('status', this.onStatus.bind(this));
+        this.on('disconnect', this.configuration.onDisconnect);
+        this.on('close', this.configuration.onClose);
+        this.on('destroy', this.configuration.onDestroy);
+        this.on('awarenessUpdate', this.configuration.onAwarenessUpdate);
+        this.on('awarenessChange', this.configuration.onAwarenessChange);
+        this.on('close', this.onClose.bind(this));
+        this.on('message', this.onMessage.bind(this));
+        this.registerEventListeners();
+        this.intervals.connectionChecker = setInterval(this.checkConnection.bind(this), this.configuration.messageReconnectTimeout / 10);
+        if (typeof configuration.connect !== 'undefined') {
+            this.shouldConnect = configuration.connect;
+        }
+        if (!this.shouldConnect) {
+            return;
+        }
+        this.connect();
     }
-    get(args) {
-        return args.encoder;
+    async onOpen(event) {
+        this.receivedOnOpenPayload = event;
     }
-    toUint8Array() {
-        return toUint8Array(this.encoder);
+    async onStatus(data) {
+        this.receivedOnStatusPayload = data;
     }
-}
-
-class MessageReceiver {
-    constructor(message) {
-        this.broadcasted = false;
-        this.message = message;
+    attach(provider) {
+        if (this.receivedOnOpenPayload) {
+            provider.onOpen(this.receivedOnOpenPayload);
+        }
+        if (this.receivedOnStatusPayload) {
+            provider.onStatus(this.receivedOnStatusPayload);
+        }
     }
-    setBroadcasted(value) {
-        this.broadcasted = value;
-        return this;
+    detach(provider) {
+        // tell the server to remove the listener
     }
-    apply(provider, emitSynced = true) {
-        const { message } = this;
-        const type = message.readVarUint();
-        const emptyMessageLength = message.length();
-        switch (type) {
-            case MessageType.Sync:
-                this.applySyncMessage(provider, emitSynced);
-                break;
-            case MessageType.Awareness:
-                this.applyAwarenessMessage(provider);
-                break;
-            case MessageType.Auth:
-                this.applyAuthMessage(provider);
-                break;
-            case MessageType.QueryAwareness:
-                this.applyQueryAwarenessMessage(provider);
-                break;
-            case MessageType.Stateless:
-                provider.receiveStateless(readVarString(message.decoder));
-                break;
-            default:
-                throw new Error(`Can’t apply message of unknown type: ${type}`);
+    setConfiguration(configuration = {}) {
+        this.configuration = { ...this.configuration, ...configuration };
+    }
+    async connect() {
+        if (this.status === WebSocketStatus.Connected) {
+            return;
         }
-        // Reply
-        if (message.length() > emptyMessageLength + 1) { // length of documentName (considered in emptyMessageLength plus length of yjs sync type, set in applySyncMessage)
-            if (this.broadcasted) {
-                // TODO: Some weird TypeScript error
-                // @ts-ignore
-                provider.broadcast(OutgoingMessage, { encoder: message.encoder });
+        // Always cancel any previously initiated connection retryer instances
+        if (this.cancelWebsocketRetry) {
+            this.cancelWebsocketRetry();
+            this.cancelWebsocketRetry = undefined;
+        }
+        this.shouldConnect = true;
+        const abortableRetry = () => {
+            let cancelAttempt = false;
+            const retryPromise = retry(this.createWebSocketConnection.bind(this), {
+                delay: this.configuration.delay,
+                initialDelay: this.configuration.initialDelay,
+                factor: this.configuration.factor,
+                maxAttempts: this.configuration.maxAttempts,
+                minDelay: this.configuration.minDelay,
+                maxDelay: this.configuration.maxDelay,
+                jitter: this.configuration.jitter,
+                timeout: this.configuration.timeout,
+                beforeAttempt: context => {
+                    if (!this.shouldConnect || cancelAttempt) {
+                        context.abort();
+                    }
+                },
+            }).catch((error) => {
+                // If we aborted the connection attempt then don’t throw an error
+                // ref: https://github.com/lifeomic/attempt/blob/master/src/index.ts#L136
+                if (error && error.code !== 'ATTEMPT_ABORTED') {
+                    throw error;
+                }
+            });
+            return {
+                retryPromise,
+                cancelFunc: () => {
+                    cancelAttempt = true;
+                },
+            };
+        };
+        const { retryPromise, cancelFunc } = abortableRetry();
+        this.cancelWebsocketRetry = cancelFunc;
+        return retryPromise;
+    }
+    createWebSocketConnection() {
+        return new Promise((resolve, reject) => {
+            if (this.webSocket) {
+                this.messageQueue = [];
+                this.webSocket.close();
+                this.webSocket = null;
+            }
+            // Init the WebSocket connection
+            const ws = new this.configuration.WebSocketPolyfill(this.url);
+            ws.binaryType = 'arraybuffer';
+            ws.onmessage = (payload) => this.emit('message', payload);
+            ws.onclose = (payload) => this.emit('close', { event: payload });
+            ws.onopen = (payload) => this.emit('open', payload);
+            ws.onerror = (err) => {
+                reject(err);
+            };
+            this.webSocket = ws;
+            // Reset the status
+            this.status = WebSocketStatus.Connecting;
+            this.emit('status', { status: WebSocketStatus.Connecting });
+            // Store resolve/reject for later use
+            this.connectionAttempt = {
+                resolve,
+                reject,
+            };
+        });
+    }
+    onMessage(event) {
+        this.resolveConnectionAttempt();
+    }
+    resolveConnectionAttempt() {
+        if (this.connectionAttempt) {
+            this.connectionAttempt.resolve();
+            this.connectionAttempt = null;
+            this.status = WebSocketStatus.Connected;
+            this.emit('status', { status: WebSocketStatus.Connected });
+            this.emit('connect');
+            this.messageQueue.forEach(message => this.send(message));
+            this.messageQueue = [];
+        }
+    }
+    stopConnectionAttempt() {
+        this.connectionAttempt = null;
+    }
+    rejectConnectionAttempt() {
+        var _a;
+        (_a = this.connectionAttempt) === null || _a === void 0 ? void 0 : _a.reject();
+        this.connectionAttempt = null;
+    }
+    checkConnection() {
+        var _a;
+        // Don’t check the connection when it’s not even established
+        if (this.status !== WebSocketStatus.Connected) {
+            return;
+        }
+        // Don’t close then connection while waiting for the first message
+        if (!this.lastMessageReceived) {
+            return;
+        }
+        // Don’t close the connection when a message was received recently
+        if (this.configuration.messageReconnectTimeout >= getUnixTime() - this.lastMessageReceived) {
+            return;
+        }
+        // No message received in a long time, not even your own
+        // Awareness updates, which are updated every 15 seconds.
+        (_a = this.webSocket) === null || _a === void 0 ? void 0 : _a.close();
+        this.messageQueue = [];
+    }
+    registerEventListeners() {
+        if (typeof window === 'undefined') {
+            return;
+        }
+        window.addEventListener('online', this.boundConnect);
+    }
+    // Ensure that the URL always ends with /
+    get serverUrl() {
+        while (this.configuration.url[this.configuration.url.length - 1] === '/') {
+            return this.configuration.url.slice(0, this.configuration.url.length - 1);
+        }
+        return this.configuration.url;
+    }
+    get url() {
+        const encodedParams = encodeQueryParams(this.configuration.parameters);
+        return `${this.serverUrl}${encodedParams.length === 0 ? '' : `?${encodedParams}`}`;
+    }
+    disconnect() {
+        this.shouldConnect = false;
+        if (this.webSocket === null) {
+            return;
+        }
+        try {
+            this.webSocket.close();
+            this.messageQueue = [];
+        }
+        catch {
+            //
+        }
+    }
+    send(message) {
+        var _a;
+        if (((_a = this.webSocket) === null || _a === void 0 ? void 0 : _a.readyState) === WsReadyStates.Open) {
+            this.webSocket.send(message);
+        }
+        else {
+            this.messageQueue.push(message);
+        }
+    }
+    onClose({ event }) {
+        this.webSocket = null;
+        if (this.status === WebSocketStatus.Connected) {
+            this.status = WebSocketStatus.Disconnected;
+            this.emit('status', { status: WebSocketStatus.Disconnected });
+            this.emit('disconnect', { event });
+        }
+        if (event.code === Unauthorized.code) {
+            if (event.reason === Unauthorized.reason) {
+                console.warn('[HocuspocusProvider] An authentication token is required, but you didn’t send one. Try adding a `token` to your HocuspocusProvider configuration. Won’t try again.');
             }
             else {
-                // TODO: Some weird TypeScript error
-                // @ts-ignore
-                provider.send(OutgoingMessage, { encoder: message.encoder });
+                console.warn(`[HocuspocusProvider] Connection closed with status Unauthorized: ${event.reason}`);
             }
+            this.shouldConnect = false;
+        }
+        if (event.code === Forbidden.code) {
+            if (!this.configuration.quiet) {
+                console.warn('[HocuspocusProvider] The provided authentication token isn’t allowed to connect to this server. Will try again.');
+                return; // TODO REMOVE ME
+            }
+        }
+        if (event.code === MessageTooBig.code) {
+            console.warn(`[HocuspocusProvider] Connection closed with status MessageTooBig: ${event.reason}`);
+            this.shouldConnect = false;
+        }
+        if (this.connectionAttempt) {
+            // That connection attempt failed.
+            this.rejectConnectionAttempt();
+        }
+        else if (this.shouldConnect) {
+            // The connection was closed by the server. Let’s just try again.
+            this.connect();
+        }
+        // If we’ll reconnect, we’re done for now.
+        if (this.shouldConnect) {
+            return;
+        }
+        // The status is set correctly already.
+        if (this.status === WebSocketStatus.Disconnected) {
+            return;
         }
+        // Let’s update the connection status.
+        this.status = WebSocketStatus.Disconnected;
+        this.emit('status', { status: WebSocketStatus.Disconnected });
+        this.emit('disconnect', { event });
     }
-    applySyncMessage(provider, emitSynced) {
-        const { message } = this;
-        message.writeVarUint(MessageType.Sync);
-        // Apply update
-        const syncMessageType = readSyncMessage(message.decoder, message.encoder, provider.document, provider);
-        // Synced once we receive Step2
-        if (emitSynced && syncMessageType === messageYjsSyncStep2) {
-            provider.synced = true;
+    destroy() {
+        this.emit('destroy');
+        if (this.intervals.forceSync) {
+            clearInterval(this.intervals.forceSync);
         }
-        if (syncMessageType === messageYjsUpdate || syncMessageType === messageYjsSyncStep2) {
-            if (provider.unsyncedChanges > 0) {
-                provider.updateUnsyncedChanges(-1);
-            }
+        clearInterval(this.intervals.connectionChecker);
+        // If there is still a connection attempt outstanding then we should stop
+        // it before calling disconnect, otherwise it will be rejected in the onClose
+        // handler and trigger a retry
+        this.stopConnectionAttempt();
+        this.disconnect();
+        this.removeAllListeners();
+        if (typeof window === 'undefined') {
+            return;
         }
-    }
-    applyAwarenessMessage(provider) {
-        const { message } = this;
-        applyAwarenessUpdate(provider.awareness, message.readVarUint8Array(), provider);
-    }
-    applyAuthMessage(provider) {
-        const { message } = this;
-        readAuthMessage(message.decoder, provider.permissionDeniedHandler.bind(provider), provider.authenticatedHandler.bind(provider));
-    }
-    applyQueryAwarenessMessage(provider) {
-        const { message } = this;
-        message.writeVarUint(MessageType.Awareness);
-        message.writeVarUint8Array(encodeAwarenessUpdate(provider.awareness, Array.from(provider.awareness.getStates().keys())));
+        window.removeEventListener('online', this.boundConnect);
     }
 }
 
-class MessageSender {
-    constructor(Message, args = {}) {
-        this.message = new Message();
-        this.encoder = this.message.get(args);
+class IncomingMessage {
+    constructor(data) {
+        this.data = data;
+        this.encoder = createEncoder();
+        this.decoder = createDecoder(new Uint8Array(this.data));
     }
-    create() {
-        return toUint8Array(this.encoder);
+    readVarUint() {
+        return readVarUint(this.decoder);
     }
-    send(webSocket) {
-        webSocket === null || webSocket === void 0 ? void 0 : webSocket.send(this.create());
+    readVarString() {
+        return readVarString(this.decoder);
     }
-    broadcast(channel) {
-        publish(channel, this.create());
+    readVarUint8Array() {
+        return readVarUint8Array(this.decoder);
     }
-}
-
-class SyncStepOneMessage extends OutgoingMessage {
-    constructor() {
-        super(...arguments);
-        this.type = MessageType.Sync;
-        this.description = 'First sync step';
+    writeVarUint(type) {
+        return writeVarUint(this.encoder, type);
     }
-    get(args) {
-        if (typeof args.document === 'undefined') {
-            throw new Error('The sync step one message requires document as an argument');
-        }
-        writeVarString(this.encoder, args.documentName);
-        writeVarUint(this.encoder, this.type);
-        writeSyncStep1(this.encoder, args.document);
-        return this.encoder;
+    writeVarString(string) {
+        return writeVarString(this.encoder, string);
     }
-}
-
-class SyncStepTwoMessage extends OutgoingMessage {
-    constructor() {
-        super(...arguments);
-        this.type = MessageType.Sync;
-        this.description = 'Second sync step';
+    writeVarUint8Array(data) {
+        return writeVarUint8Array(this.encoder, data);
     }
-    get(args) {
-        if (typeof args.document === 'undefined') {
-            throw new Error('The sync step two message requires document as an argument');
-        }
-        writeVarString(this.encoder, args.documentName);
-        writeVarUint(this.encoder, this.type);
-        writeSyncStep2(this.encoder, args.document);
-        return this.encoder;
+    length() {
+        return length(this.encoder);
     }
 }
 
-class QueryAwarenessMessage extends OutgoingMessage {
-    constructor() {
-        super(...arguments);
-        this.type = MessageType.QueryAwareness;
-        this.description = 'Queries awareness states';
-    }
-    get(args) {
-        console.log('queryAwareness: writing string docName', args.documentName);
-        console.log(this.encoder.cpos);
-        writeVarString(this.encoder, args.documentName);
-        writeVarUint(this.encoder, this.type);
-        return this.encoder;
-    }
-}
+/**
+ * @module sync-protocol
+ */
 
-class AuthenticationMessage extends OutgoingMessage {
-    constructor() {
-        super(...arguments);
-        this.type = MessageType.Auth;
-        this.description = 'Authentication';
-    }
-    get(args) {
-        if (typeof args.token === 'undefined') {
-            throw new Error('The authentication message requires `token` as an argument.');
-        }
-        writeVarString(this.encoder, args.documentName);
-        writeVarUint(this.encoder, this.type);
-        writeAuthentication(this.encoder, args.token);
-        return this.encoder;
-    }
-}
+/**
+ * @typedef {Map<number, number>} StateMap
+ */
 
-class AwarenessMessage extends OutgoingMessage {
-    constructor() {
-        super(...arguments);
-        this.type = MessageType.Awareness;
-        this.description = 'Awareness states update';
-    }
-    get(args) {
-        if (typeof args.awareness === 'undefined') {
-            throw new Error('The awareness message requires awareness as an argument');
-        }
-        if (typeof args.clients === 'undefined') {
-            throw new Error('The awareness message requires clients as an argument');
-        }
-        writeVarString(this.encoder, args.documentName);
-        writeVarUint(this.encoder, this.type);
-        let awarenessUpdate;
-        if (args.states === undefined) {
-            awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients);
-        }
-        else {
-            awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients, args.states);
-        }
-        writeVarUint8Array(this.encoder, awarenessUpdate);
-        return this.encoder;
-    }
-}
+/**
+ * Core Yjs defines two message types:
+ * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.
+ * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it
+ *   received all information from the remote client.
+ *
+ * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection
+ * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both
+ * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.
+ *
+ * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.
+ * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies
+ * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the
+ * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can
+ * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.
+ * Therefore it is necesarry that the client initiates the sync.
+ *
+ * Construction of a message:
+ * [messageType : varUint, message definition..]
+ *
+ * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!
+ *
+ * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)
+ */
 
-class UpdateMessage extends OutgoingMessage {
-    constructor() {
-        super(...arguments);
-        this.type = MessageType.Sync;
-        this.description = 'A document update';
-    }
-    get(args) {
-        writeVarString(this.encoder, args.documentName);
-        writeVarUint(this.encoder, this.type);
-        writeUpdate(this.encoder, args.update);
-        return this.encoder;
-    }
-}
+const messageYjsSyncStep1 = 0;
+const messageYjsSyncStep2 = 1;
+const messageYjsUpdate = 2;
+
+/**
+ * Create a sync step 1 message based on the state of the current shared document.
+ *
+ * @param {encoding.Encoder} encoder
+ * @param {Y.Doc} doc
+ */
+const writeSyncStep1 = (encoder, doc) => {
+  writeVarUint(encoder, messageYjsSyncStep1);
+  const sv = Y.encodeStateVector(doc);
+  writeVarUint8Array(encoder, sv);
+};
+
+/**
+ * @param {encoding.Encoder} encoder
+ * @param {Y.Doc} doc
+ * @param {Uint8Array} [encodedStateVector]
+ */
+const writeSyncStep2 = (encoder, doc, encodedStateVector) => {
+  writeVarUint(encoder, messageYjsSyncStep2);
+  writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector));
+};
+
+/**
+ * Read SyncStep1 message and reply with SyncStep2.
+ *
+ * @param {decoding.Decoder} decoder The reply to the received message
+ * @param {encoding.Encoder} encoder The received message
+ * @param {Y.Doc} doc
+ */
+const readSyncStep1 = (decoder, encoder, doc) =>
+  writeSyncStep2(encoder, doc, readVarUint8Array(decoder));
+
+/**
+ * Read and apply Structs and then DeleteStore to a y instance.
+ *
+ * @param {decoding.Decoder} decoder
+ * @param {Y.Doc} doc
+ * @param {any} transactionOrigin
+ */
+const readSyncStep2 = (decoder, doc, transactionOrigin) => {
+  try {
+    Y.applyUpdate(doc, readVarUint8Array(decoder), transactionOrigin);
+  } catch (error) {
+    // This catches errors that are thrown by event handlers
+    console.error('Caught error while handling a Yjs update', error);
+  }
+};
+
+/**
+ * @param {encoding.Encoder} encoder
+ * @param {Uint8Array} update
+ */
+const writeUpdate = (encoder, update) => {
+  writeVarUint(encoder, messageYjsUpdate);
+  writeVarUint8Array(encoder, update);
+};
 
 /**
- * Utility module to work with urls.
+ * Read and apply Structs and then DeleteStore to a y instance.
  *
- * @module url
+ * @param {decoding.Decoder} decoder
+ * @param {Y.Doc} doc
+ * @param {any} transactionOrigin
  */
+const readUpdate = readSyncStep2;
 
 /**
- * @param {Object<string,string>} params
- * @return {string}
+ * @param {decoding.Decoder} decoder A message received from another client
+ * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.
+ * @param {Y.Doc} doc
+ * @param {any} transactionOrigin
  */
-const encodeQueryParams = params =>
-  map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&');
+const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {
+  const messageType = readVarUint(decoder);
+  switch (messageType) {
+    case messageYjsSyncStep1:
+      readSyncStep1(decoder, encoder, doc);
+      break
+    case messageYjsSyncStep2:
+      readSyncStep2(decoder, doc, transactionOrigin);
+      break
+    case messageYjsUpdate:
+      readUpdate(decoder, doc, transactionOrigin);
+      break
+    default:
+      throw new Error('Unknown message type')
+  }
+  return messageType
+};
 
-class HocuspocusProviderWebsocket extends EventEmitter {
-    constructor(configuration) {
-        super();
-        this.configuration = {
-            url: '',
-            // @ts-ignore
-            document: undefined,
-            // @ts-ignore
-            awareness: undefined,
-            WebSocketPolyfill: undefined,
-            parameters: {},
-            connect: true,
-            broadcast: true,
-            forceSyncInterval: false,
-            // TODO: this should depend on awareness.outdatedTime
-            messageReconnectTimeout: 30000,
-            // 1 second
-            delay: 1000,
-            // instant
-            initialDelay: 0,
-            // double the delay each time
-            factor: 2,
-            // unlimited retries
-            maxAttempts: 0,
-            // wait at least 1 second
-            minDelay: 1000,
-            // at least every 30 seconds
-            maxDelay: 30000,
-            // randomize
-            jitter: true,
-            // retry forever
-            timeout: 0,
-            onOpen: () => null,
-            onConnect: () => null,
-            onMessage: () => null,
-            onOutgoingMessage: () => null,
-            onStatus: () => null,
-            onDisconnect: () => null,
-            onClose: () => null,
-            onDestroy: () => null,
-            onAwarenessUpdate: () => null,
-            onAwarenessChange: () => null,
-            quiet: false,
-        };
-        this.subscribedToBroadcastChannel = false;
-        this.webSocket = null;
-        this.shouldConnect = true;
-        this.status = WebSocketStatus.Disconnected;
-        this.lastMessageReceived = 0;
-        this.mux = createMutex();
-        this.intervals = {
-            forceSync: null,
-            connectionChecker: null,
-        };
-        this.connectionAttempt = null;
-        this.receivedOnOpenPayload = undefined;
-        this.receivedOnStatusPayload = undefined;
-        this.boundConnect = this.connect.bind(this);
-        this.setConfiguration(configuration);
-        this.configuration.WebSocketPolyfill = configuration.WebSocketPolyfill ? configuration.WebSocketPolyfill : WebSocket;
-        this.on('open', this.configuration.onOpen);
-        this.on('open', this.onOpen.bind(this));
-        this.on('connect', this.configuration.onConnect);
-        this.on('message', this.configuration.onMessage);
-        this.on('outgoingMessage', this.configuration.onOutgoingMessage);
-        this.on('status', this.configuration.onStatus);
-        this.on('status', this.onStatus.bind(this));
-        this.on('disconnect', this.configuration.onDisconnect);
-        this.on('close', this.configuration.onClose);
-        this.on('destroy', this.configuration.onDestroy);
-        this.on('awarenessUpdate', this.configuration.onAwarenessUpdate);
-        this.on('awarenessChange', this.configuration.onAwarenessChange);
-        this.on('close', this.onClose.bind(this));
-        this.on('message', this.onMessage.bind(this));
-        this.registerEventListeners();
-        this.intervals.connectionChecker = setInterval(this.checkConnection.bind(this), this.configuration.messageReconnectTimeout / 10);
-        if (typeof configuration.connect !== 'undefined') {
-            this.shouldConnect = configuration.connect;
-        }
-        if (!this.shouldConnect) {
-            return;
-        }
-        this.connect();
-    }
-    async onOpen(event) {
-        this.receivedOnOpenPayload = event;
+class OutgoingMessage {
+    constructor() {
+        this.encoder = createEncoder();
     }
-    async onStatus(data) {
-        this.receivedOnStatusPayload = data;
+    get(args) {
+        return args.encoder;
     }
-    attach(provider) {
-        if (this.receivedOnOpenPayload) {
-            provider.onOpen(this.receivedOnOpenPayload);
-        }
-        if (this.receivedOnStatusPayload) {
-            provider.onStatus(this.receivedOnStatusPayload);
-        }
+    toUint8Array() {
+        return toUint8Array(this.encoder);
     }
-    detach(provider) {
-        // tell the server to remove the listener
+}
+
+class MessageReceiver {
+    constructor(message) {
+        this.broadcasted = false;
+        this.message = message;
     }
-    setConfiguration(configuration = {}) {
-        this.configuration = { ...this.configuration, ...configuration };
+    setBroadcasted(value) {
+        this.broadcasted = value;
+        return this;
     }
-    async connect() {
-        if (this.status === WebSocketStatus.Connected) {
-            return;
-        }
-        // Always cancel any previously initiated connection retryer instances
-        if (this.cancelWebsocketRetry) {
-            this.cancelWebsocketRetry();
-            this.cancelWebsocketRetry = undefined;
+    apply(provider, emitSynced) {
+        const { message } = this;
+        const type = message.readVarUint();
+        const emptyMessageLength = message.length();
+        switch (type) {
+            case MessageType.Sync:
+                this.applySyncMessage(provider, emitSynced);
+                break;
+            case MessageType.Awareness:
+                this.applyAwarenessMessage(provider);
+                break;
+            case MessageType.Auth:
+                this.applyAuthMessage(provider);
+                break;
+            case MessageType.QueryAwareness:
+                this.applyQueryAwarenessMessage(provider);
+                break;
+            case MessageType.Stateless:
+                provider.receiveStateless(readVarString(message.decoder));
+                break;
+            case MessageType.SyncStatus:
+                this.applySyncStatusMessage(provider, readVarInt(message.decoder) === 1);
+                break;
+            default:
+                throw new Error(`Can’t apply message of unknown type: ${type}`);
         }
-        this.shouldConnect = true;
-        const abortableRetry = () => {
-            let cancelAttempt = false;
-            const retryPromise = retry(this.createWebSocketConnection.bind(this), {
-                delay: this.configuration.delay,
-                initialDelay: this.configuration.initialDelay,
-                factor: this.configuration.factor,
-                maxAttempts: this.configuration.maxAttempts,
-                minDelay: this.configuration.minDelay,
-                maxDelay: this.configuration.maxDelay,
-                jitter: this.configuration.jitter,
-                timeout: this.configuration.timeout,
-                beforeAttempt: context => {
-                    if (!this.shouldConnect || cancelAttempt) {
-                        context.abort();
-                    }
-                },
-            }).catch((error) => {
-                // If we aborted the connection attempt then don’t throw an error
-                // ref: https://github.com/lifeomic/attempt/blob/master/src/index.ts#L136
-                if (error && error.code !== 'ATTEMPT_ABORTED') {
-                    throw error;
-                }
-            });
-            return {
-                retryPromise,
-                cancelFunc: () => {
-                    cancelAttempt = true;
-                },
-            };
-        };
-        const { retryPromise, cancelFunc } = abortableRetry();
-        this.cancelWebsocketRetry = cancelFunc;
-        return retryPromise;
-    }
-    createWebSocketConnection() {
-        return new Promise((resolve, reject) => {
-            if (this.webSocket) {
-                this.webSocket.close();
-                this.webSocket = null;
+        // Reply
+        if (message.length() > emptyMessageLength + 1) { // length of documentName (considered in emptyMessageLength plus length of yjs sync type, set in applySyncMessage)
+            if (this.broadcasted) {
+                // TODO: Some weird TypeScript error
+                // @ts-ignore
+                provider.broadcast(OutgoingMessage, { encoder: message.encoder });
             }
-            // Init the WebSocket connection
-            const ws = new this.configuration.WebSocketPolyfill(this.url);
-            ws.binaryType = 'arraybuffer';
-            ws.onmessage = (payload) => this.emit('message', payload);
-            ws.onclose = (payload) => this.emit('close', { event: payload });
-            ws.onopen = (payload) => this.emit('open', payload);
-            ws.onerror = (err) => {
-                reject(err);
-            };
-            this.webSocket = ws;
-            // Reset the status
-            this.status = WebSocketStatus.Connecting;
-            this.emit('status', { status: WebSocketStatus.Connecting });
-            // Store resolve/reject for later use
-            this.connectionAttempt = {
-                resolve,
-                reject,
-            };
-        });
+            else {
+                // TODO: Some weird TypeScript error
+                // @ts-ignore
+                provider.send(OutgoingMessage, { encoder: message.encoder });
+            }
+        }
     }
-    onMessage(event) {
-        this.resolveConnectionAttempt();
+    applySyncMessage(provider, emitSynced) {
+        const { message } = this;
+        message.writeVarUint(MessageType.Sync);
+        // Apply update
+        const syncMessageType = readSyncMessage(message.decoder, message.encoder, provider.document, provider);
+        // Synced once we receive Step2
+        if (emitSynced && syncMessageType === messageYjsSyncStep2) {
+            provider.synced = true;
+        }
     }
-    resolveConnectionAttempt() {
-        if (this.connectionAttempt) {
-            this.connectionAttempt.resolve();
-            this.connectionAttempt = null;
-            this.status = WebSocketStatus.Connected;
-            this.emit('status', { status: WebSocketStatus.Connected });
-            this.emit('connect');
+    applySyncStatusMessage(provider, applied) {
+        if (applied) {
+            provider.decrementUnsyncedChanges();
         }
     }
-    stopConnectionAttempt() {
-        this.connectionAttempt = null;
+    applyAwarenessMessage(provider) {
+        const { message } = this;
+        applyAwarenessUpdate(provider.awareness, message.readVarUint8Array(), provider);
     }
-    rejectConnectionAttempt() {
-        var _a;
-        (_a = this.connectionAttempt) === null || _a === void 0 ? void 0 : _a.reject();
-        this.connectionAttempt = null;
+    applyAuthMessage(provider) {
+        const { message } = this;
+        readAuthMessage(message.decoder, provider.permissionDeniedHandler.bind(provider), provider.authenticatedHandler.bind(provider));
     }
-    checkConnection() {
-        var _a;
-        // Don’t check the connection when it’s not even established
-        if (this.status !== WebSocketStatus.Connected) {
-            return;
-        }
-        // Don’t close then connection while waiting for the first message
-        if (!this.lastMessageReceived) {
-            return;
-        }
-        // Don’t close the connection when a message was received recently
-        if (this.configuration.messageReconnectTimeout >= getUnixTime() - this.lastMessageReceived) {
-            return;
-        }
-        // No message received in a long time, not even your own
-        // Awareness updates, which are updated every 15 seconds.
-        (_a = this.webSocket) === null || _a === void 0 ? void 0 : _a.close();
+    applyQueryAwarenessMessage(provider) {
+        const { message } = this;
+        message.writeVarUint(MessageType.Awareness);
+        message.writeVarUint8Array(encodeAwarenessUpdate(provider.awareness, Array.from(provider.awareness.getStates().keys())));
     }
-    registerEventListeners() {
-        if (typeof window === 'undefined') {
-            return;
-        }
-        window.addEventListener('online', this.boundConnect);
+}
+
+class MessageSender {
+    constructor(Message, args = {}) {
+        this.message = new Message();
+        this.encoder = this.message.get(args);
     }
-    // Ensure that the URL always ends with /
-    get serverUrl() {
-        while (this.configuration.url[this.configuration.url.length - 1] === '/') {
-            return this.configuration.url.slice(0, this.configuration.url.length - 1);
-        }
-        return this.configuration.url;
+    create() {
+        return toUint8Array(this.encoder);
     }
-    get url() {
-        const encodedParams = encodeQueryParams(this.configuration.parameters);
-        return `${this.serverUrl}${encodedParams.length === 0 ? '' : `?${encodedParams}`}`;
+    send(webSocket) {
+        webSocket === null || webSocket === void 0 ? void 0 : webSocket.send(this.create());
     }
-    disconnect() {
-        this.shouldConnect = false;
-        if (this.webSocket === null) {
-            return;
-        }
-        try {
-            this.webSocket.close();
-        }
-        catch {
-            //
-        }
+    broadcast(channel) {
+        publish(channel, this.create());
     }
-    send(message) {
-        var _a;
-        if (((_a = this.webSocket) === null || _a === void 0 ? void 0 : _a.readyState) === WsReadyStates.Open) {
-            this.webSocket.send(message);
-        }
+}
+
+class AuthenticationMessage extends OutgoingMessage {
+    constructor() {
+        super(...arguments);
+        this.type = MessageType.Auth;
+        this.description = 'Authentication';
     }
-    onClose({ event }) {
-        this.webSocket = null;
-        if (this.status === WebSocketStatus.Connected) {
-            this.status = WebSocketStatus.Disconnected;
-            this.emit('status', { status: WebSocketStatus.Disconnected });
-            this.emit('disconnect', { event });
-        }
-        if (event.code === Unauthorized.code) {
-            if (event.reason === Unauthorized.reason) {
-                console.warn('[HocuspocusProvider] An authentication token is required, but you didn’t send one. Try adding a `token` to your HocuspocusProvider configuration. Won’t try again.');
-            }
-            else {
-                console.warn(`[HocuspocusProvider] Connection closed with status Unauthorized: ${event.reason}`);
-            }
-            this.shouldConnect = false;
-        }
-        if (event.code === Forbidden.code) {
-            if (!this.configuration.quiet) {
-                console.warn('[HocuspocusProvider] The provided authentication token isn’t allowed to connect to this server. Will try again.');
-                return; // TODO REMOVE ME
-            }
-        }
-        if (event.code === MessageTooBig.code) {
-            console.warn(`[HocuspocusProvider] Connection closed with status MessageTooBig: ${event.reason}`);
-            this.shouldConnect = false;
+    get(args) {
+        if (typeof args.token === 'undefined') {
+            throw new Error('The authentication message requires `token` as an argument.');
         }
-        if (this.connectionAttempt) {
-            // That connection attempt failed.
-            this.rejectConnectionAttempt();
+        writeVarString(this.encoder, args.documentName);
+        writeVarUint(this.encoder, this.type);
+        writeAuthentication(this.encoder, args.token);
+        return this.encoder;
+    }
+}
+
+class AwarenessMessage extends OutgoingMessage {
+    constructor() {
+        super(...arguments);
+        this.type = MessageType.Awareness;
+        this.description = 'Awareness states update';
+    }
+    get(args) {
+        if (typeof args.awareness === 'undefined') {
+            throw new Error('The awareness message requires awareness as an argument');
         }
-        else if (this.shouldConnect) {
-            // The connection was closed by the server. Let’s just try again.
-            this.connect();
+        if (typeof args.clients === 'undefined') {
+            throw new Error('The awareness message requires clients as an argument');
         }
-        // If we’ll reconnect, we’re done for now.
-        if (this.shouldConnect) {
-            return;
+        writeVarString(this.encoder, args.documentName);
+        writeVarUint(this.encoder, this.type);
+        let awarenessUpdate;
+        if (args.states === undefined) {
+            awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients);
         }
-        // The status is set correctly already.
-        if (this.status === WebSocketStatus.Disconnected) {
-            return;
+        else {
+            awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients, args.states);
         }
-        // Let’s update the connection status.
-        this.status = WebSocketStatus.Disconnected;
-        this.emit('status', { status: WebSocketStatus.Disconnected });
-        this.emit('disconnect', { event });
+        writeVarUint8Array(this.encoder, awarenessUpdate);
+        return this.encoder;
     }
-    destroy() {
-        this.emit('destroy');
-        if (this.intervals.forceSync) {
-            clearInterval(this.intervals.forceSync);
-        }
-        clearInterval(this.intervals.connectionChecker);
-        // If there is still a connection attempt outstanding then we should stop
-        // it before calling disconnect, otherwise it will be rejected in the onClose
-        // handler and trigger a retry
-        this.stopConnectionAttempt();
-        this.disconnect();
-        this.removeAllListeners();
-        if (typeof window === 'undefined') {
-            return;
-        }
-        window.removeEventListener('online', this.boundConnect);
+}
+
+class CloseMessage extends OutgoingMessage {
+    constructor() {
+        super(...arguments);
+        this.type = MessageType.CLOSE;
+        this.description = 'Ask the server to close the connection';
+    }
+    get(args) {
+        writeVarString(this.encoder, args.documentName);
+        writeVarUint(this.encoder, this.type);
+        return this.encoder;
+    }
+}
+
+class QueryAwarenessMessage extends OutgoingMessage {
+    constructor() {
+        super(...arguments);
+        this.type = MessageType.QueryAwareness;
+        this.description = 'Queries awareness states';
+    }
+    get(args) {
+        console.log('queryAwareness: writing string docName', args.documentName);
+        console.log(this.encoder.cpos);
+        writeVarString(this.encoder, args.documentName);
+        writeVarUint(this.encoder, this.type);
+        return this.encoder;
     }
 }
 
@@ -2265,15 +2282,50 @@ class StatelessMessage extends OutgoingMessage {
     }
 }
 
-class CloseMessage extends OutgoingMessage {
+class SyncStepOneMessage extends OutgoingMessage {
     constructor() {
         super(...arguments);
-        this.type = MessageType.CLOSE;
-        this.description = 'Ask the server to close the connection';
+        this.type = MessageType.Sync;
+        this.description = 'First sync step';
+    }
+    get(args) {
+        if (typeof args.document === 'undefined') {
+            throw new Error('The sync step one message requires document as an argument');
+        }
+        writeVarString(this.encoder, args.documentName);
+        writeVarUint(this.encoder, this.type);
+        writeSyncStep1(this.encoder, args.document);
+        return this.encoder;
+    }
+}
+
+class SyncStepTwoMessage extends OutgoingMessage {
+    constructor() {
+        super(...arguments);
+        this.type = MessageType.Sync;
+        this.description = 'Second sync step';
+    }
+    get(args) {
+        if (typeof args.document === 'undefined') {
+            throw new Error('The sync step two message requires document as an argument');
+        }
+        writeVarString(this.encoder, args.documentName);
+        writeVarUint(this.encoder, this.type);
+        writeSyncStep2(this.encoder, args.document);
+        return this.encoder;
+    }
+}
+
+class UpdateMessage extends OutgoingMessage {
+    constructor() {
+        super(...arguments);
+        this.type = MessageType.Sync;
+        this.description = 'A document update';
     }
     get(args) {
         writeVarString(this.encoder, args.documentName);
         writeVarUint(this.encoder, this.type);
+        writeUpdate(this.encoder, args.update);
         return this.encoder;
     }
 }
@@ -2384,8 +2436,15 @@ class HocuspocusProvider extends EventEmitter {
     get hasUnsyncedChanges() {
         return this.unsyncedChanges > 0;
     }
-    updateUnsyncedChanges(unsyncedChanges = 0) {
-        this.unsyncedChanges += unsyncedChanges;
+    incrementUnsyncedChanges() {
+        this.unsyncedChanges += 1;
+        this.emit('unsyncedChanges', this.unsyncedChanges);
+    }
+    decrementUnsyncedChanges() {
+        this.unsyncedChanges -= 1;
+        if (this.unsyncedChanges === 0) {
+            this.synced = true;
+        }
         this.emit('unsyncedChanges', this.unsyncedChanges);
     }
     forceSync() {
@@ -2407,7 +2466,7 @@ class HocuspocusProvider extends EventEmitter {
         if (origin === this) {
             return;
         }
-        this.updateUnsyncedChanges(1);
+        this.incrementUnsyncedChanges();
         this.send(UpdateMessage, { update, documentName: this.configuration.name }, true);
     }
     awarenessUpdateHandler({ added, updated, removed }, origin) {
@@ -2425,9 +2484,6 @@ class HocuspocusProvider extends EventEmitter {
         if (this.isSynced === state) {
             return;
         }
-        if (state && this.unsyncedChanges > 0) {
-            this.updateUnsyncedChanges(-1 * this.unsyncedChanges);
-        }
         this.isSynced = state;
         this.emit('synced', { state });
         this.emit('sync', { state });
@@ -2465,6 +2521,7 @@ class HocuspocusProvider extends EventEmitter {
         return this.configuration.token;
     }
     startSync() {
+        this.incrementUnsyncedChanges();
         this.send(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name });
         if (this.awareness.getLocalState() !== null) {
             this.send(AwarenessMessage, {
@@ -2475,8 +2532,9 @@ class HocuspocusProvider extends EventEmitter {
         }
     }
     send(message, args, broadcast = false) {
-        if (!this.isConnected)
+        if (!this.isConnected) {
             return;
+        }
         if (broadcast) {
             this.mux(() => { this.broadcast(message, args); });
         }
@@ -2492,7 +2550,7 @@ class HocuspocusProvider extends EventEmitter {
         }
         message.writeVarString(documentName);
         this.emit('message', { event, message: new IncomingMessage(event.data) });
-        new MessageReceiver(message).apply(this);
+        new MessageReceiver(message).apply(this, true);
     }
     onClose(event) {
         this.isAuthenticated = false;
diff --git a/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.esm.js.map b/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.esm.js.map
index a18b6bc..8578e37 100644
--- a/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.esm.js.map
+++ b/node_modules/@hocuspocus/provider/dist/hocuspocus-provider.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"hocuspocus-provider.esm.js","sources":["../../../node_modules/lib0/map.js","../../../node_modules/lib0/set.js","../../../node_modules/lib0/string.js","../../../node_modules/lib0/conditions.js","../../../node_modules/lib0/storage.js","../../../node_modules/lib0/array.js","../../../node_modules/lib0/object.js","../../../node_modules/lib0/function.js","../../../node_modules/lib0/environment.js","../../../node_modules/lib0/math.js","../../../node_modules/lib0/binary.js","../../../node_modules/lib0/number.js","../../../node_modules/lib0/encoding.js","../../../node_modules/lib0/error.js","../../../node_modules/lib0/decoding.js","../../../node_modules/lib0/buffer.js","../../../node_modules/lib0/broadcastchannel.js","../../../node_modules/lib0/time.js","../../../node_modules/lib0/observable.js","../../../node_modules/y-protocols/awareness.js","../../../node_modules/lib0/mutex.js","../src/EventEmitter.ts","../src/IncomingMessage.ts","../../../node_modules/y-protocols/sync.js","../src/types.ts","../src/OutgoingMessage.ts","../src/MessageReceiver.ts","../src/MessageSender.ts","../src/OutgoingMessages/SyncStepOneMessage.ts","../src/OutgoingMessages/SyncStepTwoMessage.ts","../src/OutgoingMessages/QueryAwarenessMessage.ts","../src/OutgoingMessages/AuthenticationMessage.ts","../src/OutgoingMessages/AwarenessMessage.ts","../src/OutgoingMessages/UpdateMessage.ts","../../../node_modules/lib0/url.js","../src/HocuspocusProviderWebsocket.ts","../src/OutgoingMessages/StatelessMessage.ts","../src/OutgoingMessages/CloseMessage.ts","../src/HocuspocusProvider.ts","../src/TiptapCollabProviderWebsocket.ts","../src/TiptapCollabProvider.ts"],"sourcesContent":["/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template V,K\n * @template {Map<K,V>} MAP\n * @param {MAP} map\n * @param {K} key\n * @param {function():V} createT\n * @return {V}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value || undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release &&\n  /node|io\\.js/.test(process.release.name)\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n/* c8 ignore stop */\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\n/**\n * @type {number}\n */\nexport const HIGHEST_INT32 = binary.BITS31\n\n/**\n * @module number\n */\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* c8 ignore start */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* c8 ignore start */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* c8 ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* c8 ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/* eslint-env browser */\n\n/**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */\n\n// @todo before next major: use Uint8Array instead as buffer object\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as buffer from './buffer.js'\nimport * as storage from './storage.js'\n\n/**\n * @typedef {Object} Channel\n * @property {Set<function(any, any):any>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nconst channels = new Map()\n\n/* c8 ignore start */\nclass LocalStoragePolyfill {\n  /**\n   * @param {string} room\n   */\n  constructor (room) {\n    this.room = room\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null\n    /**\n     * @param {any} e\n     */\n    this._onChange = e => e.key === room && this.onmessage !== null && this.onmessage({ data: buffer.fromBase64(e.newValue || '') })\n    storage.onChange(this._onChange)\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  postMessage (buf) {\n    storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)))\n  }\n\n  close () {\n    storage.offChange(this._onChange)\n  }\n}\n/* c8 ignore stop */\n\n// Use BroadcastChannel or Polyfill\n/* c8 ignore next */\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nconst getChannel = room =>\n  map.setIfUndefined(channels, room, () => {\n    const subs = set.create()\n    const bc = new BC(room)\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    /* c8 ignore next */\n    bc.onmessage = e => subs.forEach(sub => sub(e.data, 'broadcastchannel'))\n    return {\n      bc, subs\n    }\n  })\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const subscribe = (room, f) => {\n  getChannel(room).subs.add(f)\n  return f\n}\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const unsubscribe = (room, f) => {\n  const channel = getChannel(room)\n  const unsubscribed = channel.subs.delete(f)\n  if (unsubscribed && channel.subs.size === 0) {\n    channel.bc.close()\n    channels.delete(room)\n  }\n  return unsubscribed\n}\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n * @param {any} [origin]\n */\nexport const publish = (room, data, origin = null) => {\n  const c = getChannel(room)\n  c.bc.postMessage(data)\n  c.subs.forEach(sub => sub(data, origin))\n}\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n","/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nexport const createMutex = () => {\n  let token = true\n  return (f, g) => {\n    if (token) {\n      token = false\n      try {\n        f()\n      } finally {\n        token = true\n      }\n    } else if (g !== undefined) {\n      g()\n    }\n  }\n}\n","export default class EventEmitter {\n\n  public callbacks: { [key: string]: Function[] } = {}\n\n  public on(event: string, fn: Function): this {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = []\n    }\n\n    this.callbacks[event].push(fn)\n\n    return this\n  }\n\n  protected emit(event: string, ...args: any): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args))\n    }\n\n    return this\n  }\n\n  public off(event: string, fn?: Function): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      if (fn) {\n        this.callbacks[event] = callbacks.filter(callback => callback !== fn)\n      } else {\n        delete this.callbacks[event]\n      }\n    }\n\n    return this\n  }\n\n  removeAllListeners(): void {\n    this.callbacks = {}\n  }\n}\n","import {\n  createDecoder,\n  readVarUint,\n  readVarUint8Array,\n  readVarString,\n  Decoder,\n} from 'lib0/decoding'\nimport {\n  Encoder,\n  createEncoder,\n  writeVarUint,\n  writeVarUint8Array,\n  writeVarString,\n  length,\n} from 'lib0/encoding'\nimport { MessageType } from './types.js'\n\nexport class IncomingMessage {\n\n  data: any\n\n  encoder: Encoder\n\n  decoder: Decoder\n\n  constructor(data: any) {\n    this.data = data\n    this.encoder = createEncoder()\n    this.decoder = createDecoder(new Uint8Array(this.data))\n  }\n\n  readVarUint(): MessageType {\n    return readVarUint(this.decoder)\n  }\n\n  readVarString(): string {\n    return readVarString(this.decoder)\n  }\n\n  readVarUint8Array() {\n    return readVarUint8Array(this.decoder)\n  }\n\n  writeVarUint(type: MessageType) {\n    return writeVarUint(this.encoder, type)\n  }\n\n  writeVarString(string: string) {\n    return writeVarString(this.encoder, string)\n  }\n\n  writeVarUint8Array(data: Uint8Array) {\n    return writeVarUint8Array(this.encoder, data)\n  }\n\n  length() {\n    return length(this.encoder)\n  }\n}\n","/**\n * @module sync-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as Y from 'yjs'\n\n/**\n * @typedef {Map<number, number>} StateMap\n */\n\n/**\n * Core Yjs defines two message types:\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it\n *   received all information from the remote client.\n *\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\n *\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\n * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.\n * Therefore it is necesarry that the client initiates the sync.\n *\n * Construction of a message:\n * [messageType : varUint, message definition..]\n *\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\n *\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\n */\n\nexport const messageYjsSyncStep1 = 0\nexport const messageYjsSyncStep2 = 1\nexport const messageYjsUpdate = 2\n\n/**\n * Create a sync step 1 message based on the state of the current shared document.\n *\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n */\nexport const writeSyncStep1 = (encoder, doc) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep1)\n  const sv = Y.encodeStateVector(doc)\n  encoding.writeVarUint8Array(encoder, sv)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n * @param {Uint8Array} [encodedStateVector]\n */\nexport const writeSyncStep2 = (encoder, doc, encodedStateVector) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep2)\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector))\n}\n\n/**\n * Read SyncStep1 message and reply with SyncStep2.\n *\n * @param {decoding.Decoder} decoder The reply to the received message\n * @param {encoding.Encoder} encoder The received message\n * @param {Y.Doc} doc\n */\nexport const readSyncStep1 = (decoder, encoder, doc) =>\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder))\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncStep2 = (decoder, doc, transactionOrigin) => {\n  try {\n    Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin)\n  } catch (error) {\n    // This catches errors that are thrown by event handlers\n    console.error('Caught error while handling a Yjs update', error)\n  }\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Uint8Array} update\n */\nexport const writeUpdate = (encoder, update) => {\n  encoding.writeVarUint(encoder, messageYjsUpdate)\n  encoding.writeVarUint8Array(encoder, update)\n}\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readUpdate = readSyncStep2\n\n/**\n * @param {decoding.Decoder} decoder A message received from another client\n * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\n  const messageType = decoding.readVarUint(decoder)\n  switch (messageType) {\n    case messageYjsSyncStep1:\n      readSyncStep1(decoder, encoder, doc)\n      break\n    case messageYjsSyncStep2:\n      readSyncStep2(decoder, doc, transactionOrigin)\n      break\n    case messageYjsUpdate:\n      readUpdate(decoder, doc, transactionOrigin)\n      break\n    default:\n      throw new Error('Unknown message type')\n  }\n  return messageType\n}\n","import { Awareness } from 'y-protocols/awareness'\nimport * as Y from 'yjs'\nimport { Encoder } from 'lib0/encoding'\nimport type { Event, CloseEvent, MessageEvent } from 'ws'\nimport { AuthenticationMessage } from './OutgoingMessages/AuthenticationMessage.js'\nimport { AwarenessMessage } from './OutgoingMessages/AwarenessMessage.js'\nimport { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js'\nimport { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js'\nimport { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js'\nimport { UpdateMessage } from './OutgoingMessages/UpdateMessage.js'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { OutgoingMessage } from './OutgoingMessage.js'\n\nexport enum MessageType {\n  Sync = 0,\n  Awareness = 1,\n  Auth = 2,\n  QueryAwareness = 3,\n  Stateless = 5,\n  CLOSE = 7,\n}\n\nexport enum WebSocketStatus {\n  Connecting = 'connecting',\n  Connected = 'connected',\n  Disconnected = 'disconnected',\n}\n\nexport interface OutgoingMessageInterface {\n  encoder: Encoder\n  type?: MessageType\n}\n\nexport interface OutgoingMessageArguments {\n  documentName: string,\n  token: string,\n  document: Y.Doc,\n  awareness: Awareness,\n  clients: number[],\n  states: Map<number, { [key: string]: any; }>,\n  update: any,\n  payload: string,\n  encoder: Encoder,\n}\n\nexport interface Constructable<T> {\n  new(...args: any) : T\n}\n\nexport type ConstructableOutgoingMessage =\n  Constructable<AuthenticationMessage> |\n  Constructable<AwarenessMessage> |\n  Constructable<QueryAwarenessMessage> |\n  Constructable<SyncStepOneMessage> |\n  Constructable<SyncStepTwoMessage> |\n  Constructable<UpdateMessage>\n\nexport type onAuthenticationFailedParameters = {\n  reason: string,\n}\n\nexport type onOpenParameters = {\n  event: Event,\n}\n\nexport type onMessageParameters = {\n  event: MessageEvent,\n  message: IncomingMessage,\n}\n\nexport type onOutgoingMessageParameters = {\n  message: OutgoingMessage,\n}\n\nexport type onStatusParameters = {\n  status: WebSocketStatus,\n}\n\nexport type onSyncedParameters = {\n  state: boolean,\n}\n\nexport type onDisconnectParameters = {\n  event: CloseEvent,\n}\n\nexport type onCloseParameters = {\n  event: CloseEvent,\n}\n\nexport type onAwarenessUpdateParameters = {\n  states: StatesArray\n}\n\nexport type onAwarenessChangeParameters = {\n  states: StatesArray\n}\n\nexport type onStatelessParameters = {\n  payload: string\n}\n\nexport type StatesArray = { clientId: number, [key: string | number]: any }[]\n","import { Encoder, createEncoder, toUint8Array } from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments, OutgoingMessageInterface } from './types.js'\n\nexport class OutgoingMessage implements OutgoingMessageInterface {\n  encoder: Encoder\n\n  type?: MessageType\n\n  constructor() {\n    this.encoder = createEncoder()\n  }\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    return args.encoder\n  }\n\n  toUint8Array() {\n    return toUint8Array(this.encoder)\n  }\n}\n","import * as awarenessProtocol from 'y-protocols/awareness'\nimport { readSyncMessage, messageYjsSyncStep2, messageYjsUpdate } from 'y-protocols/sync'\nimport { readAuthMessage } from '@hocuspocus/common'\nimport { readVarString } from 'lib0/decoding'\nimport { MessageType } from './types.js'\nimport { HocuspocusProvider } from './HocuspocusProvider.js'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { OutgoingMessage } from './OutgoingMessage.js'\n\nexport class MessageReceiver {\n\n  message: IncomingMessage\n\n  broadcasted = false\n\n  constructor(message: IncomingMessage) {\n    this.message = message\n  }\n\n  public setBroadcasted(value: boolean) {\n    this.broadcasted = value\n\n    return this\n  }\n\n  public apply(provider: HocuspocusProvider, emitSynced = true) {\n    const { message } = this\n    const type = message.readVarUint()\n\n    const emptyMessageLength = message.length()\n\n    switch (type) {\n      case MessageType.Sync:\n        this.applySyncMessage(provider, emitSynced)\n        break\n\n      case MessageType.Awareness:\n        this.applyAwarenessMessage(provider)\n        break\n\n      case MessageType.Auth:\n        this.applyAuthMessage(provider)\n        break\n\n      case MessageType.QueryAwareness:\n        this.applyQueryAwarenessMessage(provider)\n        break\n\n      case MessageType.Stateless:\n        provider.receiveStateless(readVarString(message.decoder))\n        break\n\n      default:\n        throw new Error(`Can’t apply message of unknown type: ${type}`)\n    }\n\n    // Reply\n    if (message.length() > emptyMessageLength + 1) { // length of documentName (considered in emptyMessageLength plus length of yjs sync type, set in applySyncMessage)\n      if (this.broadcasted) {\n        // TODO: Some weird TypeScript error\n        // @ts-ignore\n        provider.broadcast(OutgoingMessage, { encoder: message.encoder })\n      } else {\n        // TODO: Some weird TypeScript error\n        // @ts-ignore\n        provider.send(OutgoingMessage, { encoder: message.encoder })\n      }\n    }\n  }\n\n  private applySyncMessage(provider: HocuspocusProvider, emitSynced: boolean) {\n    const { message } = this\n\n    message.writeVarUint(MessageType.Sync)\n\n    // Apply update\n    const syncMessageType = readSyncMessage(\n      message.decoder,\n      message.encoder,\n      provider.document,\n      provider,\n    )\n\n    // Synced once we receive Step2\n    if (emitSynced && syncMessageType === messageYjsSyncStep2) {\n      provider.synced = true\n    }\n\n    if (syncMessageType === messageYjsUpdate || syncMessageType === messageYjsSyncStep2) {\n      if (provider.unsyncedChanges > 0) {\n        provider.updateUnsyncedChanges(-1)\n      }\n    }\n  }\n\n  private applyAwarenessMessage(provider: HocuspocusProvider) {\n    const { message } = this\n\n    awarenessProtocol.applyAwarenessUpdate(\n      provider.awareness,\n      message.readVarUint8Array(),\n      provider,\n    )\n  }\n\n  private applyAuthMessage(provider: HocuspocusProvider) {\n    const { message } = this\n\n    readAuthMessage(\n      message.decoder,\n      provider.permissionDeniedHandler.bind(provider),\n      provider.authenticatedHandler.bind(provider),\n    )\n  }\n\n  private applyQueryAwarenessMessage(provider: HocuspocusProvider) {\n    const { message } = this\n\n    message.writeVarUint(MessageType.Awareness)\n    message.writeVarUint8Array(\n      awarenessProtocol.encodeAwarenessUpdate(\n        provider.awareness,\n        Array.from(provider.awareness.getStates().keys()),\n      ),\n    )\n  }\n}\n","import { Encoder, toUint8Array } from 'lib0/encoding'\nimport * as bc from 'lib0/broadcastchannel'\nimport { ConstructableOutgoingMessage } from './types.js'\n\nexport class MessageSender {\n\n  encoder: Encoder\n\n  message: any\n\n  constructor(Message: ConstructableOutgoingMessage, args: any = {}) {\n    this.message = new Message()\n    this.encoder = this.message.get(args)\n  }\n\n  create() {\n    return toUint8Array(this.encoder)\n  }\n\n  send(webSocket: any) {\n    webSocket?.send(this.create())\n  }\n\n  broadcast(channel: string) {\n    bc.publish(channel, this.create())\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class SyncStepOneMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'First sync step'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.document === 'undefined') {\n      throw new Error('The sync step one message requires document as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n    syncProtocol.writeSyncStep1(this.encoder, args.document)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class SyncStepTwoMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'Second sync step'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.document === 'undefined') {\n      throw new Error('The sync step two message requires document as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n    syncProtocol.writeSyncStep2(this.encoder, args.document)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class QueryAwarenessMessage extends OutgoingMessage {\n  type = MessageType.QueryAwareness\n\n  description = 'Queries awareness states'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n\n    console.log('queryAwareness: writing string docName', args.documentName)\n    console.log(this.encoder.cpos)\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    return this.encoder\n  }\n}\n","import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { writeAuthentication } from '@hocuspocus/common'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class AuthenticationMessage extends OutgoingMessage {\n  type = MessageType.Auth\n\n  description = 'Authentication'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.token === 'undefined') {\n      throw new Error('The authentication message requires `token` as an argument.')\n    }\n\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n    writeAuthentication(this.encoder, args.token)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport { encodeAwarenessUpdate } from 'y-protocols/awareness'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class AwarenessMessage extends OutgoingMessage {\n  type = MessageType.Awareness\n\n  description = 'Awareness states update'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.awareness === 'undefined') {\n      throw new Error('The awareness message requires awareness as an argument')\n    }\n\n    if (typeof args.clients === 'undefined') {\n      throw new Error('The awareness message requires clients as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    let awarenessUpdate\n    if (args.states === undefined) {\n      awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients)\n    } else {\n      awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients, args.states)\n    }\n\n    encoding.writeVarUint8Array(this.encoder, awarenessUpdate)\n\n    return this.encoder\n  }\n}\n","import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { writeUpdate } from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class UpdateMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'A document update'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n\n    writeUpdate(this.encoder, args.update)\n\n    return this.encoder\n  }\n}\n","/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js'\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {}\n  const urlQuerySplit = url.split('?')\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\n  for (let i = 0; i < pairs.length; i++) {\n    const item = pairs[i]\n    if (item.length > 0) {\n      const pair = item.split('=')\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n  }\n  return query\n}\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport const encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\n","import * as time from 'lib0/time'\nimport * as mutex from 'lib0/mutex'\nimport * as url from 'lib0/url'\nimport type { MessageEvent } from 'ws'\nimport { retry } from '@lifeomic/attempt'\nimport {\n  Forbidden, MessageTooBig, Unauthorized, WsReadyStates,\n} from '@hocuspocus/common'\nimport { Event } from 'ws'\nimport EventEmitter from './EventEmitter.js'\nimport {\n  onCloseParameters, onDisconnectParameters, onMessageParameters, onOpenParameters, onOutgoingMessageParameters, onStatusParameters, WebSocketStatus,\n  onAwarenessChangeParameters, onAwarenessUpdateParameters,\n} from './types.js'\nimport { HocuspocusProvider } from './HocuspocusProvider.js'\n\nexport type HocuspocusProviderWebsocketConfiguration =\n  Required<Pick<CompleteHocuspocusProviderWebsocketConfiguration, 'url'>>\n  & Partial<CompleteHocuspocusProviderWebsocketConfiguration>\n\nexport interface CompleteHocuspocusProviderWebsocketConfiguration {\n  /**\n   * URL of your @hocuspocus/server instance\n   */\n   url: string,\n\n  /**\n   * Pass `false` to start the connection manually.\n   */\n  connect: boolean,\n\n  /**\n   * URL parameters that should be added.\n   */\n  parameters: { [key: string]: any },\n  /**\n   * An optional WebSocket polyfill, for example for Node.js\n   */\n  WebSocketPolyfill: any,\n\n  /**\n   * Disconnect when no message is received for the defined amount of milliseconds.\n   */\n  messageReconnectTimeout: number,\n  /**\n   * The delay between each attempt in milliseconds. You can provide a factor to have the delay grow exponentially.\n   */\n  delay: number,\n  /**\n   * The intialDelay is the amount of time to wait before making the first attempt. This option should typically be 0 since you typically want the first attempt to happen immediately.\n   */\n  initialDelay: number,\n  /**\n   * The factor option is used to grow the delay exponentially.\n   */\n  factor: number,\n  /**\n   * The maximum number of attempts or 0 if there is no limit on number of attempts.\n   */\n  maxAttempts: number,\n  /**\n   * minDelay is used to set a lower bound of delay when jitter is enabled. This property has no effect if jitter is disabled.\n   */\n  minDelay: number,\n  /**\n   * The maxDelay option is used to set an upper bound for the delay when factor is enabled. A value of 0 can be provided if there should be no upper bound when calculating delay.\n   */\n  maxDelay: number,\n  /**\n   * If jitter is true then the calculated delay will be a random integer value between minDelay and the calculated delay for the current iteration.\n   */\n  jitter: boolean,\n  /**\n   * A timeout in milliseconds. If timeout is non-zero then a timer is set using setTimeout. If the timeout is triggered then future attempts will be aborted.\n   */\n  timeout: number,\n  onOpen: (data: onOpenParameters) => void,\n  onConnect: () => void,\n  onMessage: (data: onMessageParameters) => void,\n  onOutgoingMessage: (data: onOutgoingMessageParameters) => void,\n  onStatus: (data: onStatusParameters) => void,\n  onDisconnect: (data: onDisconnectParameters) => void,\n  onClose: (data: onCloseParameters) => void,\n  onDestroy: () => void,\n  onAwarenessUpdate: (data: onAwarenessUpdateParameters) => void,\n  onAwarenessChange: (data: onAwarenessChangeParameters) => void,\n  /**\n   * Don’t output any warnings.\n   */\n  quiet: boolean,\n}\n\nexport class HocuspocusProviderWebsocket extends EventEmitter {\n  public configuration: CompleteHocuspocusProviderWebsocketConfiguration = {\n    url: '',\n    // @ts-ignore\n    document: undefined,\n    // @ts-ignore\n    awareness: undefined,\n    WebSocketPolyfill: undefined,\n    parameters: {},\n    connect: true,\n    broadcast: true,\n    forceSyncInterval: false,\n    // TODO: this should depend on awareness.outdatedTime\n    messageReconnectTimeout: 30000,\n    // 1 second\n    delay: 1000,\n    // instant\n    initialDelay: 0,\n    // double the delay each time\n    factor: 2,\n    // unlimited retries\n    maxAttempts: 0,\n    // wait at least 1 second\n    minDelay: 1000,\n    // at least every 30 seconds\n    maxDelay: 30000,\n    // randomize\n    jitter: true,\n    // retry forever\n    timeout: 0,\n    onOpen: () => null,\n    onConnect: () => null,\n    onMessage: () => null,\n    onOutgoingMessage: () => null,\n    onStatus: () => null,\n    onDisconnect: () => null,\n    onClose: () => null,\n    onDestroy: () => null,\n    onAwarenessUpdate: () => null,\n    onAwarenessChange: () => null,\n    quiet: false,\n  }\n\n  subscribedToBroadcastChannel = false\n\n  webSocket: WebSocket | null = null\n\n  shouldConnect = true\n\n  status = WebSocketStatus.Disconnected\n\n  lastMessageReceived = 0\n\n  mux = mutex.createMutex()\n\n  intervals: any = {\n    forceSync: null,\n    connectionChecker: null,\n  }\n\n  connectionAttempt: {\n    resolve: (value?: any) => void\n    reject: (reason?: any) => void\n  } | null = null\n\n  constructor(configuration: HocuspocusProviderWebsocketConfiguration) {\n    super()\n    this.setConfiguration(configuration)\n\n    this.configuration.WebSocketPolyfill = configuration.WebSocketPolyfill ? configuration.WebSocketPolyfill : WebSocket\n\n    this.on('open', this.configuration.onOpen)\n    this.on('open', this.onOpen.bind(this))\n    this.on('connect', this.configuration.onConnect)\n    this.on('message', this.configuration.onMessage)\n    this.on('outgoingMessage', this.configuration.onOutgoingMessage)\n    this.on('status', this.configuration.onStatus)\n    this.on('status', this.onStatus.bind(this))\n    this.on('disconnect', this.configuration.onDisconnect)\n    this.on('close', this.configuration.onClose)\n    this.on('destroy', this.configuration.onDestroy)\n    this.on('awarenessUpdate', this.configuration.onAwarenessUpdate)\n    this.on('awarenessChange', this.configuration.onAwarenessChange)\n\n    this.on('close', this.onClose.bind(this))\n    this.on('message', this.onMessage.bind(this))\n\n    this.registerEventListeners()\n\n    this.intervals.connectionChecker = setInterval(\n      this.checkConnection.bind(this),\n      this.configuration.messageReconnectTimeout / 10,\n    )\n\n    if (typeof configuration.connect !== 'undefined') {\n      this.shouldConnect = configuration.connect\n    }\n\n    if (!this.shouldConnect) {\n      return\n    }\n\n    this.connect()\n  }\n\n  receivedOnOpenPayload?: Event | undefined = undefined\n\n  receivedOnStatusPayload?: onStatusParameters | undefined = undefined\n\n  async onOpen(event: Event) {\n    this.receivedOnOpenPayload = event\n  }\n\n  async onStatus(data: onStatusParameters) {\n    this.receivedOnStatusPayload = data\n  }\n\n  attach(provider: HocuspocusProvider) {\n    if (this.receivedOnOpenPayload) {\n      provider.onOpen(this.receivedOnOpenPayload)\n    }\n\n    if (this.receivedOnStatusPayload) {\n      provider.onStatus(this.receivedOnStatusPayload)\n    }\n  }\n\n  detach(provider: HocuspocusProvider) {\n    // tell the server to remove the listener\n\n  }\n\n  public setConfiguration(configuration: Partial<HocuspocusProviderWebsocketConfiguration> = {}): void {\n    this.configuration = { ...this.configuration, ...configuration }\n  }\n\n  boundConnect = this.connect.bind(this)\n\n  cancelWebsocketRetry?: () => void\n\n  async connect() {\n    if (this.status === WebSocketStatus.Connected) {\n      return\n    }\n\n    // Always cancel any previously initiated connection retryer instances\n    if (this.cancelWebsocketRetry) {\n      this.cancelWebsocketRetry()\n      this.cancelWebsocketRetry = undefined\n    }\n\n    this.shouldConnect = true\n\n    const abortableRetry = () => {\n      let cancelAttempt = false\n\n      const retryPromise = retry(this.createWebSocketConnection.bind(this), {\n        delay: this.configuration.delay,\n        initialDelay: this.configuration.initialDelay,\n        factor: this.configuration.factor,\n        maxAttempts: this.configuration.maxAttempts,\n        minDelay: this.configuration.minDelay,\n        maxDelay: this.configuration.maxDelay,\n        jitter: this.configuration.jitter,\n        timeout: this.configuration.timeout,\n        beforeAttempt: context => {\n          if (!this.shouldConnect || cancelAttempt) {\n            context.abort()\n          }\n        },\n      }).catch((error: any) => {\n        // If we aborted the connection attempt then don’t throw an error\n        // ref: https://github.com/lifeomic/attempt/blob/master/src/index.ts#L136\n        if (error && error.code !== 'ATTEMPT_ABORTED') {\n          throw error\n        }\n      })\n\n      return {\n        retryPromise,\n        cancelFunc: () => {\n          cancelAttempt = true\n        },\n      }\n    }\n\n    const { retryPromise, cancelFunc } = abortableRetry()\n    this.cancelWebsocketRetry = cancelFunc\n\n    return retryPromise\n  }\n\n  createWebSocketConnection() {\n    return new Promise((resolve, reject) => {\n      if (this.webSocket) {\n        this.webSocket.close()\n        this.webSocket = null\n      }\n\n      // Init the WebSocket connection\n      const ws = new this.configuration.WebSocketPolyfill(this.url)\n      ws.binaryType = 'arraybuffer'\n      ws.onmessage = (payload: any) => this.emit('message', payload)\n      ws.onclose = (payload: any) => this.emit('close', { event: payload })\n      ws.onopen = (payload: any) => this.emit('open', payload)\n      ws.onerror = (err: any) => {\n        reject(err)\n      }\n      this.webSocket = ws\n\n      // Reset the status\n      this.status = WebSocketStatus.Connecting\n      this.emit('status', { status: WebSocketStatus.Connecting })\n\n      // Store resolve/reject for later use\n      this.connectionAttempt = {\n        resolve,\n        reject,\n      }\n    })\n  }\n\n  onMessage(event: MessageEvent) {\n    this.resolveConnectionAttempt()\n  }\n\n  resolveConnectionAttempt() {\n    if (this.connectionAttempt) {\n      this.connectionAttempt.resolve()\n      this.connectionAttempt = null\n\n      this.status = WebSocketStatus.Connected\n      this.emit('status', { status: WebSocketStatus.Connected })\n      this.emit('connect')\n    }\n  }\n\n  stopConnectionAttempt() {\n    this.connectionAttempt = null\n  }\n\n  rejectConnectionAttempt() {\n    this.connectionAttempt?.reject()\n    this.connectionAttempt = null\n  }\n\n  checkConnection() {\n    // Don’t check the connection when it’s not even established\n    if (this.status !== WebSocketStatus.Connected) {\n      return\n    }\n\n    // Don’t close then connection while waiting for the first message\n    if (!this.lastMessageReceived) {\n      return\n    }\n\n    // Don’t close the connection when a message was received recently\n    if (this.configuration.messageReconnectTimeout >= time.getUnixTime() - this.lastMessageReceived) {\n      return\n    }\n\n    // No message received in a long time, not even your own\n    // Awareness updates, which are updated every 15 seconds.\n    this.webSocket?.close()\n  }\n\n  registerEventListeners() {\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.addEventListener('online', this.boundConnect)\n  }\n\n  // Ensure that the URL always ends with /\n  get serverUrl() {\n    while (this.configuration.url[this.configuration.url.length - 1] === '/') {\n      return this.configuration.url.slice(0, this.configuration.url.length - 1)\n    }\n\n    return this.configuration.url\n  }\n\n  get url() {\n    const encodedParams = url.encodeQueryParams(this.configuration.parameters)\n\n    return `${this.serverUrl}${encodedParams.length === 0 ? '' : `?${encodedParams}`}`\n  }\n\n  disconnect() {\n    this.shouldConnect = false\n\n    if (this.webSocket === null) {\n      return\n    }\n\n    try {\n      this.webSocket.close()\n    } catch {\n      //\n    }\n  }\n\n  send(message: any) {\n    if (this.webSocket?.readyState === WsReadyStates.Open) {\n      this.webSocket.send(message)\n    }\n  }\n\n  onClose({ event }: onCloseParameters) {\n    this.webSocket = null\n\n    if (this.status === WebSocketStatus.Connected) {\n      this.status = WebSocketStatus.Disconnected\n      this.emit('status', { status: WebSocketStatus.Disconnected })\n      this.emit('disconnect', { event })\n    }\n\n    if (event.code === Unauthorized.code) {\n      if (event.reason === Unauthorized.reason) {\n        console.warn('[HocuspocusProvider] An authentication token is required, but you didn’t send one. Try adding a `token` to your HocuspocusProvider configuration. Won’t try again.')\n      } else {\n        console.warn(`[HocuspocusProvider] Connection closed with status Unauthorized: ${event.reason}`)\n      }\n\n      this.shouldConnect = false\n    }\n\n    if (event.code === Forbidden.code) {\n      if (!this.configuration.quiet) {\n        console.warn('[HocuspocusProvider] The provided authentication token isn’t allowed to connect to this server. Will try again.')\n        return // TODO REMOVE ME\n      }\n    }\n\n    if (event.code === MessageTooBig.code) {\n      console.warn(`[HocuspocusProvider] Connection closed with status MessageTooBig: ${event.reason}`)\n      this.shouldConnect = false\n    }\n\n    if (this.connectionAttempt) {\n      // That connection attempt failed.\n      this.rejectConnectionAttempt()\n    } else if (this.shouldConnect) {\n      // The connection was closed by the server. Let’s just try again.\n      this.connect()\n    }\n\n    // If we’ll reconnect, we’re done for now.\n    if (this.shouldConnect) {\n      return\n    }\n\n    // The status is set correctly already.\n    if (this.status === WebSocketStatus.Disconnected) {\n      return\n    }\n\n    // Let’s update the connection status.\n    this.status = WebSocketStatus.Disconnected\n    this.emit('status', { status: WebSocketStatus.Disconnected })\n    this.emit('disconnect', { event })\n  }\n\n  destroy() {\n    this.emit('destroy')\n\n    if (this.intervals.forceSync) {\n      clearInterval(this.intervals.forceSync)\n    }\n\n    clearInterval(this.intervals.connectionChecker)\n\n    // If there is still a connection attempt outstanding then we should stop\n    // it before calling disconnect, otherwise it will be rejected in the onClose\n    // handler and trigger a retry\n    this.stopConnectionAttempt()\n\n    this.disconnect()\n\n    this.removeAllListeners()\n\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.removeEventListener('online', this.boundConnect)\n  }\n\n}\n","import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class StatelessMessage extends OutgoingMessage {\n  type = MessageType.Stateless\n\n  description = 'A stateless message'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n    writeVarString(this.encoder, args.payload ?? '')\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class CloseMessage extends OutgoingMessage {\n  type = MessageType.CLOSE\n\n  description = 'Ask the server to close the connection'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    return this.encoder\n  }\n}\n","import * as Y from 'yjs'\nimport * as bc from 'lib0/broadcastchannel'\nimport { Awareness, removeAwarenessStates } from 'y-protocols/awareness'\nimport * as mutex from 'lib0/mutex'\nimport type { CloseEvent, Event, MessageEvent } from 'ws'\nimport { awarenessStatesToArray } from '@hocuspocus/common'\nimport EventEmitter from './EventEmitter.js'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { MessageReceiver } from './MessageReceiver.js'\nimport { MessageSender } from './MessageSender.js'\nimport { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js'\nimport { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js'\nimport { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js'\nimport { AuthenticationMessage } from './OutgoingMessages/AuthenticationMessage.js'\nimport { AwarenessMessage } from './OutgoingMessages/AwarenessMessage.js'\nimport { UpdateMessage } from './OutgoingMessages/UpdateMessage.js'\nimport {\n  ConstructableOutgoingMessage,\n  onAuthenticationFailedParameters,\n  onCloseParameters,\n  onDisconnectParameters,\n  onMessageParameters,\n  onOpenParameters,\n  onOutgoingMessageParameters, onStatelessParameters,\n  onStatusParameters,\n  onSyncedParameters,\n  WebSocketStatus,\n  onAwarenessChangeParameters,\n  onAwarenessUpdateParameters,\n} from './types.js'\nimport {\n  CompleteHocuspocusProviderWebsocketConfiguration,\n  HocuspocusProviderWebsocket,\n} from './HocuspocusProviderWebsocket.js'\nimport { StatelessMessage } from './OutgoingMessages/StatelessMessage.js'\nimport { CloseMessage } from './OutgoingMessages/CloseMessage.js'\n\nexport type HocuspocusProviderConfiguration =\n  Required<Pick<CompleteHocuspocusProviderConfiguration, 'name'>>\n    & Partial<CompleteHocuspocusProviderConfiguration> & (\n  Required<Pick<CompleteHocuspocusProviderWebsocketConfiguration, 'url'>> |\n  Required<Pick<CompleteHocuspocusProviderConfiguration, 'websocketProvider'>>\n  )\n\nexport interface CompleteHocuspocusProviderConfiguration {\n   /**\n    * The identifier/name of your document\n    */\n   name: string,\n  /**\n   * The actual Y.js document\n   */\n  document: Y.Doc,\n\n  /**\n   * Pass false to disable broadcasting between browser tabs.\n   */\n  broadcast: boolean,\n  /**\n   * An Awareness instance to keep the presence state of all clients.\n   */\n  awareness: Awareness,\n  /**\n   * A token that’s sent to the backend for authentication purposes.\n   */\n  token: string | (() => string) | (() => Promise<string>) | null,\n  /**\n   * URL parameters that should be added.\n   */\n  parameters: { [key: string]: any },\n  /**\n   * Hocuspocus websocket provider\n   */\n  websocketProvider: HocuspocusProviderWebsocket,\n  /**\n   * Force syncing the document in the defined interval.\n   */\n  forceSyncInterval: false | number,\n\n  onAuthenticated: () => void,\n  onAuthenticationFailed: (data: onAuthenticationFailedParameters) => void,\n  onOpen: (data: onOpenParameters) => void,\n  onConnect: () => void,\n  onMessage: (data: onMessageParameters) => void,\n  onOutgoingMessage: (data: onOutgoingMessageParameters) => void,\n  onStatus: (data: onStatusParameters) => void,\n  onSynced: (data: onSyncedParameters) => void,\n  onDisconnect: (data: onDisconnectParameters) => void,\n  onClose: (data: onCloseParameters) => void,\n  onDestroy: () => void,\n  onAwarenessUpdate: (data: onAwarenessUpdateParameters) => void,\n  onAwarenessChange: (data: onAwarenessChangeParameters) => void,\n  onStateless: (data: onStatelessParameters) => void\n\n  /**\n   * Don’t output any warnings.\n   */\n  quiet: boolean,\n}\n\nexport class HocuspocusProvider extends EventEmitter {\n  public configuration: CompleteHocuspocusProviderConfiguration = {\n    name: '',\n    // @ts-ignore\n    document: undefined,\n    // @ts-ignore\n    awareness: undefined,\n    token: null,\n    parameters: {},\n    broadcast: true,\n    forceSyncInterval: false,\n    onAuthenticated: () => null,\n    onAuthenticationFailed: () => null,\n    onOpen: () => null,\n    onConnect: () => null,\n    onMessage: () => null,\n    onOutgoingMessage: () => null,\n    onStatus: () => null,\n    onSynced: () => null,\n    onDisconnect: () => null,\n    onClose: () => null,\n    onDestroy: () => null,\n    onAwarenessUpdate: () => null,\n    onAwarenessChange: () => null,\n    onStateless: () => null,\n    quiet: false,\n  }\n\n  subscribedToBroadcastChannel = false\n\n  isSynced = false\n\n  unsyncedChanges = 0\n\n  status = WebSocketStatus.Disconnected\n\n  isAuthenticated = false\n\n  authorizedScope: string | undefined = undefined\n\n  mux = mutex.createMutex()\n\n  intervals: any = {\n    forceSync: null,\n  }\n\n  isConnected = true\n\n  constructor(configuration: HocuspocusProviderConfiguration) {\n    super()\n    this.setConfiguration(configuration)\n\n    this.configuration.document = configuration.document ? configuration.document : new Y.Doc()\n    this.configuration.awareness = configuration.awareness ? configuration.awareness : new Awareness(this.document)\n\n    this.on('open', this.configuration.onOpen)\n    this.on('message', this.configuration.onMessage)\n    this.on('outgoingMessage', this.configuration.onOutgoingMessage)\n    this.on('synced', this.configuration.onSynced)\n    this.on('destroy', this.configuration.onDestroy)\n    this.on('awarenessUpdate', this.configuration.onAwarenessUpdate)\n    this.on('awarenessChange', this.configuration.onAwarenessChange)\n    this.on('stateless', this.configuration.onStateless)\n\n    this.on('authenticated', this.configuration.onAuthenticated)\n    this.on('authenticationFailed', this.configuration.onAuthenticationFailed)\n\n    this.configuration.websocketProvider.on('connect', this.configuration.onConnect)\n    this.configuration.websocketProvider.on('connect', (e: Event) => this.emit('connect', e))\n\n    this.configuration.websocketProvider.on('open', this.onOpen.bind(this))\n    this.configuration.websocketProvider.on('open', (e: Event) => this.emit('open', e))\n\n    this.configuration.websocketProvider.on('message', this.onMessage.bind(this))\n\n    this.configuration.websocketProvider.on('close', this.onClose.bind(this))\n    this.configuration.websocketProvider.on('close', this.configuration.onClose)\n    this.configuration.websocketProvider.on('close', (e: Event) => this.emit('close', e))\n\n    this.configuration.websocketProvider.on('status', this.onStatus.bind(this))\n\n    this.configuration.websocketProvider.on('disconnect', this.configuration.onDisconnect)\n    this.configuration.websocketProvider.on('disconnect', (e: Event) => this.emit('disconnect', e))\n\n    this.configuration.websocketProvider.on('destroy', this.configuration.onDestroy)\n    this.configuration.websocketProvider.on('destroy', (e: Event) => this.emit('destroy', e))\n\n    this.awareness.on('update', () => {\n      this.emit('awarenessUpdate', { states: awarenessStatesToArray(this.awareness.getStates()) })\n    })\n\n    this.awareness.on('change', () => {\n      this.emit('awarenessChange', { states: awarenessStatesToArray(this.awareness.getStates()) })\n    })\n\n    this.document.on('update', this.documentUpdateHandler.bind(this))\n    this.awareness.on('update', this.awarenessUpdateHandler.bind(this))\n    this.registerEventListeners()\n\n    if (this.configuration.forceSyncInterval) {\n      this.intervals.forceSync = setInterval(\n        this.forceSync.bind(this),\n        this.configuration.forceSyncInterval,\n      )\n    }\n\n    this.configuration.websocketProvider.attach(this)\n  }\n\n  public onStatus({ status } : onStatusParameters) {\n    this.status = status\n\n    this.configuration.onStatus({ status })\n    this.emit('status', { status })\n  }\n\n  public setConfiguration(configuration: Partial<HocuspocusProviderConfiguration> = {}): void {\n    if (!configuration.websocketProvider && (configuration as CompleteHocuspocusProviderWebsocketConfiguration).url) {\n      const websocketProviderConfig = configuration as CompleteHocuspocusProviderWebsocketConfiguration\n\n      this.configuration.websocketProvider = new HocuspocusProviderWebsocket({\n        url: websocketProviderConfig.url,\n        parameters: websocketProviderConfig.parameters,\n      })\n    }\n\n    this.configuration = { ...this.configuration, ...configuration }\n  }\n\n  get document() {\n    return this.configuration.document\n  }\n\n  get awareness() {\n    return this.configuration.awareness\n  }\n\n  get hasUnsyncedChanges(): boolean {\n    return this.unsyncedChanges > 0\n  }\n\n  updateUnsyncedChanges(unsyncedChanges = 0) {\n    this.unsyncedChanges += unsyncedChanges\n    this.emit('unsyncedChanges', this.unsyncedChanges)\n  }\n\n  forceSync() {\n    this.send(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name })\n  }\n\n  boundBeforeUnload = this.beforeUnload.bind(this)\n\n  beforeUnload() {\n    removeAwarenessStates(this.awareness, [this.document.clientID], 'window unload')\n  }\n\n  registerEventListeners() {\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.addEventListener('beforeunload', this.boundBeforeUnload)\n  }\n\n  sendStateless(payload: string) {\n    this.send(StatelessMessage, { documentName: this.configuration.name, payload })\n  }\n\n  documentUpdateHandler(update: Uint8Array, origin: any) {\n    if (origin === this) {\n      return\n    }\n\n    this.updateUnsyncedChanges(1)\n    this.send(UpdateMessage, { update, documentName: this.configuration.name }, true)\n  }\n\n  awarenessUpdateHandler({ added, updated, removed }: any, origin: any) {\n    const changedClients = added.concat(updated).concat(removed)\n\n    this.send(AwarenessMessage, {\n      awareness: this.awareness,\n      clients: changedClients,\n      documentName: this.configuration.name,\n    }, true)\n  }\n\n  get synced(): boolean {\n    return this.isSynced\n  }\n\n  set synced(state) {\n    if (this.isSynced === state) {\n      return\n    }\n\n    if (state && this.unsyncedChanges > 0) {\n      this.updateUnsyncedChanges(-1 * this.unsyncedChanges)\n    }\n\n    this.isSynced = state\n    this.emit('synced', { state })\n    this.emit('sync', { state })\n  }\n\n  receiveStateless(payload: string) {\n    this.emit('stateless', { payload })\n  }\n\n  get isAuthenticationRequired(): boolean {\n    return !!this.configuration.token && !this.isAuthenticated\n  }\n\n  // not needed, but provides backward compatibility with e.g. lexicla/yjs\n  async connect() {\n    return this.configuration.websocketProvider.connect()\n  }\n\n  disconnect() {\n    this.disconnectBroadcastChannel()\n    this.configuration.websocketProvider.detach(this)\n  }\n\n  async onOpen(event: Event) {\n    this.isAuthenticated = false\n\n    this.emit('open', { event })\n\n    if (this.isAuthenticationRequired) {\n      this.send(AuthenticationMessage, {\n        token: await this.getToken(),\n        documentName: this.configuration.name,\n      })\n    }\n\n    this.startSync()\n  }\n\n  async getToken() {\n    if (typeof this.configuration.token === 'function') {\n      const token = await this.configuration.token()\n      return token\n    }\n\n    return this.configuration.token\n  }\n\n  startSync() {\n    this.send(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name })\n\n    if (this.awareness.getLocalState() !== null) {\n      this.send(AwarenessMessage, {\n        awareness: this.awareness,\n        clients: [this.document.clientID],\n        documentName: this.configuration.name,\n      })\n    }\n  }\n\n  send(message: ConstructableOutgoingMessage, args: any, broadcast = false) {\n    if (!this.isConnected) return\n\n    if (broadcast) {\n      this.mux(() => { this.broadcast(message, args) })\n    }\n\n    const messageSender = new MessageSender(message, args)\n\n    this.emit('outgoingMessage', { message: messageSender.message })\n    messageSender.send(this.configuration.websocketProvider)\n  }\n\n  onMessage(event: MessageEvent) {\n    const message = new IncomingMessage(event.data)\n\n    const documentName = message.readVarString()\n\n    if (documentName !== this.configuration.name) {\n      return // message is meant for another provider\n    }\n\n    message.writeVarString(documentName)\n\n    this.emit('message', { event, message: new IncomingMessage(event.data) })\n\n    new MessageReceiver(message).apply(this)\n  }\n\n  onClose(event: CloseEvent) {\n    this.isAuthenticated = false\n    this.synced = false\n\n    // update awareness (all users except local left)\n    removeAwarenessStates(\n      this.awareness,\n      Array.from(this.awareness.getStates().keys()).filter(client => client !== this.document.clientID),\n      this,\n    )\n  }\n\n  destroy() {\n    this.emit('destroy')\n\n    if (this.intervals.forceSync) {\n      clearInterval(this.intervals.forceSync)\n    }\n\n    removeAwarenessStates(this.awareness, [this.document.clientID], 'provider destroy')\n\n    this.disconnect()\n\n    this.awareness.off('update', this.awarenessUpdateHandler)\n    this.document.off('update', this.documentUpdateHandler)\n\n    this.removeAllListeners()\n\n    this.send(CloseMessage, { documentName: this.configuration.name })\n    this.isConnected = false\n\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.removeEventListener('beforeunload', this.boundBeforeUnload)\n  }\n\n  permissionDeniedHandler(reason: string) {\n    this.emit('authenticationFailed', { reason })\n    this.isAuthenticated = false\n    this.disconnect()\n    this.status = WebSocketStatus.Disconnected\n  }\n\n  authenticatedHandler(scope: string) {\n    this.isAuthenticated = true\n    this.authorizedScope = scope\n\n    this.emit('authenticated')\n    this.startSync()\n  }\n\n  get broadcastChannel() {\n    return `${this.configuration.name}`\n  }\n\n  boundBroadcastChannelSubscriber = this.broadcastChannelSubscriber.bind(this)\n\n  broadcastChannelSubscriber(data: ArrayBuffer) {\n    this.mux(() => {\n      const message = new IncomingMessage(data)\n\n      const documentName = message.readVarString()\n\n      message.writeVarString(documentName)\n\n      new MessageReceiver(message)\n        .setBroadcasted(true)\n        .apply(this, false)\n    })\n  }\n\n  subscribeToBroadcastChannel() {\n    if (!this.subscribedToBroadcastChannel) {\n      bc.subscribe(this.broadcastChannel, this.boundBroadcastChannelSubscriber)\n      this.subscribedToBroadcastChannel = true\n    }\n\n    this.mux(() => {\n      this.broadcast(SyncStepOneMessage, { document: this.document })\n      this.broadcast(SyncStepTwoMessage, { document: this.document })\n      this.broadcast(QueryAwarenessMessage, { document: this.document })\n      this.broadcast(AwarenessMessage, { awareness: this.awareness, clients: [this.document.clientID], document: this.document })\n    })\n  }\n\n  disconnectBroadcastChannel() {\n    // broadcast message with local awareness state set to null (indicating disconnect)\n    this.send(AwarenessMessage, {\n      awareness: this.awareness,\n      clients: [this.document.clientID],\n      states: new Map(),\n      documentName: this.configuration.name,\n    }, true)\n\n    if (this.subscribedToBroadcastChannel) {\n      bc.unsubscribe(this.broadcastChannel, this.boundBroadcastChannelSubscriber)\n      this.subscribedToBroadcastChannel = false\n    }\n  }\n\n  broadcast(Message: ConstructableOutgoingMessage, args?: any) {\n    if (!this.configuration.broadcast) {\n      return\n    }\n\n    if (!this.subscribedToBroadcastChannel) {\n      return\n    }\n\n    new MessageSender(Message, args).broadcast(this.broadcastChannel)\n  }\n\n  setAwarenessField(key: string, value: any) {\n    this.awareness.setLocalStateField(key, value)\n  }\n}\n","import {\n  CompleteHocuspocusProviderWebsocketConfiguration,\n  HocuspocusProviderWebsocket, HocuspocusProviderWebsocketConfiguration,\n} from './HocuspocusProviderWebsocket.js'\n\nexport type TiptapCollabProviderWebsocketConfiguration =\n  Partial<CompleteHocuspocusProviderWebsocketConfiguration> &\n  AdditionalTiptapCollabProviderWebsocketConfiguration\n\nexport interface AdditionalTiptapCollabProviderWebsocketConfiguration {\n  /**\n   * A Hocuspocus Cloud App ID, get one here: https://collab.tiptap.dev\n   */\n  appId: string,\n}\n\nexport class TiptapCollabProviderWebsocket extends HocuspocusProviderWebsocket {\n  constructor(configuration: TiptapCollabProviderWebsocketConfiguration) {\n    super({ ...configuration as HocuspocusProviderWebsocketConfiguration, url: `wss://${configuration.appId}.collab.tiptap.cloud` })\n  }\n}\n","import {\n  HocuspocusProvider,\n  HocuspocusProviderConfiguration,\n} from './HocuspocusProvider.js'\n\nimport { TiptapCollabProviderWebsocket } from './TiptapCollabProviderWebsocket.js'\n\nexport type TiptapCollabProviderConfiguration =\n  Required<Pick<HocuspocusProviderConfiguration, 'name'>> &\n  Partial<HocuspocusProviderConfiguration> &\n  AdditionalTiptapCollabProviderConfiguration\n\nexport interface AdditionalTiptapCollabProviderConfiguration {\n  /**\n   * A Hocuspocus Cloud App ID, get one here: https://collab.tiptap.dev\n   */\n  appId: string,\n}\n\nexport class TiptapCollabProvider extends HocuspocusProvider {\n  constructor(configuration: TiptapCollabProviderConfiguration) {\n    if (!configuration.websocketProvider) {\n      configuration.websocketProvider = new TiptapCollabProviderWebsocket({ appId: configuration.appId })\n    }\n\n    if (!configuration.token) {\n      configuration.token = 'notoken' // need to send a token anyway (which will be ignored)\n    }\n\n    super(configuration as HocuspocusProviderConfiguration)\n  }\n}\n"],"names":["create","length","object.length","object.hasProperty","map.create","string.fromCamelCase","conditions.undefinedToNull","storage.varStorage","f.isOneOf","buffer.createUint8ArrayViewFromArrayBuffer","binary.BITS7","binary.BIT8","math.floor","string.utf8TextEncoder","string.encodeUtf8","math.min","math.max","error.create","number.MAX_SAFE_INTEGER","string.utf8TextDecoder","string.fromCharCode","env.isBrowser","buffer.fromBase64","storage.onChange","buffer.toBase64","buffer.createUint8ArrayFromArrayBuffer","storage.offChange","map.setIfUndefined","set.create","array.from","time.getUnixTime","f.equalityDeep","encoding.createEncoder","encoding.writeVarUint","encoding.writeVarString","encoding.toUint8Array","decoding.createDecoder","decoding.readVarUint","decoding.readVarString","encoding.writeVarUint8Array","decoding.readVarUint8Array","awarenessProtocol.applyAwarenessUpdate","awarenessProtocol.encodeAwarenessUpdate","bc.publish","syncProtocol.writeSyncStep1","syncProtocol.writeSyncStep2","object.map","mutex.createMutex","url.encodeQueryParams","bc.subscribe","bc.unsubscribe"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"hocuspocus-provider.esm.js","sources":["../../../node_modules/lib0/map.js","../../../node_modules/lib0/set.js","../../../node_modules/lib0/array.js","../../../node_modules/lib0/string.js","../../../node_modules/lib0/conditions.js","../../../node_modules/lib0/storage.js","../../../node_modules/lib0/object.js","../../../node_modules/lib0/function.js","../../../node_modules/lib0/environment.js","../../../node_modules/lib0/math.js","../../../node_modules/lib0/binary.js","../../../node_modules/lib0/number.js","../../../node_modules/lib0/encoding.js","../../../node_modules/lib0/error.js","../../../node_modules/lib0/decoding.js","../../../node_modules/lib0/buffer.js","../../../node_modules/lib0/broadcastchannel.js","../../../node_modules/lib0/mutex.js","../../../node_modules/lib0/time.js","../../../node_modules/lib0/observable.js","../../../node_modules/y-protocols/awareness.js","../src/EventEmitter.ts","../../../node_modules/lib0/url.js","../src/types.ts","../src/HocuspocusProviderWebsocket.ts","../src/IncomingMessage.ts","../../../node_modules/y-protocols/sync.js","../src/OutgoingMessage.ts","../src/MessageReceiver.ts","../src/MessageSender.ts","../src/OutgoingMessages/AuthenticationMessage.ts","../src/OutgoingMessages/AwarenessMessage.ts","../src/OutgoingMessages/CloseMessage.ts","../src/OutgoingMessages/QueryAwarenessMessage.ts","../src/OutgoingMessages/StatelessMessage.ts","../src/OutgoingMessages/SyncStepOneMessage.ts","../src/OutgoingMessages/SyncStepTwoMessage.ts","../src/OutgoingMessages/UpdateMessage.ts","../src/HocuspocusProvider.ts","../src/TiptapCollabProviderWebsocket.ts","../src/TiptapCollabProvider.ts"],"sourcesContent":["/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template V,K\n * @template {Map<K,V>} MAP\n * @param {MAP} map\n * @param {K} key\n * @param {function():V} createT\n * @return {V}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set =>\n  set.values().next().value || undefined\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => new Set(entries)\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => fold(arr, /** @type {Array<ELEM>} */ ([]), (acc, val) => acc.concat(val))\n\n/**\n * @template T\n * @param {number} len\n * @param {function(number, Array<T>):T} f\n * @return {Array<T>}\n */\nexport const unfold = (len, f) => {\n  const array = new Array(len)\n  for (let i = 0; i < len; i++) {\n    array[i] = f(i, array)\n  }\n  return array\n}\n\n/**\n * @template T\n * @template RESULT\n * @param {Array<T>} arr\n * @param {RESULT} seed\n * @param {function(RESULT, T, number):RESULT} folder\n */\nexport const fold = (arr, seed, folder) => arr.reduce(folder, seed)\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n","import * as array from './array.js'\n\n/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * The largest utf16 character.\n * Corresponds to Uint8Array([255, 255]) or charcodeof(2x2^8)\n */\nexport const MAX_UTF16_CHARACTER = fromCharCode(65535)\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* c8 ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* c8 ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* c8 ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* c8 ignore start */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* c8 ignore next */\n  utf8TextDecoder = null\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* c8 ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n\n/**\n * @param {string} str The initial string\n * @param {number} index Starting position\n * @param {number} remove Number of characters to remove\n * @param {string} insert New content to insert\n */\nexport const splice = (str, index, remove, insert = '') => str.slice(0, index) + insert + str.slice(index + remove)\n\n/**\n * @param {string} source\n * @param {number} n\n */\nexport const repeat = (source, n) => array.unfold(n, () => source).join('')\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* c8 ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* eslint-env browser */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* c8 ignore start */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\n/* c8 ignore start */\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n/* c8 ignore stop */\n\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\n/* c8 ignore next */\nexport const varStorage = _localStorage\n\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n\n/**\n * A polyfill for `removeEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\n/* c8 ignore next */\nexport const offChange = eventHandler => usePolyfill || removeEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @template V\n * @param {{[k:string]:V}} obj\n * @param {function(V,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @todo implement mapToArray & map\n *\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((array.isArray(a) && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/* c8 ignore start */\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n/* c8 ignore stop */\n\nexport const isArray = array.isArray\n\n/**\n * @param {any} s\n * @return {s is String}\n */\nexport const isString = (s) => s && s.constructor === String\n\n/**\n * @param {any} n\n * @return {n is Number}\n */\nexport const isNumber = n => n != null && n.constructor === Number\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {any} n\n * @param {TYPE} T\n * @return {n is InstanceType<TYPE>}\n */\nexport const is = (n, T) => n && n.constructor === T\n\n/**\n * @template {abstract new (...args: any) => any} TYPE\n * @param {TYPE} T\n */\nexport const isTemplate = (T) =>\n  /**\n   * @param {any} n\n   * @return {n is InstanceType<TYPE>}\n   **/\n  n => n && n.constructor === T\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release &&\n  /node|io\\.js/.test(process.release.name)\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n/* c8 ignore stop */\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\nexport const HIGHEST_INT32 = binary.BITS31\nexport const HIGHEST_UINT32 = binary.BITS32\n\n/* c8 ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\nexport const parseInt = Number.parseInt\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\nimport * as string from './string.js'\nimport * as array from './array.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * @param {function(Encoder):void} f\n */\nexport const encode = (f) => {\n  const encoder = createEncoder()\n  f(encoder)\n  return toUint8Array(encoder)\n}\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Check whether encoder is empty.\n *\n * @function\n * @param {Encoder} encoder\n * @return {boolean}\n */\nexport const hasContent = encoder => encoder.cpos > 0 || encoder.bufs.length > 0\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nexport const verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer. Max encodable integer is 2^53.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num = math.floor(num / 64) // shift >>> 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num = math.floor(num / 128) // shift >>> 7\n  }\n}\n\n/**\n * A cache to store strings temporarily\n */\nconst _strBuffer = new Uint8Array(30000)\nconst _maxStrBSize = _strBuffer.length / 3\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringNative = (encoder, str) => {\n  if (str.length < _maxStrBSize) {\n    // We can encode the string into the existing buffer\n    /* c8 ignore next */\n    const written = string.utf8TextEncoder.encodeInto(str, _strBuffer).written || 0\n    writeVarUint(encoder, written)\n    for (let i = 0; i < written; i++) {\n      write(encoder, _strBuffer[i])\n    }\n  } else {\n    writeVarUint8Array(encoder, string.encodeUtf8(str))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const _writeVarStringPolyfill = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\n/* c8 ignore next */\nexport const writeVarString = (string.utf8TextEncoder && /** @type {any} */ (string.utf8TextEncoder).encodeInto) ? _writeVarStringNative : _writeVarStringPolyfill\n\n/**\n * Write a string terminated by a special byte sequence. This is not very performant and is\n * generally discouraged. However, the resulting byte arrays are lexiographically ordered which\n * makes this a nice feature for databases.\n *\n * The string will be encoded using utf8 and then terminated and escaped using writeTerminatingUint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeTerminatedString = (encoder, str) =>\n  writeTerminatedUint8Array(encoder, string.encodeUtf8(str))\n\n/**\n * Write a terminating Uint8Array. Note that this is not performant and is generally\n * discouraged. There are few situations when this is needed.\n *\n * We use 0x0 as a terminating character. 0x1 serves as an escape character for 0x0 and 0x1.\n *\n * Example: [0,1,2] is encoded to [1,0,1,1,2,0]. 0x0, and 0x1 needed to be escaped using 0x1. Then\n * the result is terminated using the 0x0 character.\n *\n * This is basically how many systems implement null terminated strings. However, we use an escape\n * character 0x1 to avoid issues and potenial attacks on our database (if this is used as a key\n * encoder for NoSql databases).\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} buf The string that is to be encoded.\n */\nexport const writeTerminatedUint8Array = (encoder, buf) => {\n  for (let i = 0; i < buf.length; i++) {\n    const b = buf[i]\n    if (b === 0 || b === 1) {\n      write(encoder, 1)\n    }\n    write(encoder, buf[i])\n  }\n  write(encoder, 0)\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && math.abs(data) <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (array.isArray(data)) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    // const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    const encodedDiff = encoder.diff * 2 + (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* c8 ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* c8 ignore next 3 */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Efficient schema-less binary decoding with support for variable length encoding.\n *\n * Use [lib0/decoding] with [lib0/encoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module decoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as binary from './binary.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as string from './string.js'\nimport * as error from './error.js'\nimport * as encoding from './encoding.js'\n\nconst errorUnexpectedEndOfArray = error.create('Unexpected end of array')\nconst errorIntegerOutOfRange = error.create('Integer out of Range')\n\n/**\n * A Decoder handles the decoding of an Uint8Array.\n */\nexport class Decoder {\n  /**\n   * @param {Uint8Array} uint8Array Binary data to decode\n   */\n  constructor (uint8Array) {\n    /**\n     * Decoding target.\n     *\n     * @type {Uint8Array}\n     */\n    this.arr = uint8Array\n    /**\n     * Current decoding position.\n     *\n     * @type {number}\n     */\n    this.pos = 0\n  }\n}\n\n/**\n * @function\n * @param {Uint8Array} uint8Array\n * @return {Decoder}\n */\nexport const createDecoder = uint8Array => new Decoder(uint8Array)\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {boolean}\n */\nexport const hasContent = decoder => decoder.pos !== decoder.arr.length\n\n/**\n * Clone a decoder instance.\n * Optionally set a new position parameter.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} [newPos] Defaults to current position\n * @return {Decoder} A clone of `decoder`\n */\nexport const clone = (decoder, newPos = decoder.pos) => {\n  const _decoder = createDecoder(decoder.arr)\n  _decoder.pos = newPos\n  return _decoder\n}\n\n/**\n * Create an Uint8Array view of the next `len` bytes and advance the position by `len`.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder The decoder instance\n * @param {number} len The length of bytes to read\n * @return {Uint8Array}\n */\nexport const readUint8Array = (decoder, len) => {\n  const view = buffer.createUint8ArrayViewFromArrayBuffer(decoder.arr.buffer, decoder.pos + decoder.arr.byteOffset, len)\n  decoder.pos += len\n  return view\n}\n\n/**\n * Read variable length Uint8Array.\n *\n * Important: The Uint8Array still points to the underlying ArrayBuffer. Make sure to discard the result as soon as possible to prevent any memory leaks.\n *            Use `buffer.copyUint8Array` to copy the result into a new Uint8Array.\n *\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readVarUint8Array = decoder => readUint8Array(decoder, readVarUint(decoder))\n\n/**\n * Read the rest of the content as an ArrayBuffer\n * @function\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTailAsUint8Array = decoder => readUint8Array(decoder, decoder.arr.length - decoder.pos)\n\n/**\n * Skip one byte, jump to the next position.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} The next position\n */\nexport const skip8 = decoder => decoder.pos++\n\n/**\n * Read one byte as unsigned integer.\n * @function\n * @param {Decoder} decoder The decoder instance\n * @return {number} Unsigned 8-bit integer\n */\nexport const readUint8 = decoder => decoder.arr[decoder.pos++]\n\n/**\n * Read 2 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint16 = decoder => {\n  const uint =\n    decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8)\n  decoder.pos += 2\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32 = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos] +\n    (decoder.arr[decoder.pos + 1] << 8) +\n    (decoder.arr[decoder.pos + 2] << 16) +\n    (decoder.arr[decoder.pos + 3] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Read 4 bytes as unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const readUint32BigEndian = decoder => {\n  const uint =\n    (decoder.arr[decoder.pos + 3] +\n    (decoder.arr[decoder.pos + 2] << 8) +\n    (decoder.arr[decoder.pos + 1] << 16) +\n    (decoder.arr[decoder.pos] << 24)) >>> 0\n  decoder.pos += 4\n  return uint\n}\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint8 = decoder => decoder.arr[decoder.pos]\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint16 = decoder =>\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8)\n\n/**\n * Look ahead without incrementing the position\n * to the next byte and read it as unsigned integer.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.\n */\nexport const peekUint32 = decoder => (\n  decoder.arr[decoder.pos] +\n  (decoder.arr[decoder.pos + 1] << 8) +\n  (decoder.arr[decoder.pos + 2] << 16) +\n  (decoder.arr[decoder.pos + 3] << 24)\n) >>> 0\n\n/**\n * Read unsigned integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarUint = decoder => {\n  let num = 0\n  let mult = 1\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    const r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult // shift $r << (7*#iterations) and add it to num\n    mult *= 128 // next iteration, shift 7 \"more\" to the left\n    if (r < binary.BIT8) {\n      return num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Read signed integer (32bit) with variable length.\n * 1/8th of the storage is used as encoding overhead.\n *  * numbers < 2^7 is stored in one bytlength\n *  * numbers < 2^14 is stored in two bylength\n * @todo This should probably create the inverse ~num if number is negative - but this would be a breaking change.\n *\n * @function\n * @param {Decoder} decoder\n * @return {number} An unsigned integer.length\n */\nexport const readVarInt = decoder => {\n  let r = decoder.arr[decoder.pos++]\n  let num = r & binary.BITS6\n  let mult = 64\n  const sign = (r & binary.BIT7) > 0 ? -1 : 1\n  if ((r & binary.BIT8) === 0) {\n    // don't continue reading\n    return sign * num\n  }\n  const len = decoder.arr.length\n  while (decoder.pos < len) {\n    r = decoder.arr[decoder.pos++]\n    // num = num | ((r & binary.BITS7) << len)\n    num = num + (r & binary.BITS7) * mult\n    mult *= 128\n    if (r < binary.BIT8) {\n      return sign * num\n    }\n    /* c8 ignore start */\n    if (num > number.MAX_SAFE_INTEGER) {\n      throw errorIntegerOutOfRange\n    }\n    /* c8 ignore stop */\n  }\n  throw errorUnexpectedEndOfArray\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarUint = decoder => {\n  const pos = decoder.pos\n  const s = readVarUint(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * Look ahead and read varUint without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {number}\n */\nexport const peekVarInt = decoder => {\n  const pos = decoder.pos\n  const s = readVarInt(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * We don't test this function anymore as we use native decoding/encoding by default now.\n * Better not modify this anymore..\n *\n * Transforming utf8 to a string is pretty expensive. The code performs 10x better\n * when String.fromCodePoint is fed with all characters as arguments.\n * But most environments have a maximum number of arguments per functions.\n * For effiency reasons we apply a maximum of 10000 characters at once.\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String.\n */\n/* c8 ignore start */\nexport const _readVarStringPolyfill = decoder => {\n  let remainingLen = readVarUint(decoder)\n  if (remainingLen === 0) {\n    return ''\n  } else {\n    let encodedString = String.fromCodePoint(readUint8(decoder)) // remember to decrease remainingLen\n    if (--remainingLen < 100) { // do not create a Uint8Array for small strings\n      while (remainingLen--) {\n        encodedString += String.fromCodePoint(readUint8(decoder))\n      }\n    } else {\n      while (remainingLen > 0) {\n        const nextLen = remainingLen < 10000 ? remainingLen : 10000\n        // this is dangerous, we create a fresh array view from the existing buffer\n        const bytes = decoder.arr.subarray(decoder.pos, decoder.pos + nextLen)\n        decoder.pos += nextLen\n        // Starting with ES5.1 we can supply a generic array-like object as arguments\n        encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n        remainingLen -= nextLen\n      }\n    }\n    return decodeURIComponent(escape(encodedString))\n  }\n}\n/* c8 ignore stop */\n\n/**\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n */\nexport const _readVarStringNative = decoder =>\n  /** @type any */ (string.utf8TextDecoder).decode(readVarUint8Array(decoder))\n\n/**\n * Read string of variable length\n * * varUint is used to store the length of the string\n *\n * @function\n * @param {Decoder} decoder\n * @return {String} The read String\n *\n */\n/* c8 ignore next */\nexport const readVarString = string.utf8TextDecoder ? _readVarStringNative : _readVarStringPolyfill\n\n/**\n * @param {Decoder} decoder\n * @return {Uint8Array}\n */\nexport const readTerminatedUint8Array = decoder => {\n  const encoder = encoding.createEncoder()\n  let b\n  while (true) {\n    b = readUint8(decoder)\n    if (b === 0) {\n      return encoding.toUint8Array(encoder)\n    }\n    if (b === 1) {\n      b = readUint8(decoder)\n    }\n    encoding.write(encoder, b)\n  }\n}\n\n/**\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const readTerminatedString = decoder => string.decodeUtf8(readTerminatedUint8Array(decoder))\n\n/**\n * Look ahead and read varString without incrementing position\n *\n * @function\n * @param {Decoder} decoder\n * @return {string}\n */\nexport const peekVarString = decoder => {\n  const pos = decoder.pos\n  const s = readVarString(decoder)\n  decoder.pos = pos\n  return s\n}\n\n/**\n * @param {Decoder} decoder\n * @param {number} len\n * @return {DataView}\n */\nexport const readFromDataView = (decoder, len) => {\n  const dv = new DataView(decoder.arr.buffer, decoder.arr.byteOffset + decoder.pos, len)\n  decoder.pos += len\n  return dv\n}\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat32 = decoder => readFromDataView(decoder, 4).getFloat32(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readFloat64 = decoder => readFromDataView(decoder, 8).getFloat64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigInt64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigInt64(0, false)\n\n/**\n * @param {Decoder} decoder\n */\nexport const readBigUint64 = decoder => /** @type {any} */ (readFromDataView(decoder, 8)).getBigUint64(0, false)\n\n/**\n * @type {Array<function(Decoder):any>}\n */\nconst readAnyLookupTable = [\n  decoder => undefined, // CASE 127: undefined\n  decoder => null, // CASE 126: null\n  readVarInt, // CASE 125: integer\n  readFloat32, // CASE 124: float32\n  readFloat64, // CASE 123: float64\n  readBigInt64, // CASE 122: bigint\n  decoder => false, // CASE 121: boolean (false)\n  decoder => true, // CASE 120: boolean (true)\n  readVarString, // CASE 119: string\n  decoder => { // CASE 118: object<string,any>\n    const len = readVarUint(decoder)\n    /**\n     * @type {Object<string,any>}\n     */\n    const obj = {}\n    for (let i = 0; i < len; i++) {\n      const key = readVarString(decoder)\n      obj[key] = readAny(decoder)\n    }\n    return obj\n  },\n  decoder => { // CASE 117: array<any>\n    const len = readVarUint(decoder)\n    const arr = []\n    for (let i = 0; i < len; i++) {\n      arr.push(readAny(decoder))\n    }\n    return arr\n  },\n  readVarUint8Array // CASE 116: Uint8Array\n]\n\n/**\n * @param {Decoder} decoder\n */\nexport const readAny = decoder => readAnyLookupTable[127 - readUint8(decoder)](decoder)\n\n/**\n * T must not be null.\n *\n * @template T\n */\nexport class RleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {function(Decoder):T} reader\n   */\n  constructor (uint8Array, reader) {\n    super(uint8Array)\n    /**\n     * The reader\n     */\n    this.reader = reader\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = this.reader(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {T} */ (this.s)\n  }\n}\n\nexport class IntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    this.s += readVarInt(this)\n    return this.s\n  }\n}\n\nexport class RleIntDiffDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   * @param {number} start\n   */\n  constructor (uint8Array, start) {\n    super(uint8Array)\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      this.s += readVarInt(this)\n      if (hasContent(this)) {\n        this.count = readVarUint(this) + 1 // see encoder implementation for the reason why this is incremented\n      } else {\n        this.count = -1 // read the current value forever\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class UintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s)\n  }\n}\n\nexport class IncUintOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  read () {\n    if (this.count === 0) {\n      this.s = readVarInt(this)\n      // if the sign is negative, we read the count too, otherwise count is 1\n      const isNegative = math.isNegativeZero(this.s)\n      this.count = 1\n      if (isNegative) {\n        this.s = -this.s\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.count--\n    return /** @type {number} */ (this.s++)\n  }\n}\n\nexport class IntDiffOptRleDecoder extends Decoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    super(uint8Array)\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @return {number}\n   */\n  read () {\n    if (this.count === 0) {\n      const diff = readVarInt(this)\n      // if the first bit is set, we read more data\n      const hasCount = diff & 1\n      this.diff = math.floor(diff / 2) // shift >> 1\n      this.count = 1\n      if (hasCount) {\n        this.count = readVarUint(this) + 2\n      }\n    }\n    this.s += this.diff\n    this.count--\n    return this.s\n  }\n}\n\nexport class StringDecoder {\n  /**\n   * @param {Uint8Array} uint8Array\n   */\n  constructor (uint8Array) {\n    this.decoder = new UintOptRleDecoder(uint8Array)\n    this.str = readVarString(this.decoder)\n    /**\n     * @type {number}\n     */\n    this.spos = 0\n  }\n\n  /**\n   * @return {string}\n   */\n  read () {\n    const end = this.spos + this.decoder.read()\n    const res = this.str.slice(this.spos, end)\n    this.spos = end\n    return res\n  }\n}\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* c8 ignore start */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n/* c8 ignore stop */\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* c8 ignore start */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* c8 ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* c8 ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/* eslint-env browser */\n\n/**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */\n\n// @todo before next major: use Uint8Array instead as buffer object\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as buffer from './buffer.js'\nimport * as storage from './storage.js'\n\n/**\n * @typedef {Object} Channel\n * @property {Set<function(any, any):any>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nconst channels = new Map()\n\n/* c8 ignore start */\nclass LocalStoragePolyfill {\n  /**\n   * @param {string} room\n   */\n  constructor (room) {\n    this.room = room\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null\n    /**\n     * @param {any} e\n     */\n    this._onChange = e => e.key === room && this.onmessage !== null && this.onmessage({ data: buffer.fromBase64(e.newValue || '') })\n    storage.onChange(this._onChange)\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  postMessage (buf) {\n    storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)))\n  }\n\n  close () {\n    storage.offChange(this._onChange)\n  }\n}\n/* c8 ignore stop */\n\n// Use BroadcastChannel or Polyfill\n/* c8 ignore next */\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nconst getChannel = room =>\n  map.setIfUndefined(channels, room, () => {\n    const subs = set.create()\n    const bc = new BC(room)\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    /* c8 ignore next */\n    bc.onmessage = e => subs.forEach(sub => sub(e.data, 'broadcastchannel'))\n    return {\n      bc, subs\n    }\n  })\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const subscribe = (room, f) => {\n  getChannel(room).subs.add(f)\n  return f\n}\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const unsubscribe = (room, f) => {\n  const channel = getChannel(room)\n  const unsubscribed = channel.subs.delete(f)\n  if (unsubscribed && channel.subs.size === 0) {\n    channel.bc.close()\n    channels.delete(room)\n  }\n  return unsubscribed\n}\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n * @param {any} [origin]\n */\nexport const publish = (room, data, origin = null) => {\n  const c = getChannel(room)\n  c.bc.postMessage(data)\n  c.subs.forEach(sub => sub(data, origin))\n}\n","/**\n * Mutual exclude for JavaScript.\n *\n * @module mutex\n */\n\n/**\n * @callback mutex\n * @param {function():void} cb Only executed when this mutex is not in the current stack\n * @param {function():void} [elseCb] Executed when this mutex is in the current stack\n */\n\n/**\n * Creates a mutual exclude function with the following property:\n *\n * ```js\n * const mutex = createMutex()\n * mutex(() => {\n *   // This function is immediately executed\n *   mutex(() => {\n *     // This function is not executed, as the mutex is already active.\n *   })\n * })\n * ```\n *\n * @return {mutex} A mutual exclude function\n * @public\n */\nexport const createMutex = () => {\n  let token = true\n  return (f, g) => {\n    if (token) {\n      token = false\n      try {\n        f()\n      } finally {\n        token = true\n      }\n    } else if (g !== undefined) {\n      g()\n    }\n  }\n}\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* c8 ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n","export default class EventEmitter {\n\n  public callbacks: { [key: string]: Function[] } = {}\n\n  public on(event: string, fn: Function): this {\n    if (!this.callbacks[event]) {\n      this.callbacks[event] = []\n    }\n\n    this.callbacks[event].push(fn)\n\n    return this\n  }\n\n  protected emit(event: string, ...args: any): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      callbacks.forEach(callback => callback.apply(this, args))\n    }\n\n    return this\n  }\n\n  public off(event: string, fn?: Function): this {\n    const callbacks = this.callbacks[event]\n\n    if (callbacks) {\n      if (fn) {\n        this.callbacks[event] = callbacks.filter(callback => callback !== fn)\n      } else {\n        delete this.callbacks[event]\n      }\n    }\n\n    return this\n  }\n\n  removeAllListeners(): void {\n    this.callbacks = {}\n  }\n}\n","/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js'\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {}\n  const urlQuerySplit = url.split('?')\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\n  for (let i = 0; i < pairs.length; i++) {\n    const item = pairs[i]\n    if (item.length > 0) {\n      const pair = item.split('=')\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n  }\n  return query\n}\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport const encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\n","import { Encoder } from 'lib0/encoding'\nimport type { CloseEvent, Event, MessageEvent } from 'ws'\nimport { Awareness } from 'y-protocols/awareness'\nimport * as Y from 'yjs'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { OutgoingMessage } from './OutgoingMessage.js'\nimport { AuthenticationMessage } from './OutgoingMessages/AuthenticationMessage.js'\nimport { AwarenessMessage } from './OutgoingMessages/AwarenessMessage.js'\nimport { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js'\nimport { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js'\nimport { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js'\nimport { UpdateMessage } from './OutgoingMessages/UpdateMessage.js'\n\nexport enum MessageType {\n  Sync = 0,\n  Awareness = 1,\n  Auth = 2,\n  QueryAwareness = 3,\n  Stateless = 5,\n  CLOSE = 7,\n  SyncStatus = 8,\n}\n\nexport enum WebSocketStatus {\n  Connecting = 'connecting',\n  Connected = 'connected',\n  Disconnected = 'disconnected',\n}\n\nexport interface OutgoingMessageInterface {\n  encoder: Encoder\n  type?: MessageType\n}\n\nexport interface OutgoingMessageArguments {\n  documentName: string,\n  token: string,\n  document: Y.Doc,\n  awareness: Awareness,\n  clients: number[],\n  states: Map<number, { [key: string]: any; }>,\n  update: any,\n  payload: string,\n  encoder: Encoder,\n}\n\nexport interface Constructable<T> {\n  new(...args: any) : T\n}\n\nexport type ConstructableOutgoingMessage =\n  Constructable<AuthenticationMessage> |\n  Constructable<AwarenessMessage> |\n  Constructable<QueryAwarenessMessage> |\n  Constructable<SyncStepOneMessage> |\n  Constructable<SyncStepTwoMessage> |\n  Constructable<UpdateMessage>\n\nexport type onAuthenticationFailedParameters = {\n  reason: string,\n}\n\nexport type onOpenParameters = {\n  event: Event,\n}\n\nexport type onMessageParameters = {\n  event: MessageEvent,\n  message: IncomingMessage,\n}\n\nexport type onOutgoingMessageParameters = {\n  message: OutgoingMessage,\n}\n\nexport type onStatusParameters = {\n  status: WebSocketStatus,\n}\n\nexport type onSyncedParameters = {\n  state: boolean,\n}\n\nexport type onDisconnectParameters = {\n  event: CloseEvent,\n}\n\nexport type onCloseParameters = {\n  event: CloseEvent,\n}\n\nexport type onAwarenessUpdateParameters = {\n  states: StatesArray\n}\n\nexport type onAwarenessChangeParameters = {\n  states: StatesArray\n}\n\nexport type onStatelessParameters = {\n  payload: string\n}\n\nexport type StatesArray = { clientId: number, [key: string | number]: any }[]\n","import {\n  Forbidden, MessageTooBig, Unauthorized, WsReadyStates,\n} from '@hocuspocus/common'\nimport { retry } from '@lifeomic/attempt'\nimport * as mutex from 'lib0/mutex'\nimport * as time from 'lib0/time'\nimport * as url from 'lib0/url'\nimport type { MessageEvent } from 'ws'\nimport { Event } from 'ws'\nimport EventEmitter from './EventEmitter.js'\nimport { HocuspocusProvider } from './HocuspocusProvider.js'\nimport {\n  WebSocketStatus,\n  onAwarenessChangeParameters, onAwarenessUpdateParameters,\n  onCloseParameters, onDisconnectParameters, onMessageParameters, onOpenParameters, onOutgoingMessageParameters, onStatusParameters,\n} from './types.js'\n\nexport type HocuspocusProviderWebsocketConfiguration =\n  Required<Pick<CompleteHocuspocusProviderWebsocketConfiguration, 'url'>>\n  & Partial<CompleteHocuspocusProviderWebsocketConfiguration>\n\nexport interface CompleteHocuspocusProviderWebsocketConfiguration {\n  /**\n   * URL of your @hocuspocus/server instance\n   */\n   url: string,\n\n  /**\n   * Pass `false` to start the connection manually.\n   */\n  connect: boolean,\n\n  /**\n   * URL parameters that should be added.\n   */\n  parameters: { [key: string]: any },\n  /**\n   * An optional WebSocket polyfill, for example for Node.js\n   */\n  WebSocketPolyfill: any,\n\n  /**\n   * Disconnect when no message is received for the defined amount of milliseconds.\n   */\n  messageReconnectTimeout: number,\n  /**\n   * The delay between each attempt in milliseconds. You can provide a factor to have the delay grow exponentially.\n   */\n  delay: number,\n  /**\n   * The intialDelay is the amount of time to wait before making the first attempt. This option should typically be 0 since you typically want the first attempt to happen immediately.\n   */\n  initialDelay: number,\n  /**\n   * The factor option is used to grow the delay exponentially.\n   */\n  factor: number,\n  /**\n   * The maximum number of attempts or 0 if there is no limit on number of attempts.\n   */\n  maxAttempts: number,\n  /**\n   * minDelay is used to set a lower bound of delay when jitter is enabled. This property has no effect if jitter is disabled.\n   */\n  minDelay: number,\n  /**\n   * The maxDelay option is used to set an upper bound for the delay when factor is enabled. A value of 0 can be provided if there should be no upper bound when calculating delay.\n   */\n  maxDelay: number,\n  /**\n   * If jitter is true then the calculated delay will be a random integer value between minDelay and the calculated delay for the current iteration.\n   */\n  jitter: boolean,\n  /**\n   * A timeout in milliseconds. If timeout is non-zero then a timer is set using setTimeout. If the timeout is triggered then future attempts will be aborted.\n   */\n  timeout: number,\n  onOpen: (data: onOpenParameters) => void,\n  onConnect: () => void,\n  onMessage: (data: onMessageParameters) => void,\n  onOutgoingMessage: (data: onOutgoingMessageParameters) => void,\n  onStatus: (data: onStatusParameters) => void,\n  onDisconnect: (data: onDisconnectParameters) => void,\n  onClose: (data: onCloseParameters) => void,\n  onDestroy: () => void,\n  onAwarenessUpdate: (data: onAwarenessUpdateParameters) => void,\n  onAwarenessChange: (data: onAwarenessChangeParameters) => void,\n  /**\n   * Don’t output any warnings.\n   */\n  quiet: boolean,\n}\n\nexport class HocuspocusProviderWebsocket extends EventEmitter {\n  private messageQueue: any[] = []\n\n  public configuration: CompleteHocuspocusProviderWebsocketConfiguration = {\n    url: '',\n    // @ts-ignore\n    document: undefined,\n    // @ts-ignore\n    awareness: undefined,\n    WebSocketPolyfill: undefined,\n    parameters: {},\n    connect: true,\n    broadcast: true,\n    forceSyncInterval: false,\n    // TODO: this should depend on awareness.outdatedTime\n    messageReconnectTimeout: 30000,\n    // 1 second\n    delay: 1000,\n    // instant\n    initialDelay: 0,\n    // double the delay each time\n    factor: 2,\n    // unlimited retries\n    maxAttempts: 0,\n    // wait at least 1 second\n    minDelay: 1000,\n    // at least every 30 seconds\n    maxDelay: 30000,\n    // randomize\n    jitter: true,\n    // retry forever\n    timeout: 0,\n    onOpen: () => null,\n    onConnect: () => null,\n    onMessage: () => null,\n    onOutgoingMessage: () => null,\n    onStatus: () => null,\n    onDisconnect: () => null,\n    onClose: () => null,\n    onDestroy: () => null,\n    onAwarenessUpdate: () => null,\n    onAwarenessChange: () => null,\n    quiet: false,\n  }\n\n  subscribedToBroadcastChannel = false\n\n  webSocket: WebSocket | null = null\n\n  shouldConnect = true\n\n  status = WebSocketStatus.Disconnected\n\n  lastMessageReceived = 0\n\n  mux = mutex.createMutex()\n\n  intervals: any = {\n    forceSync: null,\n    connectionChecker: null,\n  }\n\n  connectionAttempt: {\n    resolve: (value?: any) => void\n    reject: (reason?: any) => void\n  } | null = null\n\n  constructor(configuration: HocuspocusProviderWebsocketConfiguration) {\n    super()\n    this.setConfiguration(configuration)\n\n    this.configuration.WebSocketPolyfill = configuration.WebSocketPolyfill ? configuration.WebSocketPolyfill : WebSocket\n\n    this.on('open', this.configuration.onOpen)\n    this.on('open', this.onOpen.bind(this))\n    this.on('connect', this.configuration.onConnect)\n    this.on('message', this.configuration.onMessage)\n    this.on('outgoingMessage', this.configuration.onOutgoingMessage)\n    this.on('status', this.configuration.onStatus)\n    this.on('status', this.onStatus.bind(this))\n    this.on('disconnect', this.configuration.onDisconnect)\n    this.on('close', this.configuration.onClose)\n    this.on('destroy', this.configuration.onDestroy)\n    this.on('awarenessUpdate', this.configuration.onAwarenessUpdate)\n    this.on('awarenessChange', this.configuration.onAwarenessChange)\n\n    this.on('close', this.onClose.bind(this))\n    this.on('message', this.onMessage.bind(this))\n\n    this.registerEventListeners()\n\n    this.intervals.connectionChecker = setInterval(\n      this.checkConnection.bind(this),\n      this.configuration.messageReconnectTimeout / 10,\n    )\n\n    if (typeof configuration.connect !== 'undefined') {\n      this.shouldConnect = configuration.connect\n    }\n\n    if (!this.shouldConnect) {\n      return\n    }\n\n    this.connect()\n  }\n\n  receivedOnOpenPayload?: Event | undefined = undefined\n\n  receivedOnStatusPayload?: onStatusParameters | undefined = undefined\n\n  async onOpen(event: Event) {\n    this.receivedOnOpenPayload = event\n  }\n\n  async onStatus(data: onStatusParameters) {\n    this.receivedOnStatusPayload = data\n  }\n\n  attach(provider: HocuspocusProvider) {\n    if (this.receivedOnOpenPayload) {\n      provider.onOpen(this.receivedOnOpenPayload)\n    }\n\n    if (this.receivedOnStatusPayload) {\n      provider.onStatus(this.receivedOnStatusPayload)\n    }\n  }\n\n  detach(provider: HocuspocusProvider) {\n    // tell the server to remove the listener\n\n  }\n\n  public setConfiguration(configuration: Partial<HocuspocusProviderWebsocketConfiguration> = {}): void {\n    this.configuration = { ...this.configuration, ...configuration }\n  }\n\n  boundConnect = this.connect.bind(this)\n\n  cancelWebsocketRetry?: () => void\n\n  async connect() {\n    if (this.status === WebSocketStatus.Connected) {\n      return\n    }\n\n    // Always cancel any previously initiated connection retryer instances\n    if (this.cancelWebsocketRetry) {\n      this.cancelWebsocketRetry()\n      this.cancelWebsocketRetry = undefined\n    }\n\n    this.shouldConnect = true\n\n    const abortableRetry = () => {\n      let cancelAttempt = false\n\n      const retryPromise = retry(this.createWebSocketConnection.bind(this), {\n        delay: this.configuration.delay,\n        initialDelay: this.configuration.initialDelay,\n        factor: this.configuration.factor,\n        maxAttempts: this.configuration.maxAttempts,\n        minDelay: this.configuration.minDelay,\n        maxDelay: this.configuration.maxDelay,\n        jitter: this.configuration.jitter,\n        timeout: this.configuration.timeout,\n        beforeAttempt: context => {\n          if (!this.shouldConnect || cancelAttempt) {\n            context.abort()\n          }\n        },\n      }).catch((error: any) => {\n        // If we aborted the connection attempt then don’t throw an error\n        // ref: https://github.com/lifeomic/attempt/blob/master/src/index.ts#L136\n        if (error && error.code !== 'ATTEMPT_ABORTED') {\n          throw error\n        }\n      })\n\n      return {\n        retryPromise,\n        cancelFunc: () => {\n          cancelAttempt = true\n        },\n      }\n    }\n\n    const { retryPromise, cancelFunc } = abortableRetry()\n    this.cancelWebsocketRetry = cancelFunc\n\n    return retryPromise\n  }\n\n  createWebSocketConnection() {\n    return new Promise((resolve, reject) => {\n      if (this.webSocket) {\n        this.messageQueue = []\n        this.webSocket.close()\n        this.webSocket = null\n      }\n\n      // Init the WebSocket connection\n      const ws = new this.configuration.WebSocketPolyfill(this.url)\n      ws.binaryType = 'arraybuffer'\n      ws.onmessage = (payload: any) => this.emit('message', payload)\n      ws.onclose = (payload: any) => this.emit('close', { event: payload })\n      ws.onopen = (payload: any) => this.emit('open', payload)\n      ws.onerror = (err: any) => {\n        reject(err)\n      }\n      this.webSocket = ws\n\n      // Reset the status\n      this.status = WebSocketStatus.Connecting\n      this.emit('status', { status: WebSocketStatus.Connecting })\n\n      // Store resolve/reject for later use\n      this.connectionAttempt = {\n        resolve,\n        reject,\n      }\n    })\n  }\n\n  onMessage(event: MessageEvent) {\n    this.resolveConnectionAttempt()\n  }\n\n  resolveConnectionAttempt() {\n    if (this.connectionAttempt) {\n      this.connectionAttempt.resolve()\n      this.connectionAttempt = null\n\n      this.status = WebSocketStatus.Connected\n      this.emit('status', { status: WebSocketStatus.Connected })\n      this.emit('connect')\n      this.messageQueue.forEach(message => this.send(message))\n      this.messageQueue = []\n    }\n  }\n\n  stopConnectionAttempt() {\n    this.connectionAttempt = null\n  }\n\n  rejectConnectionAttempt() {\n    this.connectionAttempt?.reject()\n    this.connectionAttempt = null\n  }\n\n  checkConnection() {\n    // Don’t check the connection when it’s not even established\n    if (this.status !== WebSocketStatus.Connected) {\n      return\n    }\n\n    // Don’t close then connection while waiting for the first message\n    if (!this.lastMessageReceived) {\n      return\n    }\n\n    // Don’t close the connection when a message was received recently\n    if (this.configuration.messageReconnectTimeout >= time.getUnixTime() - this.lastMessageReceived) {\n      return\n    }\n\n    // No message received in a long time, not even your own\n    // Awareness updates, which are updated every 15 seconds.\n    this.webSocket?.close()\n    this.messageQueue = []\n  }\n\n  registerEventListeners() {\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.addEventListener('online', this.boundConnect)\n  }\n\n  // Ensure that the URL always ends with /\n  get serverUrl() {\n    while (this.configuration.url[this.configuration.url.length - 1] === '/') {\n      return this.configuration.url.slice(0, this.configuration.url.length - 1)\n    }\n\n    return this.configuration.url\n  }\n\n  get url() {\n    const encodedParams = url.encodeQueryParams(this.configuration.parameters)\n\n    return `${this.serverUrl}${encodedParams.length === 0 ? '' : `?${encodedParams}`}`\n  }\n\n  disconnect() {\n    this.shouldConnect = false\n\n    if (this.webSocket === null) {\n      return\n    }\n\n    try {\n      this.webSocket.close()\n      this.messageQueue = []\n    } catch {\n      //\n    }\n  }\n\n  send(message: any) {\n    if (this.webSocket?.readyState === WsReadyStates.Open) {\n      this.webSocket.send(message)\n    } else {\n      this.messageQueue.push(message)\n    }\n  }\n\n  onClose({ event }: onCloseParameters) {\n    this.webSocket = null\n\n    if (this.status === WebSocketStatus.Connected) {\n      this.status = WebSocketStatus.Disconnected\n      this.emit('status', { status: WebSocketStatus.Disconnected })\n      this.emit('disconnect', { event })\n    }\n\n    if (event.code === Unauthorized.code) {\n      if (event.reason === Unauthorized.reason) {\n        console.warn('[HocuspocusProvider] An authentication token is required, but you didn’t send one. Try adding a `token` to your HocuspocusProvider configuration. Won’t try again.')\n      } else {\n        console.warn(`[HocuspocusProvider] Connection closed with status Unauthorized: ${event.reason}`)\n      }\n\n      this.shouldConnect = false\n    }\n\n    if (event.code === Forbidden.code) {\n      if (!this.configuration.quiet) {\n        console.warn('[HocuspocusProvider] The provided authentication token isn’t allowed to connect to this server. Will try again.')\n        return // TODO REMOVE ME\n      }\n    }\n\n    if (event.code === MessageTooBig.code) {\n      console.warn(`[HocuspocusProvider] Connection closed with status MessageTooBig: ${event.reason}`)\n      this.shouldConnect = false\n    }\n\n    if (this.connectionAttempt) {\n      // That connection attempt failed.\n      this.rejectConnectionAttempt()\n    } else if (this.shouldConnect) {\n      // The connection was closed by the server. Let’s just try again.\n      this.connect()\n    }\n\n    // If we’ll reconnect, we’re done for now.\n    if (this.shouldConnect) {\n      return\n    }\n\n    // The status is set correctly already.\n    if (this.status === WebSocketStatus.Disconnected) {\n      return\n    }\n\n    // Let’s update the connection status.\n    this.status = WebSocketStatus.Disconnected\n    this.emit('status', { status: WebSocketStatus.Disconnected })\n    this.emit('disconnect', { event })\n  }\n\n  destroy() {\n    this.emit('destroy')\n\n    if (this.intervals.forceSync) {\n      clearInterval(this.intervals.forceSync)\n    }\n\n    clearInterval(this.intervals.connectionChecker)\n\n    // If there is still a connection attempt outstanding then we should stop\n    // it before calling disconnect, otherwise it will be rejected in the onClose\n    // handler and trigger a retry\n    this.stopConnectionAttempt()\n\n    this.disconnect()\n\n    this.removeAllListeners()\n\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.removeEventListener('online', this.boundConnect)\n  }\n\n}\n","import {\n  createDecoder,\n  readVarUint,\n  readVarUint8Array,\n  readVarString,\n  Decoder,\n} from 'lib0/decoding'\nimport {\n  Encoder,\n  createEncoder,\n  writeVarUint,\n  writeVarUint8Array,\n  writeVarString,\n  length,\n} from 'lib0/encoding'\nimport { MessageType } from './types.js'\n\nexport class IncomingMessage {\n\n  data: any\n\n  encoder: Encoder\n\n  decoder: Decoder\n\n  constructor(data: any) {\n    this.data = data\n    this.encoder = createEncoder()\n    this.decoder = createDecoder(new Uint8Array(this.data))\n  }\n\n  readVarUint(): MessageType {\n    return readVarUint(this.decoder)\n  }\n\n  readVarString(): string {\n    return readVarString(this.decoder)\n  }\n\n  readVarUint8Array() {\n    return readVarUint8Array(this.decoder)\n  }\n\n  writeVarUint(type: MessageType) {\n    return writeVarUint(this.encoder, type)\n  }\n\n  writeVarString(string: string) {\n    return writeVarString(this.encoder, string)\n  }\n\n  writeVarUint8Array(data: Uint8Array) {\n    return writeVarUint8Array(this.encoder, data)\n  }\n\n  length() {\n    return length(this.encoder)\n  }\n}\n","/**\n * @module sync-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as Y from 'yjs'\n\n/**\n * @typedef {Map<number, number>} StateMap\n */\n\n/**\n * Core Yjs defines two message types:\n * • YjsSyncStep1: Includes the State Set of the sending client. When received, the client should reply with YjsSyncStep2.\n * • YjsSyncStep2: Includes all missing structs and the complete delete set. When received, the client is assured that it\n *   received all information from the remote client.\n *\n * In a peer-to-peer network, you may want to introduce a SyncDone message type. Both parties should initiate the connection\n * with SyncStep1. When a client received SyncStep2, it should reply with SyncDone. When the local client received both\n * SyncStep2 and SyncDone, it is assured that it is synced to the remote client.\n *\n * In a client-server model, you want to handle this differently: The client should initiate the connection with SyncStep1.\n * When the server receives SyncStep1, it should reply with SyncStep2 immediately followed by SyncStep1. The client replies\n * with SyncStep2 when it receives SyncStep1. Optionally the server may send a SyncDone after it received SyncStep2, so the\n * client knows that the sync is finished.  There are two reasons for this more elaborated sync model: 1. This protocol can\n * easily be implemented on top of http and websockets. 2. The server shoul only reply to requests, and not initiate them.\n * Therefore it is necesarry that the client initiates the sync.\n *\n * Construction of a message:\n * [messageType : varUint, message definition..]\n *\n * Note: A message does not include information about the room name. This must to be handled by the upper layer protocol!\n *\n * stringify[messageType] stringifies a message definition (messageType is already read from the bufffer)\n */\n\nexport const messageYjsSyncStep1 = 0\nexport const messageYjsSyncStep2 = 1\nexport const messageYjsUpdate = 2\n\n/**\n * Create a sync step 1 message based on the state of the current shared document.\n *\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n */\nexport const writeSyncStep1 = (encoder, doc) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep1)\n  const sv = Y.encodeStateVector(doc)\n  encoding.writeVarUint8Array(encoder, sv)\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Y.Doc} doc\n * @param {Uint8Array} [encodedStateVector]\n */\nexport const writeSyncStep2 = (encoder, doc, encodedStateVector) => {\n  encoding.writeVarUint(encoder, messageYjsSyncStep2)\n  encoding.writeVarUint8Array(encoder, Y.encodeStateAsUpdate(doc, encodedStateVector))\n}\n\n/**\n * Read SyncStep1 message and reply with SyncStep2.\n *\n * @param {decoding.Decoder} decoder The reply to the received message\n * @param {encoding.Encoder} encoder The received message\n * @param {Y.Doc} doc\n */\nexport const readSyncStep1 = (decoder, encoder, doc) =>\n  writeSyncStep2(encoder, doc, decoding.readVarUint8Array(decoder))\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncStep2 = (decoder, doc, transactionOrigin) => {\n  try {\n    Y.applyUpdate(doc, decoding.readVarUint8Array(decoder), transactionOrigin)\n  } catch (error) {\n    // This catches errors that are thrown by event handlers\n    console.error('Caught error while handling a Yjs update', error)\n  }\n}\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {Uint8Array} update\n */\nexport const writeUpdate = (encoder, update) => {\n  encoding.writeVarUint(encoder, messageYjsUpdate)\n  encoding.writeVarUint8Array(encoder, update)\n}\n\n/**\n * Read and apply Structs and then DeleteStore to a y instance.\n *\n * @param {decoding.Decoder} decoder\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readUpdate = readSyncStep2\n\n/**\n * @param {decoding.Decoder} decoder A message received from another client\n * @param {encoding.Encoder} encoder The reply message. Will not be sent if empty.\n * @param {Y.Doc} doc\n * @param {any} transactionOrigin\n */\nexport const readSyncMessage = (decoder, encoder, doc, transactionOrigin) => {\n  const messageType = decoding.readVarUint(decoder)\n  switch (messageType) {\n    case messageYjsSyncStep1:\n      readSyncStep1(decoder, encoder, doc)\n      break\n    case messageYjsSyncStep2:\n      readSyncStep2(decoder, doc, transactionOrigin)\n      break\n    case messageYjsUpdate:\n      readUpdate(decoder, doc, transactionOrigin)\n      break\n    default:\n      throw new Error('Unknown message type')\n  }\n  return messageType\n}\n","import { Encoder, createEncoder, toUint8Array } from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments, OutgoingMessageInterface } from './types.js'\n\nexport class OutgoingMessage implements OutgoingMessageInterface {\n  encoder: Encoder\n\n  type?: MessageType\n\n  constructor() {\n    this.encoder = createEncoder()\n  }\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    return args.encoder\n  }\n\n  toUint8Array() {\n    return toUint8Array(this.encoder)\n  }\n}\n","import { readAuthMessage } from '@hocuspocus/common'\nimport { readVarInt, readVarString } from 'lib0/decoding'\nimport * as awarenessProtocol from 'y-protocols/awareness'\nimport { messageYjsSyncStep2, readSyncMessage } from 'y-protocols/sync'\nimport { HocuspocusProvider } from './HocuspocusProvider.js'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { OutgoingMessage } from './OutgoingMessage.js'\nimport { MessageType } from './types.js'\n\nexport class MessageReceiver {\n\n  message: IncomingMessage\n\n  broadcasted = false\n\n  constructor(message: IncomingMessage) {\n    this.message = message\n  }\n\n  public setBroadcasted(value: boolean) {\n    this.broadcasted = value\n\n    return this\n  }\n\n  public apply(provider: HocuspocusProvider, emitSynced: boolean) {\n    const { message } = this\n    const type = message.readVarUint()\n\n    const emptyMessageLength = message.length()\n\n    switch (type) {\n      case MessageType.Sync:\n        this.applySyncMessage(provider, emitSynced)\n        break\n\n      case MessageType.Awareness:\n        this.applyAwarenessMessage(provider)\n        break\n\n      case MessageType.Auth:\n        this.applyAuthMessage(provider)\n        break\n\n      case MessageType.QueryAwareness:\n        this.applyQueryAwarenessMessage(provider)\n        break\n\n      case MessageType.Stateless:\n        provider.receiveStateless(readVarString(message.decoder))\n        break\n\n      case MessageType.SyncStatus:\n        this.applySyncStatusMessage(provider, readVarInt(message.decoder) === 1)\n        break\n      default:\n        throw new Error(`Can’t apply message of unknown type: ${type}`)\n    }\n\n    // Reply\n    if (message.length() > emptyMessageLength + 1) { // length of documentName (considered in emptyMessageLength plus length of yjs sync type, set in applySyncMessage)\n      if (this.broadcasted) {\n        // TODO: Some weird TypeScript error\n        // @ts-ignore\n        provider.broadcast(OutgoingMessage, { encoder: message.encoder })\n      } else {\n        // TODO: Some weird TypeScript error\n        // @ts-ignore\n        provider.send(OutgoingMessage, { encoder: message.encoder })\n      }\n    }\n  }\n\n  private applySyncMessage(provider: HocuspocusProvider, emitSynced: boolean) {\n    const { message } = this\n\n    message.writeVarUint(MessageType.Sync)\n\n    // Apply update\n    const syncMessageType = readSyncMessage(\n      message.decoder,\n      message.encoder,\n      provider.document,\n      provider,\n    )\n\n    // Synced once we receive Step2\n    if (emitSynced && syncMessageType === messageYjsSyncStep2) {\n      provider.synced = true\n    }\n  }\n\n  applySyncStatusMessage(provider: HocuspocusProvider, applied: boolean) {\n    if (applied) {\n      provider.decrementUnsyncedChanges()\n    }\n  }\n\n  private applyAwarenessMessage(provider: HocuspocusProvider) {\n    const { message } = this\n\n    awarenessProtocol.applyAwarenessUpdate(\n      provider.awareness,\n      message.readVarUint8Array(),\n      provider,\n    )\n  }\n\n  private applyAuthMessage(provider: HocuspocusProvider) {\n    const { message } = this\n\n    readAuthMessage(\n      message.decoder,\n      provider.permissionDeniedHandler.bind(provider),\n      provider.authenticatedHandler.bind(provider),\n    )\n  }\n\n  private applyQueryAwarenessMessage(provider: HocuspocusProvider) {\n    const { message } = this\n\n    message.writeVarUint(MessageType.Awareness)\n    message.writeVarUint8Array(\n      awarenessProtocol.encodeAwarenessUpdate(\n        provider.awareness,\n        Array.from(provider.awareness.getStates().keys()),\n      ),\n    )\n  }\n}\n","import { Encoder, toUint8Array } from 'lib0/encoding'\nimport * as bc from 'lib0/broadcastchannel'\nimport { ConstructableOutgoingMessage } from './types.js'\n\nexport class MessageSender {\n\n  encoder: Encoder\n\n  message: any\n\n  constructor(Message: ConstructableOutgoingMessage, args: any = {}) {\n    this.message = new Message()\n    this.encoder = this.message.get(args)\n  }\n\n  create() {\n    return toUint8Array(this.encoder)\n  }\n\n  send(webSocket: any) {\n    webSocket?.send(this.create())\n  }\n\n  broadcast(channel: string) {\n    bc.publish(channel, this.create())\n  }\n}\n","import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { writeAuthentication } from '@hocuspocus/common'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class AuthenticationMessage extends OutgoingMessage {\n  type = MessageType.Auth\n\n  description = 'Authentication'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.token === 'undefined') {\n      throw new Error('The authentication message requires `token` as an argument.')\n    }\n\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n    writeAuthentication(this.encoder, args.token)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport { encodeAwarenessUpdate } from 'y-protocols/awareness'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class AwarenessMessage extends OutgoingMessage {\n  type = MessageType.Awareness\n\n  description = 'Awareness states update'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.awareness === 'undefined') {\n      throw new Error('The awareness message requires awareness as an argument')\n    }\n\n    if (typeof args.clients === 'undefined') {\n      throw new Error('The awareness message requires clients as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    let awarenessUpdate\n    if (args.states === undefined) {\n      awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients)\n    } else {\n      awarenessUpdate = encodeAwarenessUpdate(args.awareness, args.clients, args.states)\n    }\n\n    encoding.writeVarUint8Array(this.encoder, awarenessUpdate)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class CloseMessage extends OutgoingMessage {\n  type = MessageType.CLOSE\n\n  description = 'Ask the server to close the connection'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class QueryAwarenessMessage extends OutgoingMessage {\n  type = MessageType.QueryAwareness\n\n  description = 'Queries awareness states'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n\n    console.log('queryAwareness: writing string docName', args.documentName)\n    console.log(this.encoder.cpos)\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n\n    return this.encoder\n  }\n}\n","import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class StatelessMessage extends OutgoingMessage {\n  type = MessageType.Stateless\n\n  description = 'A stateless message'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n    writeVarString(this.encoder, args.payload ?? '')\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class SyncStepOneMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'First sync step'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.document === 'undefined') {\n      throw new Error('The sync step one message requires document as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n    syncProtocol.writeSyncStep1(this.encoder, args.document)\n\n    return this.encoder\n  }\n}\n","import * as encoding from 'lib0/encoding'\nimport * as syncProtocol from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class SyncStepTwoMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'Second sync step'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    if (typeof args.document === 'undefined') {\n      throw new Error('The sync step two message requires document as an argument')\n    }\n\n    encoding.writeVarString(this.encoder, args.documentName!)\n    encoding.writeVarUint(this.encoder, this.type)\n    syncProtocol.writeSyncStep2(this.encoder, args.document)\n\n    return this.encoder\n  }\n}\n","import { writeVarString, writeVarUint } from 'lib0/encoding'\nimport { writeUpdate } from 'y-protocols/sync'\nimport { MessageType, OutgoingMessageArguments } from '../types.js'\nimport { OutgoingMessage } from '../OutgoingMessage.js'\n\nexport class UpdateMessage extends OutgoingMessage {\n  type = MessageType.Sync\n\n  description = 'A document update'\n\n  get(args: Partial<OutgoingMessageArguments>) {\n    writeVarString(this.encoder, args.documentName!)\n    writeVarUint(this.encoder, this.type)\n\n    writeUpdate(this.encoder, args.update)\n\n    return this.encoder\n  }\n}\n","import { awarenessStatesToArray } from '@hocuspocus/common'\nimport * as bc from 'lib0/broadcastchannel'\nimport * as mutex from 'lib0/mutex'\nimport type { CloseEvent, Event, MessageEvent } from 'ws'\nimport { Awareness, removeAwarenessStates } from 'y-protocols/awareness'\nimport * as Y from 'yjs'\nimport EventEmitter from './EventEmitter.js'\nimport {\n  CompleteHocuspocusProviderWebsocketConfiguration,\n  HocuspocusProviderWebsocket,\n} from './HocuspocusProviderWebsocket.js'\nimport { IncomingMessage } from './IncomingMessage.js'\nimport { MessageReceiver } from './MessageReceiver.js'\nimport { MessageSender } from './MessageSender.js'\nimport { AuthenticationMessage } from './OutgoingMessages/AuthenticationMessage.js'\nimport { AwarenessMessage } from './OutgoingMessages/AwarenessMessage.js'\nimport { CloseMessage } from './OutgoingMessages/CloseMessage.js'\nimport { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js'\nimport { StatelessMessage } from './OutgoingMessages/StatelessMessage.js'\nimport { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js'\nimport { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js'\nimport { UpdateMessage } from './OutgoingMessages/UpdateMessage.js'\nimport {\n  ConstructableOutgoingMessage,\n  WebSocketStatus,\n  onAuthenticationFailedParameters,\n  onAwarenessChangeParameters,\n  onAwarenessUpdateParameters,\n  onCloseParameters,\n  onDisconnectParameters,\n  onMessageParameters,\n  onOpenParameters,\n  onOutgoingMessageParameters, onStatelessParameters,\n  onStatusParameters,\n  onSyncedParameters,\n} from './types.js'\n\nexport type HocuspocusProviderConfiguration =\n  Required<Pick<CompleteHocuspocusProviderConfiguration, 'name'>>\n    & Partial<CompleteHocuspocusProviderConfiguration> & (\n  Required<Pick<CompleteHocuspocusProviderWebsocketConfiguration, 'url'>> |\n  Required<Pick<CompleteHocuspocusProviderConfiguration, 'websocketProvider'>>\n  )\n\nexport interface CompleteHocuspocusProviderConfiguration {\n   /**\n    * The identifier/name of your document\n    */\n   name: string,\n  /**\n   * The actual Y.js document\n   */\n  document: Y.Doc,\n\n  /**\n   * Pass false to disable broadcasting between browser tabs.\n   */\n  broadcast: boolean,\n  /**\n   * An Awareness instance to keep the presence state of all clients.\n   */\n  awareness: Awareness,\n  /**\n   * A token that’s sent to the backend for authentication purposes.\n   */\n  token: string | (() => string) | (() => Promise<string>) | null,\n  /**\n   * URL parameters that should be added.\n   */\n  parameters: { [key: string]: any },\n  /**\n   * Hocuspocus websocket provider\n   */\n  websocketProvider: HocuspocusProviderWebsocket,\n  /**\n   * Force syncing the document in the defined interval.\n   */\n  forceSyncInterval: false | number,\n\n  onAuthenticated: () => void,\n  onAuthenticationFailed: (data: onAuthenticationFailedParameters) => void,\n  onOpen: (data: onOpenParameters) => void,\n  onConnect: () => void,\n  onMessage: (data: onMessageParameters) => void,\n  onOutgoingMessage: (data: onOutgoingMessageParameters) => void,\n  onStatus: (data: onStatusParameters) => void,\n  onSynced: (data: onSyncedParameters) => void,\n  onDisconnect: (data: onDisconnectParameters) => void,\n  onClose: (data: onCloseParameters) => void,\n  onDestroy: () => void,\n  onAwarenessUpdate: (data: onAwarenessUpdateParameters) => void,\n  onAwarenessChange: (data: onAwarenessChangeParameters) => void,\n  onStateless: (data: onStatelessParameters) => void\n\n  /**\n   * Don’t output any warnings.\n   */\n  quiet: boolean,\n}\n\nexport class HocuspocusProvider extends EventEmitter {\n  public configuration: CompleteHocuspocusProviderConfiguration = {\n    name: '',\n    // @ts-ignore\n    document: undefined,\n    // @ts-ignore\n    awareness: undefined,\n    token: null,\n    parameters: {},\n    broadcast: true,\n    forceSyncInterval: false,\n    onAuthenticated: () => null,\n    onAuthenticationFailed: () => null,\n    onOpen: () => null,\n    onConnect: () => null,\n    onMessage: () => null,\n    onOutgoingMessage: () => null,\n    onStatus: () => null,\n    onSynced: () => null,\n    onDisconnect: () => null,\n    onClose: () => null,\n    onDestroy: () => null,\n    onAwarenessUpdate: () => null,\n    onAwarenessChange: () => null,\n    onStateless: () => null,\n    quiet: false,\n  }\n\n  subscribedToBroadcastChannel = false\n\n  isSynced = false\n\n  unsyncedChanges = 0\n\n  status = WebSocketStatus.Disconnected\n\n  isAuthenticated = false\n\n  authorizedScope: string | undefined = undefined\n\n  mux = mutex.createMutex()\n\n  intervals: any = {\n    forceSync: null,\n  }\n\n  isConnected = true\n\n  constructor(configuration: HocuspocusProviderConfiguration) {\n    super()\n    this.setConfiguration(configuration)\n\n    this.configuration.document = configuration.document ? configuration.document : new Y.Doc()\n    this.configuration.awareness = configuration.awareness ? configuration.awareness : new Awareness(this.document)\n\n    this.on('open', this.configuration.onOpen)\n    this.on('message', this.configuration.onMessage)\n    this.on('outgoingMessage', this.configuration.onOutgoingMessage)\n    this.on('synced', this.configuration.onSynced)\n    this.on('destroy', this.configuration.onDestroy)\n    this.on('awarenessUpdate', this.configuration.onAwarenessUpdate)\n    this.on('awarenessChange', this.configuration.onAwarenessChange)\n    this.on('stateless', this.configuration.onStateless)\n\n    this.on('authenticated', this.configuration.onAuthenticated)\n    this.on('authenticationFailed', this.configuration.onAuthenticationFailed)\n\n    this.configuration.websocketProvider.on('connect', this.configuration.onConnect)\n    this.configuration.websocketProvider.on('connect', (e: Event) => this.emit('connect', e))\n\n    this.configuration.websocketProvider.on('open', this.onOpen.bind(this))\n    this.configuration.websocketProvider.on('open', (e: Event) => this.emit('open', e))\n\n    this.configuration.websocketProvider.on('message', this.onMessage.bind(this))\n\n    this.configuration.websocketProvider.on('close', this.onClose.bind(this))\n    this.configuration.websocketProvider.on('close', this.configuration.onClose)\n    this.configuration.websocketProvider.on('close', (e: Event) => this.emit('close', e))\n\n    this.configuration.websocketProvider.on('status', this.onStatus.bind(this))\n\n    this.configuration.websocketProvider.on('disconnect', this.configuration.onDisconnect)\n    this.configuration.websocketProvider.on('disconnect', (e: Event) => this.emit('disconnect', e))\n\n    this.configuration.websocketProvider.on('destroy', this.configuration.onDestroy)\n    this.configuration.websocketProvider.on('destroy', (e: Event) => this.emit('destroy', e))\n\n    this.awareness.on('update', () => {\n      this.emit('awarenessUpdate', { states: awarenessStatesToArray(this.awareness.getStates()) })\n    })\n\n    this.awareness.on('change', () => {\n      this.emit('awarenessChange', { states: awarenessStatesToArray(this.awareness.getStates()) })\n    })\n\n    this.document.on('update', this.documentUpdateHandler.bind(this))\n    this.awareness.on('update', this.awarenessUpdateHandler.bind(this))\n    this.registerEventListeners()\n\n    if (this.configuration.forceSyncInterval) {\n      this.intervals.forceSync = setInterval(\n        this.forceSync.bind(this),\n        this.configuration.forceSyncInterval,\n      )\n    }\n\n    this.configuration.websocketProvider.attach(this)\n  }\n\n  public onStatus({ status } : onStatusParameters) {\n    this.status = status\n\n    this.configuration.onStatus({ status })\n    this.emit('status', { status })\n  }\n\n  public setConfiguration(configuration: Partial<HocuspocusProviderConfiguration> = {}): void {\n    if (!configuration.websocketProvider && (configuration as CompleteHocuspocusProviderWebsocketConfiguration).url) {\n      const websocketProviderConfig = configuration as CompleteHocuspocusProviderWebsocketConfiguration\n\n      this.configuration.websocketProvider = new HocuspocusProviderWebsocket({\n        url: websocketProviderConfig.url,\n        parameters: websocketProviderConfig.parameters,\n      })\n    }\n\n    this.configuration = { ...this.configuration, ...configuration }\n  }\n\n  get document() {\n    return this.configuration.document\n  }\n\n  get awareness() {\n    return this.configuration.awareness\n  }\n\n  get hasUnsyncedChanges(): boolean {\n    return this.unsyncedChanges > 0\n  }\n\n  incrementUnsyncedChanges() {\n    this.unsyncedChanges += 1\n    this.emit('unsyncedChanges', this.unsyncedChanges)\n  }\n\n  decrementUnsyncedChanges() {\n    this.unsyncedChanges -= 1\n    if (this.unsyncedChanges === 0) {\n      this.synced = true\n    }\n    this.emit('unsyncedChanges', this.unsyncedChanges)\n  }\n\n  forceSync() {\n    this.send(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name })\n  }\n\n  boundBeforeUnload = this.beforeUnload.bind(this)\n\n  beforeUnload() {\n    removeAwarenessStates(this.awareness, [this.document.clientID], 'window unload')\n  }\n\n  registerEventListeners() {\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.addEventListener('beforeunload', this.boundBeforeUnload)\n  }\n\n  sendStateless(payload: string) {\n    this.send(StatelessMessage, { documentName: this.configuration.name, payload })\n  }\n\n  documentUpdateHandler(update: Uint8Array, origin: any) {\n    if (origin === this) {\n      return\n    }\n\n    this.incrementUnsyncedChanges()\n    this.send(UpdateMessage, { update, documentName: this.configuration.name }, true)\n  }\n\n  awarenessUpdateHandler({ added, updated, removed }: any, origin: any) {\n    const changedClients = added.concat(updated).concat(removed)\n\n    this.send(AwarenessMessage, {\n      awareness: this.awareness,\n      clients: changedClients,\n      documentName: this.configuration.name,\n    }, true)\n  }\n\n  get synced(): boolean {\n    return this.isSynced\n  }\n\n  set synced(state) {\n    if (this.isSynced === state) {\n      return\n    }\n\n    this.isSynced = state\n    this.emit('synced', { state })\n    this.emit('sync', { state })\n  }\n\n  receiveStateless(payload: string) {\n    this.emit('stateless', { payload })\n  }\n\n  get isAuthenticationRequired(): boolean {\n    return !!this.configuration.token && !this.isAuthenticated\n  }\n\n  // not needed, but provides backward compatibility with e.g. lexicla/yjs\n  async connect() {\n    return this.configuration.websocketProvider.connect()\n  }\n\n  disconnect() {\n    this.disconnectBroadcastChannel()\n    this.configuration.websocketProvider.detach(this)\n  }\n\n  async onOpen(event: Event) {\n    this.isAuthenticated = false\n\n    this.emit('open', { event })\n\n    if (this.isAuthenticationRequired) {\n      this.send(AuthenticationMessage, {\n        token: await this.getToken(),\n        documentName: this.configuration.name,\n      })\n    }\n\n    this.startSync()\n  }\n\n  async getToken() {\n    if (typeof this.configuration.token === 'function') {\n      const token = await this.configuration.token()\n      return token\n    }\n\n    return this.configuration.token\n  }\n\n  startSync() {\n    this.incrementUnsyncedChanges()\n    this.send(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name })\n\n    if (this.awareness.getLocalState() !== null) {\n      this.send(AwarenessMessage, {\n        awareness: this.awareness,\n        clients: [this.document.clientID],\n        documentName: this.configuration.name,\n      })\n    }\n  }\n\n  send(message: ConstructableOutgoingMessage, args: any, broadcast = false) {\n    if (!this.isConnected) {\n      return\n    }\n\n    if (broadcast) {\n      this.mux(() => { this.broadcast(message, args) })\n    }\n\n    const messageSender = new MessageSender(message, args)\n\n    this.emit('outgoingMessage', { message: messageSender.message })\n    messageSender.send(this.configuration.websocketProvider)\n  }\n\n  onMessage(event: MessageEvent) {\n    const message = new IncomingMessage(event.data)\n\n    const documentName = message.readVarString()\n\n    if (documentName !== this.configuration.name) {\n      return // message is meant for another provider\n    }\n\n    message.writeVarString(documentName)\n\n    this.emit('message', { event, message: new IncomingMessage(event.data) })\n\n    new MessageReceiver(message).apply(this, true)\n  }\n\n  onClose(event: CloseEvent) {\n    this.isAuthenticated = false\n    this.synced = false\n\n    // update awareness (all users except local left)\n    removeAwarenessStates(\n      this.awareness,\n      Array.from(this.awareness.getStates().keys()).filter(client => client !== this.document.clientID),\n      this,\n    )\n  }\n\n  destroy() {\n    this.emit('destroy')\n\n    if (this.intervals.forceSync) {\n      clearInterval(this.intervals.forceSync)\n    }\n\n    removeAwarenessStates(this.awareness, [this.document.clientID], 'provider destroy')\n\n    this.disconnect()\n\n    this.awareness.off('update', this.awarenessUpdateHandler)\n    this.document.off('update', this.documentUpdateHandler)\n\n    this.removeAllListeners()\n\n    this.send(CloseMessage, { documentName: this.configuration.name })\n    this.isConnected = false\n\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    window.removeEventListener('beforeunload', this.boundBeforeUnload)\n  }\n\n  permissionDeniedHandler(reason: string) {\n    this.emit('authenticationFailed', { reason })\n    this.isAuthenticated = false\n    this.disconnect()\n    this.status = WebSocketStatus.Disconnected\n  }\n\n  authenticatedHandler(scope: string) {\n    this.isAuthenticated = true\n    this.authorizedScope = scope\n\n    this.emit('authenticated')\n    this.startSync()\n  }\n\n  get broadcastChannel() {\n    return `${this.configuration.name}`\n  }\n\n  boundBroadcastChannelSubscriber = this.broadcastChannelSubscriber.bind(this)\n\n  broadcastChannelSubscriber(data: ArrayBuffer) {\n    this.mux(() => {\n      const message = new IncomingMessage(data)\n\n      const documentName = message.readVarString()\n\n      message.writeVarString(documentName)\n\n      new MessageReceiver(message)\n        .setBroadcasted(true)\n        .apply(this, false)\n    })\n  }\n\n  subscribeToBroadcastChannel() {\n    if (!this.subscribedToBroadcastChannel) {\n      bc.subscribe(this.broadcastChannel, this.boundBroadcastChannelSubscriber)\n      this.subscribedToBroadcastChannel = true\n    }\n\n    this.mux(() => {\n      this.broadcast(SyncStepOneMessage, { document: this.document })\n      this.broadcast(SyncStepTwoMessage, { document: this.document })\n      this.broadcast(QueryAwarenessMessage, { document: this.document })\n      this.broadcast(AwarenessMessage, { awareness: this.awareness, clients: [this.document.clientID], document: this.document })\n    })\n  }\n\n  disconnectBroadcastChannel() {\n    // broadcast message with local awareness state set to null (indicating disconnect)\n    this.send(AwarenessMessage, {\n      awareness: this.awareness,\n      clients: [this.document.clientID],\n      states: new Map(),\n      documentName: this.configuration.name,\n    }, true)\n\n    if (this.subscribedToBroadcastChannel) {\n      bc.unsubscribe(this.broadcastChannel, this.boundBroadcastChannelSubscriber)\n      this.subscribedToBroadcastChannel = false\n    }\n  }\n\n  broadcast(Message: ConstructableOutgoingMessage, args?: any) {\n    if (!this.configuration.broadcast) {\n      return\n    }\n\n    if (!this.subscribedToBroadcastChannel) {\n      return\n    }\n\n    new MessageSender(Message, args).broadcast(this.broadcastChannel)\n  }\n\n  setAwarenessField(key: string, value: any) {\n    this.awareness.setLocalStateField(key, value)\n  }\n}\n","import {\n  CompleteHocuspocusProviderWebsocketConfiguration,\n  HocuspocusProviderWebsocket, HocuspocusProviderWebsocketConfiguration,\n} from './HocuspocusProviderWebsocket.js'\n\nexport type TiptapCollabProviderWebsocketConfiguration =\n  Partial<CompleteHocuspocusProviderWebsocketConfiguration> &\n  AdditionalTiptapCollabProviderWebsocketConfiguration\n\nexport interface AdditionalTiptapCollabProviderWebsocketConfiguration {\n  /**\n   * A Hocuspocus Cloud App ID, get one here: https://collab.tiptap.dev\n   */\n  appId: string,\n}\n\nexport class TiptapCollabProviderWebsocket extends HocuspocusProviderWebsocket {\n  constructor(configuration: TiptapCollabProviderWebsocketConfiguration) {\n    super({ ...configuration as HocuspocusProviderWebsocketConfiguration, url: `wss://${configuration.appId}.collab.tiptap.cloud` })\n  }\n}\n","import {\n  HocuspocusProvider,\n  HocuspocusProviderConfiguration,\n} from './HocuspocusProvider.js'\n\nimport { TiptapCollabProviderWebsocket } from './TiptapCollabProviderWebsocket.js'\n\nexport type TiptapCollabProviderConfiguration =\n  Required<Pick<HocuspocusProviderConfiguration, 'name'>> &\n  Partial<HocuspocusProviderConfiguration> &\n  AdditionalTiptapCollabProviderConfiguration\n\nexport interface AdditionalTiptapCollabProviderConfiguration {\n  /**\n   * A Hocuspocus Cloud App ID, get one here: https://collab.tiptap.dev\n   */\n  appId: string,\n}\n\nexport class TiptapCollabProvider extends HocuspocusProvider {\n  constructor(configuration: TiptapCollabProviderConfiguration) {\n    if (!configuration.websocketProvider) {\n      configuration.websocketProvider = new TiptapCollabProviderWebsocket({ appId: configuration.appId })\n    }\n\n    if (!configuration.token) {\n      configuration.token = 'notoken' // need to send a token anyway (which will be ignored)\n    }\n\n    super(configuration as HocuspocusProviderConfiguration)\n  }\n}\n"],"names":["create","length","object.length","object.hasProperty","map.create","string.fromCamelCase","conditions.undefinedToNull","storage.varStorage","f.isOneOf","buffer.createUint8ArrayViewFromArrayBuffer","binary.BITS7","binary.BIT8","math.floor","string.utf8TextEncoder","string.encodeUtf8","math.min","math.max","error.create","number.MAX_SAFE_INTEGER","binary.BITS6","binary.BIT7","string.utf8TextDecoder","string.fromCharCode","env.isBrowser","buffer.fromBase64","storage.onChange","buffer.toBase64","buffer.createUint8ArrayFromArrayBuffer","storage.offChange","map.setIfUndefined","set.create","array.from","time.getUnixTime","f.equalityDeep","encoding.createEncoder","encoding.writeVarUint","encoding.writeVarString","encoding.toUint8Array","decoding.createDecoder","decoding.readVarUint","decoding.readVarString","object.map","mutex.createMutex","url.encodeQueryParams","encoding.writeVarUint8Array","decoding.readVarUint8Array","awarenessProtocol.applyAwarenessUpdate","awarenessProtocol.encodeAwarenessUpdate","bc.publish","syncProtocol.writeSyncStep1","syncProtocol.writeSyncStep2","bc.subscribe","bc.unsubscribe"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@hocuspocus/provider/dist/packages/provider/src/HocuspocusProvider.d.ts b/node_modules/@hocuspocus/provider/dist/packages/provider/src/HocuspocusProvider.d.ts
index dffe09b..2168445 100644
--- a/node_modules/@hocuspocus/provider/dist/packages/provider/src/HocuspocusProvider.d.ts
+++ b/node_modules/@hocuspocus/provider/dist/packages/provider/src/HocuspocusProvider.d.ts
@@ -1,10 +1,10 @@
-import * as Y from 'yjs';
-import { Awareness } from 'y-protocols/awareness';
 import * as mutex from 'lib0/mutex';
 import type { CloseEvent, Event, MessageEvent } from 'ws';
+import { Awareness } from 'y-protocols/awareness';
+import * as Y from 'yjs';
 import EventEmitter from './EventEmitter.js';
-import { ConstructableOutgoingMessage, onAuthenticationFailedParameters, onCloseParameters, onDisconnectParameters, onMessageParameters, onOpenParameters, onOutgoingMessageParameters, onStatelessParameters, onStatusParameters, onSyncedParameters, WebSocketStatus, onAwarenessChangeParameters, onAwarenessUpdateParameters } from './types.js';
 import { CompleteHocuspocusProviderWebsocketConfiguration, HocuspocusProviderWebsocket } from './HocuspocusProviderWebsocket.js';
+import { ConstructableOutgoingMessage, WebSocketStatus, onAuthenticationFailedParameters, onAwarenessChangeParameters, onAwarenessUpdateParameters, onCloseParameters, onDisconnectParameters, onMessageParameters, onOpenParameters, onOutgoingMessageParameters, onStatelessParameters, onStatusParameters, onSyncedParameters } from './types.js';
 export type HocuspocusProviderConfiguration = Required<Pick<CompleteHocuspocusProviderConfiguration, 'name'>> & Partial<CompleteHocuspocusProviderConfiguration> & (Required<Pick<CompleteHocuspocusProviderWebsocketConfiguration, 'url'>> | Required<Pick<CompleteHocuspocusProviderConfiguration, 'websocketProvider'>>);
 export interface CompleteHocuspocusProviderConfiguration {
     /**
@@ -77,7 +77,8 @@ export declare class HocuspocusProvider extends EventEmitter {
     get document(): Y.Doc;
     get awareness(): Awareness;
     get hasUnsyncedChanges(): boolean;
-    updateUnsyncedChanges(unsyncedChanges?: number): void;
+    incrementUnsyncedChanges(): void;
+    decrementUnsyncedChanges(): void;
     forceSync(): void;
     boundBeforeUnload: () => void;
     beforeUnload(): void;
diff --git a/node_modules/@hocuspocus/provider/dist/packages/provider/src/HocuspocusProviderWebsocket.d.ts b/node_modules/@hocuspocus/provider/dist/packages/provider/src/HocuspocusProviderWebsocket.d.ts
index a3abfae..866ab85 100644
--- a/node_modules/@hocuspocus/provider/dist/packages/provider/src/HocuspocusProviderWebsocket.d.ts
+++ b/node_modules/@hocuspocus/provider/dist/packages/provider/src/HocuspocusProviderWebsocket.d.ts
@@ -2,8 +2,8 @@ import * as mutex from 'lib0/mutex';
 import type { MessageEvent } from 'ws';
 import { Event } from 'ws';
 import EventEmitter from './EventEmitter.js';
-import { onCloseParameters, onDisconnectParameters, onMessageParameters, onOpenParameters, onOutgoingMessageParameters, onStatusParameters, WebSocketStatus, onAwarenessChangeParameters, onAwarenessUpdateParameters } from './types.js';
 import { HocuspocusProvider } from './HocuspocusProvider.js';
+import { WebSocketStatus, onAwarenessChangeParameters, onAwarenessUpdateParameters, onCloseParameters, onDisconnectParameters, onMessageParameters, onOpenParameters, onOutgoingMessageParameters, onStatusParameters } from './types.js';
 export type HocuspocusProviderWebsocketConfiguration = Required<Pick<CompleteHocuspocusProviderWebsocketConfiguration, 'url'>> & Partial<CompleteHocuspocusProviderWebsocketConfiguration>;
 export interface CompleteHocuspocusProviderWebsocketConfiguration {
     /**
@@ -76,6 +76,7 @@ export interface CompleteHocuspocusProviderWebsocketConfiguration {
     quiet: boolean;
 }
 export declare class HocuspocusProviderWebsocket extends EventEmitter {
+    private messageQueue;
     configuration: CompleteHocuspocusProviderWebsocketConfiguration;
     subscribedToBroadcastChannel: boolean;
     webSocket: WebSocket | null;
diff --git a/node_modules/@hocuspocus/provider/dist/packages/provider/src/MessageReceiver.d.ts b/node_modules/@hocuspocus/provider/dist/packages/provider/src/MessageReceiver.d.ts
index 8e5d55c..4d41340 100644
--- a/node_modules/@hocuspocus/provider/dist/packages/provider/src/MessageReceiver.d.ts
+++ b/node_modules/@hocuspocus/provider/dist/packages/provider/src/MessageReceiver.d.ts
@@ -5,8 +5,9 @@ export declare class MessageReceiver {
     broadcasted: boolean;
     constructor(message: IncomingMessage);
     setBroadcasted(value: boolean): this;
-    apply(provider: HocuspocusProvider, emitSynced?: boolean): void;
+    apply(provider: HocuspocusProvider, emitSynced: boolean): void;
     private applySyncMessage;
+    applySyncStatusMessage(provider: HocuspocusProvider, applied: boolean): void;
     private applyAwarenessMessage;
     private applyAuthMessage;
     private applyQueryAwarenessMessage;
diff --git a/node_modules/@hocuspocus/provider/dist/packages/provider/src/types.d.ts b/node_modules/@hocuspocus/provider/dist/packages/provider/src/types.d.ts
index 1a67c25..fd3379e 100644
--- a/node_modules/@hocuspocus/provider/dist/packages/provider/src/types.d.ts
+++ b/node_modules/@hocuspocus/provider/dist/packages/provider/src/types.d.ts
@@ -1,22 +1,23 @@
+import { Encoder } from 'lib0/encoding';
+import type { CloseEvent, Event, MessageEvent } from 'ws';
 import { Awareness } from 'y-protocols/awareness';
 import * as Y from 'yjs';
-import { Encoder } from 'lib0/encoding';
-import type { Event, CloseEvent, MessageEvent } from 'ws';
+import { IncomingMessage } from './IncomingMessage.js';
+import { OutgoingMessage } from './OutgoingMessage.js';
 import { AuthenticationMessage } from './OutgoingMessages/AuthenticationMessage.js';
 import { AwarenessMessage } from './OutgoingMessages/AwarenessMessage.js';
 import { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js';
 import { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js';
 import { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js';
 import { UpdateMessage } from './OutgoingMessages/UpdateMessage.js';
-import { IncomingMessage } from './IncomingMessage.js';
-import { OutgoingMessage } from './OutgoingMessage.js';
 export declare enum MessageType {
     Sync = 0,
     Awareness = 1,
     Auth = 2,
     QueryAwareness = 3,
     Stateless = 5,
-    CLOSE = 7
+    CLOSE = 7,
+    SyncStatus = 8
 }
 export declare enum WebSocketStatus {
     Connecting = "connecting",
diff --git a/node_modules/@hocuspocus/provider/dist/packages/server/src/ClientConnection.d.ts b/node_modules/@hocuspocus/provider/dist/packages/server/src/ClientConnection.d.ts
new file mode 100644
index 0000000..894206f
--- /dev/null
+++ b/node_modules/@hocuspocus/provider/dist/packages/server/src/ClientConnection.d.ts
@@ -0,0 +1,55 @@
+/// <reference types="node" />
+import { IncomingMessage } from 'http';
+import WebSocket from 'ws';
+import { Debugger } from './Debugger.js';
+import Document from './Document.js';
+import { Hocuspocus } from './Hocuspocus.js';
+import { onDisconnectPayload } from './types.js';
+/**
+ * The `ClientConnection` class is responsible for handling an incoming WebSocket
+ *
+ * TODO-refactor:
+ * - use event handlers instead of calling hooks directly, hooks should probably be called from Hocuspocus.ts
+ */
+export declare class ClientConnection {
+    private readonly websocket;
+    private readonly request;
+    private readonly documentProvider;
+    private readonly hooks;
+    private readonly debuggerTool;
+    private readonly opts;
+    private readonly documentConnections;
+    private readonly incomingMessageQueue;
+    private readonly documentConnectionsEstablished;
+    private readonly hookPayloads;
+    private readonly callbacks;
+    private readonly closeIdleConnectionTimeout;
+    private readonly socketId;
+    /**
+      * The `ClientConnection` class receives incoming WebSocket connections,
+      * runs all hooks:
+      *
+      *  - onConnect for all connections
+      *  - onAuthenticate only if required
+      *
+      * … and if nothings fails it’ll fully establish the connection and
+      * load the Document then.
+      */
+    constructor(websocket: WebSocket, request: IncomingMessage, documentProvider: {
+        createDocument: Hocuspocus['createDocument'];
+    }, hooks: Hocuspocus['hooks'], debuggerTool: Debugger, opts: {
+        requiresAuthentication: boolean;
+        timeout: number;
+    });
+    /**
+     * Set a callback that will be triggered when the connection is closed
+     */
+    onClose(callback: (document: Document, payload: onDisconnectPayload) => void): ClientConnection;
+    /**
+     * Create a new connection by the given request and document
+     */
+    private createConnection;
+    private setUpNewConnection;
+    private handleQueueingMessage;
+    private messageHandler;
+}
diff --git a/node_modules/@hocuspocus/provider/dist/packages/server/src/Hocuspocus.d.ts b/node_modules/@hocuspocus/provider/dist/packages/server/src/Hocuspocus.d.ts
index 2709615..90d46c5 100644
--- a/node_modules/@hocuspocus/provider/dist/packages/server/src/Hocuspocus.d.ts
+++ b/node_modules/@hocuspocus/provider/dist/packages/server/src/Hocuspocus.d.ts
@@ -1,11 +1,11 @@
 /// <reference types="node" />
 /// <reference types="node" />
-import { IncomingMessage, Server as HTTPServer } from 'http';
+import { Server as HTTPServer, IncomingMessage } from 'http';
 import WebSocket, { AddressInfo, WebSocketServer } from 'ws';
-import { Configuration, HookName, HookPayload, onListenPayload, onStoreDocumentPayload } from './types.js';
-import Document from './Document.js';
 import { Debugger } from './Debugger.js';
 import { DirectConnection } from './DirectConnection.js';
+import Document from './Document.js';
+import { Configuration, ConnectionConfiguration, HookName, HookPayload, onListenPayload, onStoreDocumentPayload } from './types.js';
 export declare const defaultConfiguration: {
     name: null;
     port: number;
@@ -69,7 +69,7 @@ export declare class Hocuspocus {
      * … and if nothings fails it’ll fully establish the connection and
      * load the Document then.
      */
-    handleConnection(incoming: WebSocket, request: IncomingMessage, context?: any): void;
+    handleConnection(incoming: WebSocket, request: IncomingMessage): void;
     /**
      * Handle update of the given document
      */
@@ -85,21 +85,13 @@ export declare class Hocuspocus {
     /**
      * Create a new document by the given request
      */
-    private createDocument;
-    /**
-     * Create a new connection by the given request and document
-     */
-    private createConnection;
+    createDocument(documentName: string, request: Partial<Pick<IncomingMessage, 'headers' | 'url'>>, socketId: string, connection: ConnectionConfiguration, context?: any): Promise<Document>;
     storeDocumentHooks(document: Document, hookPayload: onStoreDocumentPayload): void;
     /**
      * Run the given hook on all configured extensions.
      * Runs the given callback after each hook.
      */
     hooks(name: HookName, payload: HookPayload, callback?: Function | null): Promise<any>;
-    /**
-     * Get parameters by the given request
-     */
-    private static getParameters;
     enableDebugging(): void;
     enableMessageLogging(): void;
     disableLogging(): void;
diff --git a/node_modules/@hocuspocus/provider/dist/packages/server/src/MessageReceiver.d.ts b/node_modules/@hocuspocus/provider/dist/packages/server/src/MessageReceiver.d.ts
index 8a0a68a..7c12f51 100644
--- a/node_modules/@hocuspocus/provider/dist/packages/server/src/MessageReceiver.d.ts
+++ b/node_modules/@hocuspocus/provider/dist/packages/server/src/MessageReceiver.d.ts
@@ -1,7 +1,7 @@
 import Connection from './Connection.js';
-import { IncomingMessage } from './IncomingMessage.js';
 import { Debugger } from './Debugger.js';
 import Document from './Document.js';
+import { IncomingMessage } from './IncomingMessage.js';
 export declare class MessageReceiver {
     message: IncomingMessage;
     logger: Debugger;
diff --git a/node_modules/@hocuspocus/provider/dist/packages/server/src/OutgoingMessage.d.ts b/node_modules/@hocuspocus/provider/dist/packages/server/src/OutgoingMessage.d.ts
index dbd17e3..8cb4f13 100644
--- a/node_modules/@hocuspocus/provider/dist/packages/server/src/OutgoingMessage.d.ts
+++ b/node_modules/@hocuspocus/provider/dist/packages/server/src/OutgoingMessage.d.ts
@@ -16,5 +16,6 @@ export declare class OutgoingMessage {
     writeUpdate(update: Uint8Array): OutgoingMessage;
     writeStateless(payload: string): OutgoingMessage;
     writeBroadcastStateless(payload: string): OutgoingMessage;
+    writeSyncStatus(updateSaved: boolean): OutgoingMessage;
     toUint8Array(): Uint8Array;
 }
diff --git a/node_modules/@hocuspocus/provider/dist/packages/server/src/types.d.ts b/node_modules/@hocuspocus/provider/dist/packages/server/src/types.d.ts
index 30e719d..d905fc0 100644
--- a/node_modules/@hocuspocus/provider/dist/packages/server/src/types.d.ts
+++ b/node_modules/@hocuspocus/provider/dist/packages/server/src/types.d.ts
@@ -4,9 +4,9 @@
 import { IncomingHttpHeaders, IncomingMessage, ServerResponse } from 'http';
 import { URLSearchParams } from 'url';
 import { Awareness } from 'y-protocols/awareness';
+import Connection from './Connection.js';
 import Document from './Document.js';
 import { Hocuspocus } from './Hocuspocus.js';
-import Connection from './Connection.js';
 export declare enum MessageType {
     Unknown = -1,
     Sync = 0,
@@ -16,7 +16,8 @@ export declare enum MessageType {
     SyncReply = 4,
     Stateless = 5,
     BroadcastStateless = 6,
-    CLOSE = 7
+    CLOSE = 7,
+    SyncStatus = 8
 }
 export interface AwarenessUpdate {
     added: Array<any>;
diff --git a/node_modules/@hocuspocus/provider/dist/packages/server/src/util/getParameters.d.ts b/node_modules/@hocuspocus/provider/dist/packages/server/src/util/getParameters.d.ts
new file mode 100644
index 0000000..9e5f4cf
--- /dev/null
+++ b/node_modules/@hocuspocus/provider/dist/packages/server/src/util/getParameters.d.ts
@@ -0,0 +1,8 @@
+/// <reference types="node" />
+/// <reference types="node" />
+import { IncomingMessage } from 'http';
+import { URLSearchParams } from 'url';
+/**
+   * Get parameters by the given request
+   */
+export declare function getParameters(request?: Pick<IncomingMessage, 'url'>): URLSearchParams;
diff --git a/node_modules/@hocuspocus/provider/dist/tests/provider/hasUnsyncedChanges.d.ts b/node_modules/@hocuspocus/provider/dist/tests/provider/hasUnsyncedChanges.d.ts
new file mode 100644
index 0000000..cb0ff5c
--- /dev/null
+++ b/node_modules/@hocuspocus/provider/dist/tests/provider/hasUnsyncedChanges.d.ts
@@ -0,0 +1 @@
+export {};
diff --git a/node_modules/@hocuspocus/provider/src/HocuspocusProvider.ts b/node_modules/@hocuspocus/provider/src/HocuspocusProvider.ts
index 3a366e3..49b7856 100644
--- a/node_modules/@hocuspocus/provider/src/HocuspocusProvider.ts
+++ b/node_modules/@hocuspocus/provider/src/HocuspocusProvider.ts
@@ -1,22 +1,31 @@
-import * as Y from 'yjs'
+import { awarenessStatesToArray } from '@hocuspocus/common'
 import * as bc from 'lib0/broadcastchannel'
-import { Awareness, removeAwarenessStates } from 'y-protocols/awareness'
 import * as mutex from 'lib0/mutex'
 import type { CloseEvent, Event, MessageEvent } from 'ws'
-import { awarenessStatesToArray } from '@hocuspocus/common'
+import { Awareness, removeAwarenessStates } from 'y-protocols/awareness'
+import * as Y from 'yjs'
 import EventEmitter from './EventEmitter.js'
+import {
+  CompleteHocuspocusProviderWebsocketConfiguration,
+  HocuspocusProviderWebsocket,
+} from './HocuspocusProviderWebsocket.js'
 import { IncomingMessage } from './IncomingMessage.js'
 import { MessageReceiver } from './MessageReceiver.js'
 import { MessageSender } from './MessageSender.js'
-import { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js'
-import { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js'
-import { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js'
 import { AuthenticationMessage } from './OutgoingMessages/AuthenticationMessage.js'
 import { AwarenessMessage } from './OutgoingMessages/AwarenessMessage.js'
+import { CloseMessage } from './OutgoingMessages/CloseMessage.js'
+import { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js'
+import { StatelessMessage } from './OutgoingMessages/StatelessMessage.js'
+import { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js'
+import { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js'
 import { UpdateMessage } from './OutgoingMessages/UpdateMessage.js'
 import {
   ConstructableOutgoingMessage,
+  WebSocketStatus,
   onAuthenticationFailedParameters,
+  onAwarenessChangeParameters,
+  onAwarenessUpdateParameters,
   onCloseParameters,
   onDisconnectParameters,
   onMessageParameters,
@@ -24,16 +33,7 @@ import {
   onOutgoingMessageParameters, onStatelessParameters,
   onStatusParameters,
   onSyncedParameters,
-  WebSocketStatus,
-  onAwarenessChangeParameters,
-  onAwarenessUpdateParameters,
 } from './types.js'
-import {
-  CompleteHocuspocusProviderWebsocketConfiguration,
-  HocuspocusProviderWebsocket,
-} from './HocuspocusProviderWebsocket.js'
-import { StatelessMessage } from './OutgoingMessages/StatelessMessage.js'
-import { CloseMessage } from './OutgoingMessages/CloseMessage.js'
 
 export type HocuspocusProviderConfiguration =
   Required<Pick<CompleteHocuspocusProviderConfiguration, 'name'>>
@@ -239,8 +239,16 @@ export class HocuspocusProvider extends EventEmitter {
     return this.unsyncedChanges > 0
   }
 
-  updateUnsyncedChanges(unsyncedChanges = 0) {
-    this.unsyncedChanges += unsyncedChanges
+  incrementUnsyncedChanges() {
+    this.unsyncedChanges += 1
+    this.emit('unsyncedChanges', this.unsyncedChanges)
+  }
+
+  decrementUnsyncedChanges() {
+    this.unsyncedChanges -= 1
+    if (this.unsyncedChanges === 0) {
+      this.synced = true
+    }
     this.emit('unsyncedChanges', this.unsyncedChanges)
   }
 
@@ -271,7 +279,7 @@ export class HocuspocusProvider extends EventEmitter {
       return
     }
 
-    this.updateUnsyncedChanges(1)
+    this.incrementUnsyncedChanges()
     this.send(UpdateMessage, { update, documentName: this.configuration.name }, true)
   }
 
@@ -285,6 +293,12 @@ export class HocuspocusProvider extends EventEmitter {
     }, true)
   }
 
+  /**
+   * Indicates whether a first handshake with the server has been established
+   *
+   * Note: this does not mean all updates from the client have been persisted to the backend. For this,
+   * use `hasUnsyncedChanges`.
+   */
   get synced(): boolean {
     return this.isSynced
   }
@@ -294,10 +308,6 @@ export class HocuspocusProvider extends EventEmitter {
       return
     }
 
-    if (state && this.unsyncedChanges > 0) {
-      this.updateUnsyncedChanges(-1 * this.unsyncedChanges)
-    }
-
     this.isSynced = state
     this.emit('synced', { state })
     this.emit('sync', { state })
@@ -346,6 +356,7 @@ export class HocuspocusProvider extends EventEmitter {
   }
 
   startSync() {
+    this.incrementUnsyncedChanges()
     this.send(SyncStepOneMessage, { document: this.document, documentName: this.configuration.name })
 
     if (this.awareness.getLocalState() !== null) {
@@ -358,7 +369,9 @@ export class HocuspocusProvider extends EventEmitter {
   }
 
   send(message: ConstructableOutgoingMessage, args: any, broadcast = false) {
-    if (!this.isConnected) return
+    if (!this.isConnected) {
+      return
+    }
 
     if (broadcast) {
       this.mux(() => { this.broadcast(message, args) })
@@ -383,7 +396,7 @@ export class HocuspocusProvider extends EventEmitter {
 
     this.emit('message', { event, message: new IncomingMessage(event.data) })
 
-    new MessageReceiver(message).apply(this)
+    new MessageReceiver(message).apply(this, true)
   }
 
   onClose(event: CloseEvent) {
diff --git a/node_modules/@hocuspocus/provider/src/HocuspocusProviderWebsocket.ts b/node_modules/@hocuspocus/provider/src/HocuspocusProviderWebsocket.ts
index eb2a7e1..82db71e 100644
--- a/node_modules/@hocuspocus/provider/src/HocuspocusProviderWebsocket.ts
+++ b/node_modules/@hocuspocus/provider/src/HocuspocusProviderWebsocket.ts
@@ -1,18 +1,19 @@
-import * as time from 'lib0/time'
-import * as mutex from 'lib0/mutex'
-import * as url from 'lib0/url'
-import type { MessageEvent } from 'ws'
-import { retry } from '@lifeomic/attempt'
 import {
   Forbidden, MessageTooBig, Unauthorized, WsReadyStates,
 } from '@hocuspocus/common'
+import { retry } from '@lifeomic/attempt'
+import * as mutex from 'lib0/mutex'
+import * as time from 'lib0/time'
+import * as url from 'lib0/url'
+import type { MessageEvent } from 'ws'
 import { Event } from 'ws'
 import EventEmitter from './EventEmitter.js'
+import { HocuspocusProvider } from './HocuspocusProvider.js'
 import {
-  onCloseParameters, onDisconnectParameters, onMessageParameters, onOpenParameters, onOutgoingMessageParameters, onStatusParameters, WebSocketStatus,
+  WebSocketStatus,
   onAwarenessChangeParameters, onAwarenessUpdateParameters,
+  onCloseParameters, onDisconnectParameters, onMessageParameters, onOpenParameters, onOutgoingMessageParameters, onStatusParameters,
 } from './types.js'
-import { HocuspocusProvider } from './HocuspocusProvider.js'
 
 export type HocuspocusProviderWebsocketConfiguration =
   Required<Pick<CompleteHocuspocusProviderWebsocketConfiguration, 'url'>>
@@ -91,6 +92,8 @@ export interface CompleteHocuspocusProviderWebsocketConfiguration {
 }
 
 export class HocuspocusProviderWebsocket extends EventEmitter {
+  private messageQueue: any[] = []
+
   public configuration: CompleteHocuspocusProviderWebsocketConfiguration = {
     url: '',
     // @ts-ignore
@@ -285,6 +288,7 @@ export class HocuspocusProviderWebsocket extends EventEmitter {
   createWebSocketConnection() {
     return new Promise((resolve, reject) => {
       if (this.webSocket) {
+        this.messageQueue = []
         this.webSocket.close()
         this.webSocket = null
       }
@@ -324,6 +328,8 @@ export class HocuspocusProviderWebsocket extends EventEmitter {
       this.status = WebSocketStatus.Connected
       this.emit('status', { status: WebSocketStatus.Connected })
       this.emit('connect')
+      this.messageQueue.forEach(message => this.send(message))
+      this.messageQueue = []
     }
   }
 
@@ -355,6 +361,7 @@ export class HocuspocusProviderWebsocket extends EventEmitter {
     // No message received in a long time, not even your own
     // Awareness updates, which are updated every 15 seconds.
     this.webSocket?.close()
+    this.messageQueue = []
   }
 
   registerEventListeners() {
@@ -389,6 +396,7 @@ export class HocuspocusProviderWebsocket extends EventEmitter {
 
     try {
       this.webSocket.close()
+      this.messageQueue = []
     } catch {
       //
     }
@@ -397,6 +405,8 @@ export class HocuspocusProviderWebsocket extends EventEmitter {
   send(message: any) {
     if (this.webSocket?.readyState === WsReadyStates.Open) {
       this.webSocket.send(message)
+    } else {
+      this.messageQueue.push(message)
     }
   }
 
diff --git a/node_modules/@hocuspocus/provider/src/MessageReceiver.ts b/node_modules/@hocuspocus/provider/src/MessageReceiver.ts
index b6847e9..08eac73 100644
--- a/node_modules/@hocuspocus/provider/src/MessageReceiver.ts
+++ b/node_modules/@hocuspocus/provider/src/MessageReceiver.ts
@@ -1,11 +1,11 @@
-import * as awarenessProtocol from 'y-protocols/awareness'
-import { readSyncMessage, messageYjsSyncStep2, messageYjsUpdate } from 'y-protocols/sync'
 import { readAuthMessage } from '@hocuspocus/common'
-import { readVarString } from 'lib0/decoding'
-import { MessageType } from './types.js'
+import { readVarInt, readVarString } from 'lib0/decoding'
+import * as awarenessProtocol from 'y-protocols/awareness'
+import { messageYjsSyncStep2, readSyncMessage } from 'y-protocols/sync'
 import { HocuspocusProvider } from './HocuspocusProvider.js'
 import { IncomingMessage } from './IncomingMessage.js'
 import { OutgoingMessage } from './OutgoingMessage.js'
+import { MessageType } from './types.js'
 
 export class MessageReceiver {
 
@@ -23,7 +23,7 @@ export class MessageReceiver {
     return this
   }
 
-  public apply(provider: HocuspocusProvider, emitSynced = true) {
+  public apply(provider: HocuspocusProvider, emitSynced: boolean) {
     const { message } = this
     const type = message.readVarUint()
 
@@ -50,6 +50,9 @@ export class MessageReceiver {
         provider.receiveStateless(readVarString(message.decoder))
         break
 
+      case MessageType.SyncStatus:
+        this.applySyncStatusMessage(provider, readVarInt(message.decoder) === 1)
+        break
       default:
         throw new Error(`Can’t apply message of unknown type: ${type}`)
     }
@@ -85,11 +88,11 @@ export class MessageReceiver {
     if (emitSynced && syncMessageType === messageYjsSyncStep2) {
       provider.synced = true
     }
+  }
 
-    if (syncMessageType === messageYjsUpdate || syncMessageType === messageYjsSyncStep2) {
-      if (provider.unsyncedChanges > 0) {
-        provider.updateUnsyncedChanges(-1)
-      }
+  applySyncStatusMessage(provider: HocuspocusProvider, applied: boolean) {
+    if (applied) {
+      provider.decrementUnsyncedChanges()
     }
   }
 
diff --git a/node_modules/@hocuspocus/provider/src/types.ts b/node_modules/@hocuspocus/provider/src/types.ts
index c7a6ede..f18eced 100644
--- a/node_modules/@hocuspocus/provider/src/types.ts
+++ b/node_modules/@hocuspocus/provider/src/types.ts
@@ -1,15 +1,15 @@
+import { Encoder } from 'lib0/encoding'
+import type { CloseEvent, Event, MessageEvent } from 'ws'
 import { Awareness } from 'y-protocols/awareness'
 import * as Y from 'yjs'
-import { Encoder } from 'lib0/encoding'
-import type { Event, CloseEvent, MessageEvent } from 'ws'
+import { IncomingMessage } from './IncomingMessage.js'
+import { OutgoingMessage } from './OutgoingMessage.js'
 import { AuthenticationMessage } from './OutgoingMessages/AuthenticationMessage.js'
 import { AwarenessMessage } from './OutgoingMessages/AwarenessMessage.js'
 import { QueryAwarenessMessage } from './OutgoingMessages/QueryAwarenessMessage.js'
 import { SyncStepOneMessage } from './OutgoingMessages/SyncStepOneMessage.js'
 import { SyncStepTwoMessage } from './OutgoingMessages/SyncStepTwoMessage.js'
 import { UpdateMessage } from './OutgoingMessages/UpdateMessage.js'
-import { IncomingMessage } from './IncomingMessage.js'
-import { OutgoingMessage } from './OutgoingMessage.js'
 
 export enum MessageType {
   Sync = 0,
@@ -18,6 +18,7 @@ export enum MessageType {
   QueryAwareness = 3,
   Stateless = 5,
   CLOSE = 7,
+  SyncStatus = 8,
 }
 
 export enum WebSocketStatus {

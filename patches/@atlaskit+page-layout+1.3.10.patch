diff --git a/node_modules/@atlaskit/page-layout/dist/esm/common/constants.js b/node_modules/@atlaskit/page-layout/dist/esm/common/constants.js
index be1aa62..ac57aae 100644
--- a/node_modules/@atlaskit/page-layout/dist/esm/common/constants.js
+++ b/node_modules/@atlaskit/page-layout/dist/esm/common/constants.js
@@ -21,7 +21,7 @@ export var RIGHT_SIDEBAR = 'right-sidebar';
 // Default slot dimension values
 export var DEFAULT_BANNER_HEIGHT = 56;
 export var DEFAULT_TOP_NAVIGATION_HEIGHT = 56;
-export var DEFAULT_LEFT_SIDEBAR_WIDTH = 240;
+export var DEFAULT_LEFT_SIDEBAR_WIDTH = 140;
 export var DEFAULT_RIGHT_SIDEBAR_WIDTH = 280;
 export var DEFAULT_RIGHT_PANEL_WIDTH = 368;
 export var DEFAULT_LEFT_PANEL_WIDTH = 368;
@@ -30,7 +30,7 @@ export var DEFAULT_LEFT_PANEL_WIDTH = 368;
 export var COLLAPSED_LEFT_SIDEBAR_WIDTH = 20;
 export var MIN_LEFT_SIDEBAR_WIDTH = 80;
 export var DEFAULT_LEFT_SIDEBAR_FLYOUT_WIDTH = 240;
-export var MIN_LEFT_SIDEBAR_DRAG_THRESHOLD = 200;
+export var MIN_LEFT_SIDEBAR_DRAG_THRESHOLD = 40;
 export var TRANSITION_DURATION = 300;
 export var FLYOUT_DELAY = 200;
 export var LEFT_SIDEBAR_EXPANDED_WIDTH = 'expandedLeftSidebarWidth';
diff --git a/node_modules/@atlaskit/page-layout/dist/esm/components/resize-control/index.js b/node_modules/@atlaskit/page-layout/dist/esm/components/resize-control/index.js
index 41881b9..d40bee5 100644
--- a/node_modules/@atlaskit/page-layout/dist/esm/components/resize-control/index.js
+++ b/node_modules/@atlaskit/page-layout/dist/esm/components/resize-control/index.js
@@ -1,13 +1,13 @@
+import _defineProperty from "@babel/runtime/helpers/defineProperty";
 import _extends from "@babel/runtime/helpers/extends";
 import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
-import _defineProperty from "@babel/runtime/helpers/defineProperty";
 function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
 function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
 /** @jsx jsx */
-import { useCallback, useContext, useMemo, useRef, useState } from 'react';
 import { css, jsx } from '@emotion/react';
 import { bindAll } from 'bind-event-listener';
 import rafSchd from 'raf-schd';
+import { useCallback, useContext, useMemo, useRef, useState } from 'react';
 import { COLLAPSED_LEFT_SIDEBAR_WIDTH, DEFAULT_LEFT_SIDEBAR_WIDTH, IS_SIDEBAR_DRAGGING, MIN_LEFT_SIDEBAR_DRAG_THRESHOLD, RESIZE_BUTTON_SELECTOR, RESIZE_CONTROL_SELECTOR, VAR_LEFT_SIDEBAR_WIDTH } from '../../common/constants';
 import { getLeftPanelWidth, getLeftSidebarPercentage } from '../../common/utils';
 import { SidebarResizeContext } from '../../controllers/sidebar-resize-context';
@@ -99,7 +99,7 @@ var ResizeControl = function ResizeControl(_ref) {
   };
   var onMouseMove = rafSchd(function (event) {
     // Allow the sidebar to be 50% of the available page width
-    var maxWidth = Math.round(window.innerWidth / 2);
+    var maxWidth = Math.min(450, Math.round(window.innerWidth / 2));
     var leftPanelWidth = getLeftPanelWidth();
     var leftSidebarWidth = leftSidebarState.leftSidebarWidth;
     var invalidDrag = event.clientX < 0;
diff --git a/node_modules/@atlaskit/page-layout/dist/esm/components/slots/left-sidebar.js b/node_modules/@atlaskit/page-layout/dist/esm/components/slots/left-sidebar.js
index fa157b1..7e7ca33 100644
--- a/node_modules/@atlaskit/page-layout/dist/esm/components/slots/left-sidebar.js
+++ b/node_modules/@atlaskit/page-layout/dist/esm/components/slots/left-sidebar.js
@@ -3,11 +3,11 @@ function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (O
 function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
 /* eslint-disable @repo/internal/dom-events/no-unsafe-event-listeners */
 /** @jsx jsx */
-import { useContext, useEffect, useRef } from 'react';
 import { jsx } from '@emotion/react';
+import { useContext, useEffect, useRef } from 'react';
 import { COLLAPSED_LEFT_SIDEBAR_WIDTH, DEFAULT_LEFT_SIDEBAR_WIDTH, FLYOUT_DELAY, RESIZE_BUTTON_SELECTOR, VAR_LEFT_SIDEBAR_FLYOUT, VAR_LEFT_SIDEBAR_WIDTH } from '../../common/constants';
 import { getGridStateFromStorage, mergeGridStateIntoStorage, resolveDimension } from '../../common/utils';
-import { publishGridState, SidebarResizeContext, useSkipLink } from '../../controllers';
+import { SidebarResizeContext, publishGridState, useSkipLink } from '../../controllers';
 import ResizeControl from '../resize-control';
 import LeftSidebarInner from './internal/left-sidebar-inner';
 import LeftSidebarOuter from './internal/left-sidebar-outer';
@@ -87,7 +87,7 @@ var LeftSidebar = function LeftSidebar(props) {
       }
     };
   }, [isLocked, lastLeftSidebarWidth, leftSidebarState, setLeftSidebarState]);
-  var _width = Math.max(width || 0, DEFAULT_LEFT_SIDEBAR_WIDTH);
+  var _width = Math.max(width || 0, DEFAULT_LEFT_SIDEBAR_WIDTH + 100);
   var collapsedStateOverrideOpen = collapsedState === 'expanded';
   var leftSidebarWidthOnMount;
   if (collapsedStateOverrideOpen) {

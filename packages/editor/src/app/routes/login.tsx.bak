import { observer } from "mobx-react-lite";
import { Navigate, useLocation, useNavigate } from "react-router-dom";
import { getStoreService } from "../../store/local/stores";
import { ValidatedServerConfig } from "../matrix-auth/auth/util/AutoDiscoveryUtils";

import { Auth } from "@supabase/auth-ui-react";
import {
  // Import predefined theme
  ThemeSupa,
} from "@supabase/auth-ui-shared";
import { createClient } from "@supabase/supabase-js";

const ANON_KEY =
  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0";

const supabase = createClient("http://localhost:54321", ANON_KEY);

export const Login = observer((props: { config: ValidatedServerConfig }) => {
  const { matrixAuthStore, sessionStore } = getStoreService();

  const location = useLocation();
  const navigate = useNavigate();

  const from = (location.state as any)?.from?.pathname || "/";
  let pageAfterLogin = window.location.origin + from;

  if (sessionStore.isLoggedIn) {
    return <Navigate to={from} replace={true} />;
  }

  return (
    <div style={{ maxWidth: "600px" }}>
      <Auth supabaseClient={supabase} appearance={{ theme: ThemeSupa }} />
    </div>
    // <div>test</div>
    // <LoginComponent
    //   serverConfig={props.config}
    //   onLoggedIn={matrixAuthStore.onUserCompletedLoginFlow}
    //   onRegisterClick={() => {
    //     navigate(toRegisterScreen(), {
    //       state: { from: (location.state as any)?.from },
    //     });
    //   }}
    //   onServerConfigChange={() => {
    //     // TODO
    //     console.log("config change (not implemented)");
    //   }}
    //   // TODO: does this work correctly after SSO login is declined?
    //   pageAfterLogin={pageAfterLogin}
    //   onForgotPasswordClick={() => navigate(toRecoverPasswordScreen())}
    // />
  );
});

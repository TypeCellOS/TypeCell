/* @import-normalize; */
@import url("https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap");
@import "github-markdown.css";

html {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
  -moz-box-sizing: inherit;
  box-sizing: inherit;
}

a:active,
a:focus {
  outline: none;
}

/* @import "~react-resizable/css/styles.css"; */
body {
  margin: 0;

  font-family: "Inter", "SF Pro Display", -apple-system, BlinkMacSystemFont,
    "Open Sans", "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell",
    "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  color: rgb(60, 65, 73);
}

html,
body,
#root,
.fullSize {
  width: 100%;
  height: 100%;
}

.page {
  overflow-y: auto;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
    monospace;
}

.react-draggable {
  position: absolute;
}

.button {
  border-radius: 6px;
  padding: 1em 2em;
  background-color: #1e2328;
  color: white;
  font-weight: bold;

  transition: 150ms all ease-in-out;
}

.button:hover {
  color: white;
  text-decoration: none;
}

.button.primary {
  background-color: #1fb597;
}

.button.primary:hover {
  background-color: #13cca7;
}

.button.secondary {
  background-color: #7897ab;
}

.button.secondary:hover {
  background-color: #8aa8bd;
}
/* Some generic layout classes */
.row {
  display: flex;
  align-items: stretch;
  flex-wrap: wrap;
  width: 100%;
}

.container {
  margin: 0 auto;
  max-width: calc(731px);
}

.cellList-item {
  padding-left: 100px;
  /* border:1px solid black; */
  margin: 10px;
  position: relative;
}

.cellList-add-single {
  position: absolute;
  left: 50%;
  top: 50%;
}

.cellList-add {
  color: #ccc;
}

.cellList-add:hover {
  color: black;
}

.notebookCell-sideIcon {
  /* margin-top: 10px; */
  margin-top: 5px;
  margin-right: 5px;
  z-index: 10;
  cursor: pointer;
}

.notebookCell-content {
  border-radius: 4px;
  box-shadow: rgb(235, 236, 240) 0px 0px 0px 1.2px;
  width: 100%;
}

.slate-typecell.collapsed .notebookCell-content {
  box-shadow: none;
}

.notebookCell-codeContainer {
  position: relative;
  padding-left: 10px;
  background: #f4f5f7;
  width: 100%; /* todo: fix when making window smaller */
  min-height: 40px; /* so toolbar fits */
}

.inlineCell,
.inlineCell .output {
  display: inline;
  padding: 0;
}

.inlineCell-codeContainer {
  position: absolute;
  width: 450px;
  left: calc(50% - 225px);
  top: 15px;
  z-index: 1000;
}

.inlineCell-codeContainer > .code {
  border-radius: 4px;
  box-shadow: rgb(235, 236, 240) 0px 0px 0px 1.2px;
}

.inlineCell-codeContainer > .arrow {
  display: block;
  margin: 0 auto;
  margin-bottom: -4px;
  color: rgb(235, 236, 240);
}

.fullCell-codeContainer {
  padding-left: 10px;
  background: #f4f5f7;
  height: 100%;
  width: 100%; /* todo: fix when making window smaller */
}

.fullCell {
  /* position:relative; */
  display: contents;
}

.fullCell > :first-child {
  position: relative;
}

.outputWrapper {
  display: inline-block;
}
.fullCell.inspectingHover > :first-child::before {
  /* background: #ccc; */
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
  background: rgba(187, 222, 251, 0.68);
  z-index: 1000;
  pointer-events: none;
}

.output {
  /* padding: 10px; */
  /* because it contains inline-block outputWrapper */
  line-height: 0;
}

.slate-typecell.collapsed .output {
  padding: 0;
  padding-top: 5px;
}

.output > * {
  line-height: normal;
}

.draggableWindow {
  top: 0;
  position: absolute;
  z-index: 1000;
}

.window {
  border-radius: 4px;
  box-shadow: rgb(235, 236, 240) 0px 0px 0px 1.2px;
  background: white;
}

.windowContent {
  overflow: hidden;
}

.windowTitle {
  padding: 4px;

  border-bottom: 1px solid rgb(235, 236, 240);
  text-align: center;
  /* background: #ffffff; */
  /* background-image: -webkit-linear-gradient(top, rgb(250, 250, 250) 0px, rgb(246, 246, 246) 100%); */
  -webkit-user-select: none;
  user-select: none;
  cursor: default;
  font-family: -apple-system, BlinkMacSystemFont, "Helvetica Neue", Arial,
    sans-serif;
  font-size: 13px;
  letter-spacing: 0px;
  color: rgb(100, 100, 100);
}

/* .field {
  transform:
    scale(0.75)
    rotateY(-30deg)
    rotateX(45deg)
    translateZ(4.5rem);
  transform-origin: 50% 100%;
  transform-style: preserve-3d;
  box-shadow: 1rem 1rem 2rem rgba(0,0,0,0.25);
  transition: 0.6s ease transform;
}
.field:hover {
  transform: scale(1);
}
.field::before {
  transform: translateZ(4rem);
}
.field::before:hover {
  transform: translateZ(0);
}
.field::after {
  transform: translateZ(-4rem);
}
.field::after:hover {
  transform: translateZ(-1px);
} */

.hint::before {
  display: inline-block;
  position: absolute;
  content: attr(data-hint);
}

.hint,
.placeholder {
  pointer-events: none;
  display: inline-block;
  width: 0;
  max-width: 100%;
  white-space: nowrap;
  opacity: 0.333;
  user-select: none;
  font-style: italic;
  font-weight: normal;
  text-decoration: none;
}

.cellList {
  width: 100%;
  position: relative;
}
/* styles below based on pluto */
.cellList {
  padding-top: 20px;
  padding-bottom: 4rem;
  padding-left: 25px;
  padding-right: 6px;
  align-content: center;
  width: 100%;
  flex: 1 1 0%;
  overflow-y: auto;
}

.cellList > div {
  margin: 0 auto;
  max-width: calc(731px);
}

.cellList-item {
  margin: 0;
  padding: 0;
  display: block;
  min-height: calc(25px);
  margin-top: 17px;
  position: relative;
}

/* .shoulder > button, */
.cellList-item > button {
  position: absolute;
  margin: 0px;
  padding: 1px;
  opacity: 50%;
  border: none;
  background: none;
  cursor: pointer;
  /* color: hsl(204, 86%, 35%); */
  color: black;
  font-family: "Segoe UI Emoji", "Roboto Mono", monospace;
  font-size: 0.75rem;
  z-index: 3;
  /* CodeMirror is 2 */
}

.shoulder {
  position: absolute;
  /* top: 0px; */
  /* bottom: 0px; */
  left: -2000px;
  width: 2000px;
  cursor: move;
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: flex-start;
  /* Add an invisible border around the shoulder, to make it easier to click on. (The are between two cells is divided in two, each half belongs to the closest pluto-cell.) */
  top: calc(0px - 0.5 * 17px);
  bottom: calc(0px - 0.5 * 17px);
  border-top: calc(0.5 * 17px) solid rgba(0, 0, 0, 0);
  border-bottom: calc(0.5 * 17px) solid rgba(0, 0, 0, 0);
}

.shoulder:hover {
  background: rgba(0, 0, 0, 0.05);
  background-clip: padding-box;
}

/* .shoulder > button {
  flex: 0 0 auto;
  position: sticky;
  top: 0px;
  margin-top: 4px;
  margin-right: 5px;
  padding: 0px 1px;
} */

pluto-cell:focus-within > .shoulder > button {
  /* we use padding instead of 4px extra margin to move the eye to the left so that the hitbox becomes grows - you want to be able to double click the button */
  padding-right: 4px;
}

/* pluto-cell.code_folded.inline-output > .shoulder > button {
  margin-top: 3px;
} */

pluto-cell > button > span,
pluto-input > button > span {
  pointer-events: none;
}

@media screen and (any-pointer: fine) {
  .cellList-item > button,
  .shoulder > button,
  .cellList-item > pluto-runarea {
    opacity: 0;
    /* to make it feel smooth: */
    transition: opacity 0.25s ease-in-out;
  }
  .cellList-item .notebookCell-sideIcon {
    opacity: 0.5;
    transition: opacity 0.25s ease-in-out;
  }
  .cellList-item.hover > button,
  .cellList-item.hover > .shoulder > button {
    opacity: 0.25;
    transition: opacity 0.25s ease-in-out;
  }
  .cellList-item .notebookCell-sideIcon:hover,
  .cellList-item > button:hover,
  .cellList-item > .shoulder > button:hover {
    opacity: 1;
    /* to make it feel snappy: */
    transition: opacity 0.05s ease-in-out;
  }
}

@media screen and (any-pointer: coarse) {
  .cellList-item > button,
  .cellList-item > pluto-runarea {
    opacity: 0;
    /* to make it feel smooth: */
    transition: opacity 0.25s ease-in-out;
  }
  .cellList-item .notebookCell-sideIcon {
    opacity: 0.5;
  }
  .cellList-item:focus-within > button,
  .cellList-item:focus-within > .shoulder > button {
    opacity: 0.25;
  }
  .cellList-item > button:focus-within,
  .cellList-item > .shoulder > button:focus-within {
    opacity: 1;
    /* to make it feel snappy: */
    transition: opacity 0.05s ease-in-out;
  }
}

.cellList-item > button > span::after,
.shoulder > button > span::after {
  display: block;
  content: " " !important;
  background-size: 17px 17px;
  height: 17px;
  width: 17px;
}

.cellList-item > button.add_cell {
  left: -12px;
}

.cellList-item > button.add_cell.before {
  margin-top: calc(-19px - 0.5 * (17px - 19px)) !important;
}

.cellList-item > button.add_cell.after {
  bottom: 1px;
  margin-bottom: calc(-20px - 0.5 * (17px - 19px));
}

.cellList-item > button.add_cell > span::after {
  /* background-image: url(https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.0.0/src/svg/add-circle-outline.svg); */
  background-image: url(https://cdn.jsdelivr.net/gh/ionic-team/ionicons@5.0.0/src/svg/add-outline.svg);
}

.cellList-item .notebookCell-sideIcon {
  /* margin-top: 10px; */
  margin-top: 0;
  margin-right: 0;
  position: absolute;
  left: -20px;
  top: 5px;
  z-index: 10;
}

.notebookCell.markdown.collapsed .notebookCell-content {
  box-shadow: none;
}

.notebookCell.markdown.collapsed .notebookCell-sideIcon {
  visibility: hidden;
}

.cellList-item.hover .notebookCell.markdown.collapsed .notebookCell-sideIcon {
  visibility: visible;
}

/* // https://github.com/react-dnd/react-dnd/issues/832#issuecomment-442071628
// TODO: should only be set when dragging */

/* .cellList-item,
.cellList-item .notebookCell {
  transform: translate3d(0, 0, 0);
} */

.dropruler {
  position: absolute;
  left: 0px;
  right: 0px;
  height: 4px;
  /* margin-top: calc(-2px - 0.5 * 17px); */
  background: rgba(0, 0, 0, 0.5);
}

.dropruler.top {
  top: -11px;
}
.dropruler.bottom {
  bottom: -10px;
}

/* Define a set of colors to be used throughout the app for consistency
see https://atlassian.design/foundations/color for more info */
:root {
  --N800: #172b4d; /* Dark neutral used for tooltips and text on light background */
  --N40: #dfe1e6; /* Light neutral used for subtle borders and text on dark background */
}

.collaboration-cursor__caret {
  position: relative;
  margin-left: -1px;
  margin-right: -1px;
  border-left: 1px solid #0d0d0d;
  border-right: 1px solid #0d0d0d;
  word-break: normal;
  pointer-events: none;
}

/* Render the username above the caret */
.collaboration-cursor__label {
  position: absolute;
  top: -1.4em;
  left: -1px;
  font-size: 12px;
  font-style: normal;
  font-weight: 600;
  line-height: normal;
  user-select: none;
  color: #0d0d0d;
  padding: 0.1rem 0.3rem;
  border-radius: 3px 3px 3px 0;
  white-space: nowrap;
}

.yRemoteSelection {
  background-color: rgb(250, 129, 0, 0.5);
}
.yRemoteSelectionHead {
  position: absolute;
  border-left: orange solid 2px;
  border-top: orange solid 2px;
  border-bottom: orange solid 2px;
  height: 100%;
  box-sizing: border-box;
}
.yRemoteSelectionHead::after {
  position: absolute;
  content: " ";
  border: 3px solid orange;
  border-radius: 4px;
  left: -4px;
  top: -5px;
}

:focus {
  outline: none;
}

/*For the text inside the Node View Content*/
[data-node-view-content] > div {
  display: block;
  margin: 0;
  /* background: #eeeeee;  */
}

.ProseMirror p.is-empty::before {
  content: attr(data-placeholder);
  float: left;
  color: #aeb8c2;
  pointer-events: none;
  height: 0;
}

.ProseMirror pre {
  padding: 8px;
  border-radius: 5px;
  background-color: #333 !important;
  color: #eee !important;
}

.ProseMirror blockquote {
  border-left: 2px solid #262626;
  color: #262626;
}

.ProseMirror hr {
  border: 1px solid #262626;
  border-radius: 5px;
  background-color: #262626;
}

.ProseMirror table .react-renderer {
  margin: 0;
}

.ProseMirror table [data-node-view-content] > div {
  margin: 0;
  background: transparent;
  padding: 0;
  margin: auto;
}

blockquote {
  margin: 0;
}

.ProseMirror ul {
  margin: 0;
  padding: 0;
}

.ProseMirror li {
  margin-left: 1.1rem;
}

.ProseMirror {
  overflow-x: hidden;
}

.indent {
  margin-left: 1.1rem;
}

.ProseMirror img {
  display: block;
  max-width: 100%;
}

.ProseMirror blockquote {
  padding: 0.5rem 1rem;
}

.ProseMirror blockquote p {
  padding: 0.5rem 0;
}

.ProseMirror hr {
  position: relative;
  top: 0.5rem; /* half of handle height */
}

.ProseMirror table {
  table-layout: fixed;
  margin: 0;
  border-collapse: collapse;
}

.ProseMirror table > div {
  max-width: 100%;
}

.ProseMirror tr {
  max-width: 100%;
  border: solid 0.05em black;
  word-wrap: break-all;
}

.ProseMirror td,
.ProseMirror th {
  word-wrap: break-word;
  padding: 0.5em;
  border: solid 0.05em black !important;
}

.ProseMirror .selectedCell:after {
  z-index: 2;
  position: absolute;
  content: "";
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background: rgba(200, 200, 255, 0.4);
  pointer-events: none;
}

.ProseMirror .tableWrapper {
  overflow-x: auto;
}

.ProseMirror .resize-cursor {
  cursor: ew-resize;
  cursor: col-resize;
}
